

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Nov 27 13:23:09 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   100                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   101                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   102                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   103   000000                     
   104                           ; Generated 23/03/2023 GMT
   105                           ; 
   106                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution. Publication is not required when
   120                           ;        this file is used in an embedded application.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC18F4620 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138   000000                     
   139                           	psect	idataCOMRAM
   140   004AFA                     __pidataCOMRAM:
   141                           	callstack 0
   142                           
   143                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3611
   144   004AFA  68                 	db	104
   145                           
   146                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3609
   147   004AFB  5A                 	db	90
   148                           
   149                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3607
   150   004AFC  62                 	db	98
   151                           
   152                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3605
   153   004AFD  2A                 	db	42
   154                           
   155                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3600
   156   004AFE  1A                 	db	26
   157                           
   158                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3598
   159   004AFF  62                 	db	98
   160                           
   161                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3596
   162   004B00  2A                 	db	42
   163                           
   164                           ;initializer for _RB7_Flag
   165   004B01  01                 	db	1
   166                           
   167                           ;initializer for _RB6_Flag
   168   004B02  01                 	db	1
   169                           
   170                           ;initializer for _RB5_Flag
   171   004B03  01                 	db	1
   172                           
   173                           ;initializer for _RB4_Flag
   174   004B04  01                 	db	1
   175                           
   176                           	psect	idataBANK0
   177   004AC4                     __pidataBANK0:
   178                           	callstack 0
   179                           
   180                           ;initializer for _lat_registers
   181   004AC4  89                 	db	137
   182   004AC5  0F                 	db	15
   183   004AC6  8A                 	db	138
   184   004AC7  0F                 	db	15
   185   004AC8  8B                 	db	139
   186   004AC9  0F                 	db	15
   187   004ACA  8C                 	db	140
   188   004ACB  0F                 	db	15
   189   004ACC  8D                 	db	141
   190   004ACD  0F                 	db	15
   191                           
   192                           ;initializer for _dc_motor_2
   193   004ACE  13                 	db	19
   194   004ACF  1B                 	db	27
   195                           
   196                           ;initializer for _dc_motor_1
   197   004AD0  1A                 	db	26
   198   004AD1  22                 	db	34
   199                           
   200                           	psect	idataBANK1
   201   0045FE                     __pidataBANK1:
   202                           	callstack 0
   203                           
   204                           ;initializer for _port_registers
   205   0045FE  80                 	db	128
   206   0045FF  0F                 	db	15
   207   004600  81                 	db	129
   208   004601  0F                 	db	15
   209   004602  82                 	db	130
   210   004603  0F                 	db	15
   211   004604  83                 	db	131
   212   004605  0F                 	db	15
   213   004606  84                 	db	132
   214   004607  0F                 	db	15
   215                           
   216                           ;initializer for _tris_registers
   217   004608  92                 	db	146
   218   004609  0F                 	db	15
   219   00460A  93                 	db	147
   220   00460B  0F                 	db	15
   221   00460C  94                 	db	148
   222   00460D  0F                 	db	15
   223   00460E  95                 	db	149
   224   00460F  0F                 	db	15
   225   004610  96                 	db	150
   226   004611  0F                 	db	15
   227                           
   228                           ;initializer for _lcd_2
   229   004612  32                 	db	50
   230   004613  3A                 	db	58
   231   004614  03                 	db	3
   232   004615  0B                 	db	11
   233   004616  13                 	db	19
   234   004617  1B                 	db	27
   235   004618  23                 	db	35
   236   004619  2B                 	db	43
   237   00461A  33                 	db	51
   238   00461B  3B                 	db	59
   239                           
   240                           ;initializer for _keypad1
   241   00461C  32                 	db	50
   242   00461D  3A                 	db	58
   243   00461E  03                 	db	3
   244   00461F  0B                 	db	11
   245   004620  53                 	db	83
   246   004621  5B                 	db	91
   247   004622  63                 	db	99
   248   004623  6B                 	db	107
   249                           
   250                           ;initializer for _seg1
   251   004624  02                 	db	2
   252   004625  0A                 	db	10
   253   004626  12                 	db	18
   254   004627  1A                 	db	26
   255   004628  01                 	db	1
   256                           
   257                           ;initializer for _ccp1_obj
   258   004629  00                 	db	0
   259   00462A  02                 	db	2
   260   00462B  00                 	db	0
   261   00462C  12                 	db	18
   262   00462D  00                 	db	0
   263   00462E  4E20               	dw	20000
   264   004630  0000               	dw	0
   265   004632  01                 	db	1
   266   004633  01                 	db	1
   267   004634  00                 	db	0
   268   004635  00                 	db	0
   269   004636  00                 	db	0
   270   004637  00                 	db	0
   271   004638  00                 	db	0
   272   004639  00                 	db	0
   273                           
   274                           ;initializer for _adc_a0
   275   00463A  26                 	db	low _ADC_DefaultinterruptHandler
   276   00463B  4A                 	db	high _ADC_DefaultinterruptHandler
   277   00463C  00                 	db	0
   278   00463D  05                 	db	5
   279   00463E  05                 	db	5
   280   00463F  00                 	db	0
   281   004640  02                 	db	2
   282                           
   283                           ;initializer for _lcd_1
   284   004641  03                 	db	3
   285   004642  0B                 	db	11
   286   004643  13                 	db	19
   287   004644  1B                 	db	27
   288   004645  23                 	db	35
   289   004646  2B                 	db	43
   290                           
   291                           	psect	smallconst
   292   001000                     __psmallconst:
   293                           	callstack 0
   294   001000  00                 	db	0
   295   001001                     _btn_values:
   296                           	callstack 0
   297   001001  37                 	db	55
   298   001002  38                 	db	56
   299   001003  39                 	db	57
   300   001004  2F                 	db	47
   301   001005  34                 	db	52
   302   001006  35                 	db	53
   303   001007  36                 	db	54
   304   001008  2A                 	db	42
   305   001009  31                 	db	49
   306   00100A  32                 	db	50
   307   00100B  33                 	db	51
   308   00100C  2D                 	db	45
   309   00100D  23                 	db	35
   310   00100E  30                 	db	48
   311   00100F  3D                 	db	61
   312   001010  2B                 	db	43
   313   001011                     __end_of_btn_values:
   314                           	callstack 0
   315   001011  0000               	dw	0
   316   001013  4B00               	dw	19200
   317   001015                     __end_of_toint:
   318                           	callstack 0
   319   000000                     _SPBRGH	set	4016
   320   000000                     _SPBRG	set	4015
   321   000000                     _TXREG	set	4013
   322   000000                     _TXSTAbits	set	4012
   323   000000                     _RCREG	set	4014
   324   000000                     _RCSTAbits	set	4011
   325   000000                     _TMR3L	set	4018
   326   000000                     _TMR3H	set	4019
   327   000000                     _TMR2	set	4044
   328   000000                     _T2CONbits	set	4042
   329   000000                     _TMR1L	set	4046
   330   000000                     _TMR1H	set	4047
   331   000000                     _T1CONbits	set	4045
   332   000000                     _TMR0L	set	4054
   333   000000                     _TMR0H	set	4055
   334   000000                     _T0CONbits	set	4053
   335   000000                     _INTCON2bits	set	4081
   336   000000                     _INTCON3bits	set	4080
   337   000000                     _SSPBUF	set	4041
   338   000000                     _SSPSTATbits	set	4039
   339   000000                     _SSPADD	set	4040
   340   000000                     _SSPCON2bits	set	4037
   341   000000                     _SSPCON1bits	set	4038
   342   000000                     _EECON2	set	4007
   343   000000                     _ADCON1bits	set	4033
   344   000000                     _ADRESL	set	4035
   345   000000                     _ADRESH	set	4036
   346   000000                     _INTCONbits	set	4082
   347   000000                     _TRISD	set	3989
   348   000000                     _TRISC	set	3988
   349   000000                     _PR2	set	4043
   350   000000                     _TRISB	set	3987
   351   000000                     _TRISE	set	3990
   352   001015                     STR_4:
   353   001015  2D                 	db	45
   354   001016  2D                 	db	45
   355   001017  2D                 	db	45
   356   001018  2D                 	db	45
   357   001019  2D                 	db	45
   358   00101A  2D                 	db	45
   359   00101B  2D                 	db	45
   360   00101C  2D                 	db	45
   361   00101D  2D                 	db	45
   362   00101E  2D                 	db	45
   363   00101F  2D                 	db	45
   364   001020  2D                 	db	45
   365   001021  2D                 	db	45
   366   001022  2D                 	db	45
   367   001023  2D                 	db	45
   368   001024  2D                 	db	45
   369   001025  2D                 	db	45
   370   001026  2D                 	db	45
   371   001027  2D                 	db	45
   372   001028  2D                 	db	45
   373   001029  00                 	db	0
   374   00102A                     STR_5:
   375   00102A  54                 	db	84	;'T'
   376   00102B  45                 	db	69	;'E'
   377   00102C  4D                 	db	77	;'M'
   378   00102D  50                 	db	80	;'P'
   379   00102E  45                 	db	69	;'E'
   380   00102F  52                 	db	82	;'R'
   381   001030  41                 	db	65	;'A'
   382   001031  54                 	db	84	;'T'
   383   001032  55                 	db	85	;'U'
   384   001033  52                 	db	82	;'R'
   385   001034  45                 	db	69	;'E'
   386   001035  20                 	db	32
   387   001036  3A                 	db	58	;':'
   388   001037  00                 	db	0
   389   001038                     STR_1:
   390   001038  25                 	db	37
   391   001039  69                 	db	105	;'i'
   392   00103A  00                 	db	0
   393   00103B  00                 	db	0	; dummy byte at the end
   394   000000                     
   395                           	psect	nvBANK0
   396   0000FE                     __pnvBANK0:
   397                           	callstack 0
   398   0000FE                     _lm35_res1_Celsius:
   399                           	callstack 0
   400   0000FE                     	ds	2
   401   000000                     _PORTBbits	set	3969
   402   000000                     _TRISCbits	set	3988
   403   000000                     _PIE1bits	set	3997
   404   000000                     _ADCON2bits	set	4032
   405   000000                     _ADCON0bits	set	4034
   406   000000                     _PORTE	set	3972
   407   000000                     _PORTD	set	3971
   408   000000                     _PORTC	set	3970
   409   000000                     _PORTB	set	3969
   410   000000                     _PORTA	set	3968
   411   000000                     _LATA	set	3977
   412   000000                     _TRISA	set	3986
   413   000000                     _PIE2bits	set	4000
   414   000000                     _CCP2CONbits	set	4026
   415   000000                     _CCP1CONbits	set	4029
   416   000000                     _PIR1bits	set	3998
   417   000000                     _CCPR1L	set	4030
   418   000000                     _CCPR2L	set	4027
   419   000000                     _EECON1bits	set	4006
   420   000000                     _EEDATA	set	4008
   421   000000                     _EEADR	set	4009
   422   000000                     _EEADRH	set	4010
   423   000000                     _T3CONbits	set	4017
   424   000000                     _PIR2bits	set	4001
   425   000000                     _LATE	set	3981
   426   000000                     _LATD	set	3980
   427   000000                     _LATC	set	3979
   428   000000                     _LATB	set	3978
   429   000000                     _BAUDCONbits	set	4024
   430                           
   431                           ; #config settings
   432                           
   433                           	psect	cinit
   434   00418A                     __pcinit:
   435                           	callstack 0
   436   00418A                     start_initialization:
   437                           	callstack 0
   438   00418A                     __initialization:
   439                           	callstack 0
   440                           
   441                           ; Initialize objects allocated to BANK1 (73 bytes)
   442                           ; load TBLPTR registers with __pidataBANK1
   443   00418A  0EFE               	movlw	low __pidataBANK1
   444   00418C  6EF6               	movwf	tblptrl,c
   445   00418E  0E45               	movlw	high __pidataBANK1
   446   004190  6EF7               	movwf	tblptrh,c
   447   004192  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   448   004194  6EF8               	movwf	tblptru,c
   449   004196  EE01  F000         	lfsr	0,__pdataBANK1
   450   00419A  EE10 F049          	lfsr	1,73
   451   00419E                     copy_data0:
   452   00419E  0009               	tblrd		*+
   453   0041A0  CFF5 FFEE          	movff	tablat,postinc0
   454   0041A4  50E5               	movf	postdec1,w,c
   455   0041A6  50E1               	movf	fsr1l,w,c
   456   0041A8  E1FA               	bnz	copy_data0
   457                           
   458                           ; Initialize objects allocated to BANK0 (14 bytes)
   459                           ; load TBLPTR registers with __pidataBANK0
   460   0041AA  0EC4               	movlw	low __pidataBANK0
   461   0041AC  6EF6               	movwf	tblptrl,c
   462   0041AE  0E4A               	movlw	high __pidataBANK0
   463   0041B0  6EF7               	movwf	tblptrh,c
   464   0041B2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   465   0041B4  6EF8               	movwf	tblptru,c
   466   0041B6  EE00  F0F0         	lfsr	0,__pdataBANK0
   467   0041BA  EE10 F00E          	lfsr	1,14
   468   0041BE                     copy_data1:
   469   0041BE  0009               	tblrd		*+
   470   0041C0  CFF5 FFEE          	movff	tablat,postinc0
   471   0041C4  50E5               	movf	postdec1,w,c
   472   0041C6  50E1               	movf	fsr1l,w,c
   473   0041C8  E1FA               	bnz	copy_data1
   474                           
   475                           ; Initialize objects allocated to COMRAM (11 bytes)
   476                           ; load TBLPTR registers with __pidataCOMRAM
   477   0041CA  0EFA               	movlw	low __pidataCOMRAM
   478   0041CC  6EF6               	movwf	tblptrl,c
   479   0041CE  0E4A               	movlw	high __pidataCOMRAM
   480   0041D0  6EF7               	movwf	tblptrh,c
   481   0041D2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   482   0041D4  6EF8               	movwf	tblptru,c
   483   0041D6  EE00  F065         	lfsr	0,__pdataCOMRAM
   484   0041DA  EE10 F00B          	lfsr	1,11
   485   0041DE                     copy_data2:
   486   0041DE  0009               	tblrd		*+
   487   0041E0  CFF5 FFEE          	movff	tablat,postinc0
   488   0041E4  50E5               	movf	postdec1,w,c
   489   0041E6  50E1               	movf	fsr1l,w,c
   490   0041E8  E1FA               	bnz	copy_data2
   491                           
   492                           ; Clear objects allocated to BANK1 (50 bytes)
   493   0041EA  EE01  F049         	lfsr	0,__pbssBANK1
   494   0041EE  0E32               	movlw	50
   495   0041F0                     clear_0:
   496   0041F0  6AEE               	clrf	postinc0,c
   497   0041F2  06E8               	decf	wreg,f,c
   498   0041F4  E1FD               	bnz	clear_0
   499                           
   500                           ; Clear objects allocated to BANK0 (68 bytes)
   501   0041F6  EE00  F080         	lfsr	0,__pbssBANK0
   502   0041FA  0E44               	movlw	68
   503   0041FC                     clear_1:
   504   0041FC  6AEE               	clrf	postinc0,c
   505   0041FE  06E8               	decf	wreg,f,c
   506   004200  E1FD               	bnz	clear_1
   507                           
   508                           ; Clear objects allocated to COMRAM (2 bytes)
   509   004202  6A71               	clrf	(__pbssCOMRAM+1)& (0+255),c
   510   004204  6A70               	clrf	__pbssCOMRAM& (0+255),c
   511   004206                     end_of_initialization:
   512                           	callstack 0
   513   004206                     __end_of__initialization:
   514                           	callstack 0
   515   004206  9072               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   516   004208  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   517   00420A  0100               	movlb	0
   518   00420C  EF6E  F012         	goto	_main	;jump to C main() function
   519                           
   520                           	psect	bssCOMRAM
   521   000070                     __pbssCOMRAM:
   522                           	callstack 0
   523   000070                     _timer1_preload:
   524                           	callstack 0
   525   000070                     	ds	2
   526                           
   527                           	psect	dataCOMRAM
   528   000065                     __pdataCOMRAM:
   529                           	callstack 0
   530   000065                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3611:
   531                           	callstack 0
   532   000065                     	ds	1
   533   000066                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3609:
   534                           	callstack 0
   535   000066                     	ds	1
   536   000067                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3607:
   537                           	callstack 0
   538   000067                     	ds	1
   539   000068                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3605:
   540                           	callstack 0
   541   000068                     	ds	1
   542   000069                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3600:
   543                           	callstack 0
   544   000069                     	ds	1
   545   00006A                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3598:
   546                           	callstack 0
   547   00006A                     	ds	1
   548   00006B                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3596:
   549                           	callstack 0
   550   00006B                     	ds	1
   551   00006C                     _RB7_Flag:
   552                           	callstack 0
   553   00006C                     	ds	1
   554   00006D                     _RB6_Flag:
   555                           	callstack 0
   556   00006D                     	ds	1
   557   00006E                     _RB5_Flag:
   558                           	callstack 0
   559   00006E                     	ds	1
   560   00006F                     _RB4_Flag:
   561                           	callstack 0
   562   00006F                     	ds	1
   563                           
   564                           	psect	bssBANK0
   565   000080                     __pbssBANK0:
   566                           	callstack 0
   567   000080                     roundf@F527:
   568                           	callstack 0
   569   000080                     	ds	4
   570   000084                     _width:
   571                           	callstack 0
   572   000084                     	ds	2
   573   000086                     _prec:
   574                           	callstack 0
   575   000086                     	ds	2
   576   000088                     _EUSART_OverrunErrorHandler:
   577                           	callstack 0
   578   000088                     	ds	2
   579   00008A                     _EUSART_FramingErrorHandler:
   580                           	callstack 0
   581   00008A                     	ds	2
   582   00008C                     _EUSART_RxInterruptHandler:
   583                           	callstack 0
   584   00008C                     	ds	2
   585   00008E                     _EUSART_TxInterruptHandler:
   586                           	callstack 0
   587   00008E                     	ds	2
   588   000090                     _timer3_preload:
   589                           	callstack 0
   590   000090                     	ds	2
   591   000092                     _TMR3_InterruptHandler:
   592                           	callstack 0
   593   000092                     	ds	2
   594   000094                     _TMR2_InterruptHandler:
   595                           	callstack 0
   596   000094                     	ds	2
   597   000096                     _TMR1_InterruptHandler:
   598                           	callstack 0
   599   000096                     	ds	2
   600   000098                     _timer0_preload:
   601                           	callstack 0
   602   000098                     	ds	2
   603   00009A                     _TMR0_InterruptHandler:
   604                           	callstack 0
   605   00009A                     	ds	2
   606   00009C                     _SPI_InterruptHandler:
   607                           	callstack 0
   608   00009C                     	ds	2
   609   00009E                     _RB7_InterruptHandler_LOW:
   610                           	callstack 0
   611   00009E                     	ds	2
   612   0000A0                     _RB7_InterruptHandler_HIGH:
   613                           	callstack 0
   614   0000A0                     	ds	2
   615   0000A2                     _RB6_InterruptHandler_LOW:
   616                           	callstack 0
   617   0000A2                     	ds	2
   618   0000A4                     _RB6_InterruptHandler_HIGH:
   619                           	callstack 0
   620   0000A4                     	ds	2
   621   0000A6                     _RB5_InterruptHandler_LOW:
   622                           	callstack 0
   623   0000A6                     	ds	2
   624   0000A8                     _RB5_InterruptHandler_HIGH:
   625                           	callstack 0
   626   0000A8                     	ds	2
   627   0000AA                     _RB4_InterruptHandler_LOW:
   628                           	callstack 0
   629   0000AA                     	ds	2
   630   0000AC                     _RB4_InterruptHandler_HIGH:
   631                           	callstack 0
   632   0000AC                     	ds	2
   633   0000AE                     _INT2_InterruptHandler:
   634                           	callstack 0
   635   0000AE                     	ds	2
   636   0000B0                     _INT1_InterruptHandler:
   637                           	callstack 0
   638   0000B0                     	ds	2
   639   0000B2                     _INT0_InterruptHandler:
   640                           	callstack 0
   641   0000B2                     	ds	2
   642   0000B4                     _I2C_Report_Receive_Overflow_InterruptHandle:
   643                           	callstack 0
   644   0000B4                     	ds	2
   645   0000B6                     _I2C_DefaultInterruptHandle:
   646                           	callstack 0
   647   0000B6                     	ds	2
   648   0000B8                     _I2C_Report_Write_Collision_InterruptHandler:
   649                           	callstack 0
   650   0000B8                     	ds	2
   651   0000BA                     _CCP2_InterruptHandler:
   652                           	callstack 0
   653   0000BA                     	ds	2
   654   0000BC                     _CCP1_InterruptHandler:
   655                           	callstack 0
   656   0000BC                     	ds	2
   657   0000BE                     _ADC_InterruptHandler:
   658                           	callstack 0
   659   0000BE                     	ds	2
   660   0000C0                     _flags:
   661                           	callstack 0
   662   0000C0                     	ds	1
   663   0000C1                     _timer2_preload:
   664                           	callstack 0
   665   0000C1                     	ds	1
   666   0000C2                     _lm35_res1:
   667                           	callstack 0
   668   0000C2                     	ds	2
   669                           
   670                           	psect	dataBANK0
   671   0000F0                     __pdataBANK0:
   672                           	callstack 0
   673   0000F0                     _lat_registers:
   674                           	callstack 0
   675   0000F0                     	ds	10
   676   0000FA                     _dc_motor_2:
   677                           	callstack 0
   678   0000FA                     	ds	2
   679   0000FC                     _dc_motor_1:
   680                           	callstack 0
   681   0000FC                     	ds	2
   682                           
   683                           	psect	bssBANK1
   684   000149                     __pbssBANK1:
   685                           	callstack 0
   686   000149                     	ds	6
   687   00014F                     _dbuf:
   688                           	callstack 0
   689   00014F                     	ds	32
   690   00016F                     _timer2_obj:
   691                           	callstack 0
   692   00016F                     	ds	6
   693   000175                     _lm35_res1_str:
   694                           	callstack 0
   695   000175                     	ds	6
   696                           
   697                           	psect	dataBANK1
   698   000100                     __pdataBANK1:
   699                           	callstack 0
   700   000100                     _port_registers:
   701                           	callstack 0
   702   000100                     	ds	10
   703   00010A                     _tris_registers:
   704                           	callstack 0
   705   00010A                     	ds	10
   706   000114                     _lcd_2:
   707                           	callstack 0
   708   000114                     	ds	10
   709   00011E                     _keypad1:
   710                           	callstack 0
   711   00011E                     	ds	8
   712   000126                     _seg1:
   713                           	callstack 0
   714   000126                     	ds	5
   715   00012B                     _ccp1_obj:
   716                           	callstack 0
   717   00012B                     	ds	17
   718   00013C                     _adc_a0:
   719                           	callstack 0
   720   00013C                     	ds	7
   721   000143                     _lcd_1:
   722                           	callstack 0
   723   000143                     	ds	6
   724                           
   725                           	psect	cstackBANK1
   726   00017B                     __pcstackBANK1:
   727                           	callstack 0
   728   00017B                     _CCP_PWM_Set_Duty$5736:
   729                           	callstack 0
   730   00017B                     _CCP_PWM_Mode_Config$5737:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x0
   734   00017B                     	ds	4
   735   00017F                     CCP_PWM_Set_Duty@ret:
   736                           	callstack 0
   737   00017F                     _CCP_PWM_Mode_Config$5738:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x4
   741   00017F                     	ds	1
   742   000180                     CCP_PWM_Set_Duty@l_duty_temp:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x5
   746   000180                     	ds	3
   747   000183                     _main$5740:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x8
   751   000183                     	ds	4
   752   000187                     main@ret:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0xC
   756   000187                     	ds	1
   757                           
   758                           	psect	cstackBANK0
   759   0000C4                     __pcstackBANK0:
   760                           	callstack 0
   761   0000C4                     ?___flsub:
   762                           	callstack 0
   763   0000C4                     convert_uint16_to_string@value:
   764                           	callstack 0
   765   0000C4                     ___flsub@b:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x0
   769   0000C4                     	ds	2
   770   0000C6                     convert_uint16_to_string@str:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x2
   774   0000C6                     	ds	2
   775   0000C8                     ___flsub@a:
   776                           	callstack 0
   777   0000C8                     convert_uint16_to_string@Temp_String:
   778                           	callstack 0
   779                           
   780                           ; 6 bytes @ 0x4
   781   0000C8                     	ds	4
   782   0000CC                     ??_roundf:
   783                           
   784                           ; 1 bytes @ 0x8
   785   0000CC                     	ds	2
   786   0000CE                     convert_uint16_to_string@ret:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0xA
   790   0000CE                     	ds	1
   791   0000CF                     convert_uint16_to_string@DataCounter:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0xB
   795   0000CF                     	ds	1
   796   0000D0                     _roundf$5742:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0xC
   800   0000D0                     	ds	4
   801   0000D4                     roundf@e:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x10
   805   0000D4                     	ds	2
   806   0000D6                     _roundf$5741:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x12
   810   0000D6                     	ds	4
   811   0000DA                     roundf@u:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x16
   815   0000DA                     	ds	4
   816   0000DE                     roundf@y:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x1A
   820   0000DE                     	ds	4
   821   0000E2                     ?___fltol:
   822                           	callstack 0
   823   0000E2                     ___fltol@f1:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x1E
   827   0000E2                     	ds	4
   828   0000E6                     ??___fltol:
   829                           
   830                           ; 1 bytes @ 0x22
   831   0000E6                     	ds	4
   832   0000EA                     CCP_PWM_Set_Duty@_ccp_obj:
   833                           	callstack 0
   834   0000EA                     CCP_PWM_Mode_Config@_ccp_obj:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x26
   838   0000EA                     	ds	2
   839   0000EC                     CCP_PWM_Set_Duty@_duty:
   840                           	callstack 0
   841   0000EC                     CCP_Init@_ccp_obj:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x28
   845   0000EC                     	ds	1
   846   0000ED                     ??_CCP_PWM_Set_Duty:
   847                           
   848                           ; 1 bytes @ 0x29
   849   0000ED                     	ds	1
   850   0000EE                     
   851                           ; 1 bytes @ 0x2A
   852   0000EE                     	ds	1
   853   0000EF                     CCP_Init@ret:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x2B
   857   0000EF                     	ds	1
   858                           
   859                           	psect	cstackCOMRAM
   860   000001                     __pcstackCOMRAM:
   861                           	callstack 0
   862   000001                     RB4_ISR@RB4_Source:
   863                           	callstack 0
   864   000001                     RB5_ISR@RB5_Source:
   865                           	callstack 0
   866   000001                     RB6_ISR@RB6_Source:
   867                           	callstack 0
   868   000001                     RB7_ISR@RB7_Source:
   869                           	callstack 0
   870   000001                     ADC_GetConversionResult@_adc:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x0
   874   000001                     	ds	2
   875   000003                     ADC_GetConversionResult@conversion_result:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x2
   879   000003                     	ds	2
   880   000005                     ??_ADC_GetConversionResult:
   881                           
   882                           ; 1 bytes @ 0x4
   883   000005                     	ds	3
   884   000008                     ADC_GetConversionResult@ret:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x7
   888   000008                     	ds	1
   889   000009                     ??_InterruptManager:
   890                           
   891                           ; 1 bytes @ 0x8
   892   000009                     	ds	5
   893   00000E                     ??_adc_input_channel_port_configure:
   894   00000E                     ?___awdiv:
   895                           	callstack 0
   896   00000E                     ?___awmod:
   897                           	callstack 0
   898   00000E                     ?___flneg:
   899                           	callstack 0
   900   00000E                     ?___xxtofl:
   901                           	callstack 0
   902   00000E                     ADC_StartConversion@_adc:
   903                           	callstack 0
   904   00000E                     select_result_format@_adc:
   905                           	callstack 0
   906   00000E                     configure_voltage_reference@_adc:
   907                           	callstack 0
   908   00000E                     CCP_PWM_Start@_ccp_obj:
   909                           	callstack 0
   910   00000E                     CCP_Interrupt_Config@_ccp_obj:
   911                           	callstack 0
   912   00000E                     CCP_Mode_Timer_Select@_ccp_obj:
   913                           	callstack 0
   914   00000E                     gpio_pin_direction_intialize@_pin_config:
   915                           	callstack 0
   916   00000E                     gpio_pin_write_logic@_pin_config:
   917                           	callstack 0
   918   00000E                     Timer2_Init@_timer:
   919                           	callstack 0
   920   00000E                     ___awdiv@dividend:
   921                           	callstack 0
   922   00000E                     ___awmod@dividend:
   923                           	callstack 0
   924   00000E                     memset@dest:
   925                           	callstack 0
   926   00000E                     fputc@c:
   927                           	callstack 0
   928   00000E                     ___flge@ff1:
   929                           	callstack 0
   930   00000E                     ___flneg@f1:
   931                           	callstack 0
   932   00000E                     ___xxtofl@val:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0xD
   936   00000E                     	ds	2
   937   000010                     ??_gpio_pin_direction_intialize:
   938   000010                     ??_Timer2_Init:
   939   000010                     ADC_StartConversion@ret:
   940                           	callstack 0
   941   000010                     adc_input_channel_port_configure@channel:
   942                           	callstack 0
   943   000010                     gpio_pin_write_logic@logic:
   944                           	callstack 0
   945   000010                     ___awdiv@divisor:
   946                           	callstack 0
   947   000010                     ___awmod@divisor:
   948                           	callstack 0
   949   000010                     memset@c:
   950                           	callstack 0
   951   000010                     fputc@fp:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0xF
   955   000010                     	ds	1
   956   000011                     ??_gpio_pin_write_logic:
   957   000011                     CCP_PWM_Start@ret:
   958                           	callstack 0
   959   000011                     Timer2_Init@ret:
   960                           	callstack 0
   961   000011                     ADC_Init@_adc:
   962                           	callstack 0
   963   000011                     ADC_SelectChannel@_adc:
   964                           	callstack 0
   965   000011                     CCP_Capture_Mode_Config@_ccp_obj:
   966                           	callstack 0
   967   000011                     CCP_Compare_Mode_Config@_ccp_obj:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x10
   971   000011                     	ds	1
   972   000012                     ??_fputc:
   973   000012                     ??___xxtofl:
   974   000012                     ___awdiv@counter:
   975                           	callstack 0
   976   000012                     ___awmod@counter:
   977                           	callstack 0
   978   000012                     memset@n:
   979                           	callstack 0
   980   000012                     ___flge@ff2:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x11
   984   000012                     	ds	1
   985   000013                     ??_CCP_Capture_Mode_Config:
   986   000013                     ??_CCP_Compare_Mode_Config:
   987   000013                     ??_ADC_Init:
   988   000013                     ADC_SelectChannel@channel:
   989                           	callstack 0
   990   000013                     ___awdiv@sign:
   991                           	callstack 0
   992   000013                     ___awmod@sign:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x12
   996   000013                     	ds	1
   997   000014                     ??_memset:
   998   000014                     ??_ADC_SelectChannel:
   999   000014                     ?_abs:
  1000                           	callstack 0
  1001   000014                     ADC_Init@ret:
  1002                           	callstack 0
  1003   000014                     ___awdiv@quotient:
  1004                           	callstack 0
  1005   000014                     abs@a:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x13
  1009   000014                     	ds	1
  1010   000015                     ADC_SelectChannel@ret:
  1011                           	callstack 0
  1012   000015                     CCP_Capture_Mode_Config@ret:
  1013                           	callstack 0
  1014   000015                     CCP_Compare_Mode_Config@ret:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x14
  1018   000015                     	ds	1
  1019   000016                     ??_abs:
  1020   000016                     ??___flge:
  1021   000016                     gpio_pin_direction_intialize@ret:
  1022                           	callstack 0
  1023   000016                     ___xxtofl@sign:
  1024                           	callstack 0
  1025   000016                     ADC_StartConversion_Interrupt@_adc:
  1026                           	callstack 0
  1027   000016                     memset@k:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x15
  1031   000016                     	ds	1
  1032   000017                     gpio_pin_write_logic@ret:
  1033                           	callstack 0
  1034   000017                     ___xxtofl@exp:
  1035                           	callstack 0
  1036   000017                     fputs@s:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x16
  1040   000017                     	ds	1
  1041   000018                     ADC_StartConversion_Interrupt@channel:
  1042                           	callstack 0
  1043   000018                     lcd_send_4bits@lcd:
  1044                           	callstack 0
  1045   000018                     lcd_4bit_send_enable_signal@lcd:
  1046                           	callstack 0
  1047   000018                     dc_motor_move_right@_dc_motor:
  1048                           	callstack 0
  1049   000018                     dc_motor_stop@_dc_motor:
  1050                           	callstack 0
  1051   000018                     gpio_pin_intialize@_pin_config:
  1052                           	callstack 0
  1053   000018                     memset@s:
  1054                           	callstack 0
  1055   000018                     ___xxtofl@arg:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x17
  1059   000018                     	ds	1
  1060   000019                     ADC_StartConversion_Interrupt@ret:
  1061                           	callstack 0
  1062   000019                     fputs@fp:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x18
  1066   000019                     	ds	1
  1067   00001A                     ??_gpio_pin_intialize:
  1068   00001A                     lcd_send_4bits@_data_command:
  1069                           	callstack 0
  1070   00001A                     lcd_4bit_send_enable_signal@ret:
  1071                           	callstack 0
  1072   00001A                     dc_motor_move_right@ret:
  1073                           	callstack 0
  1074   00001A                     dc_motor_stop@ret:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x19
  1078   00001A                     	ds	1
  1079   00001B                     lcd_send_4bits@ret:
  1080                           	callstack 0
  1081   00001B                     gpio_pin_intialize@ret:
  1082                           	callstack 0
  1083   00001B                     fputs@c:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x1A
  1087   00001B                     	ds	1
  1088   00001C                     ?___flmul:
  1089                           	callstack 0
  1090   00001C                     lcd_4bit_send_command@lcd:
  1091                           	callstack 0
  1092   00001C                     lcd_4bit_send_char_data@lcd:
  1093                           	callstack 0
  1094   00001C                     dc_motor_initialize@_dc_motor:
  1095                           	callstack 0
  1096   00001C                     fputs@i:
  1097                           	callstack 0
  1098   00001C                     ___flmul@b:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x1B
  1102   00001C                     	ds	2
  1103   00001E                     lcd_4bit_send_command@command:
  1104                           	callstack 0
  1105   00001E                     lcd_4bit_send_char_data@data:
  1106                           	callstack 0
  1107   00001E                     dc_motor_initialize@ret:
  1108                           	callstack 0
  1109   00001E                     pad@fp:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x1D
  1113   00001E                     	ds	1
  1114   00001F                     lcd_4bit_send_command@ret:
  1115                           	callstack 0
  1116   00001F                     lcd_4bit_send_char_data@ret:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x1E
  1120   00001F                     	ds	1
  1121   000020                     lcd_4bit_intialize@lcd:
  1122                           	callstack 0
  1123   000020                     lcd_4bit_set_cursor@lcd:
  1124                           	callstack 0
  1125   000020                     pad@buf:
  1126                           	callstack 0
  1127   000020                     ___flmul@a:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x1F
  1131   000020                     	ds	2
  1132   000022                     ??_lcd_4bit_intialize:
  1133   000022                     lcd_4bit_set_cursor@row:
  1134                           	callstack 0
  1135   000022                     pad@p:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x21
  1139   000022                     	ds	1
  1140   000023                     lcd_4bit_set_cursor@coulmn:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x22
  1144   000023                     	ds	1
  1145   000024                     ??_lcd_4bit_set_cursor:
  1146   000024                     ??___flmul:
  1147   000024                     ??_pad:
  1148   000024                     lcd_4bit_intialize@l_data_pins_counter:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x23
  1152   000024                     	ds	1
  1153   000025                     lcd_4bit_intialize@ret:
  1154                           	callstack 0
  1155   000025                     pad@i:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x24
  1159   000025                     	ds	1
  1160   000026                     lcd_4bit_set_cursor@ret:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x25
  1164   000026                     	ds	1
  1165   000027                     lcd_4bit_send_string_pos@lcd:
  1166                           	callstack 0
  1167   000027                     pad@w:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x26
  1171   000027                     	ds	1
  1172   000028                     ___flmul@sign:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x27
  1176   000028                     	ds	1
  1177   000029                     lcd_4bit_send_string_pos@row:
  1178                           	callstack 0
  1179   000029                     ___flmul@aexp:
  1180                           	callstack 0
  1181   000029                     dtoa@fp:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x28
  1185   000029                     	ds	1
  1186   00002A                     lcd_4bit_send_string_pos@column:
  1187                           	callstack 0
  1188   00002A                     ___flmul@grs:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x29
  1192   00002A                     	ds	1
  1193   00002B                     lcd_4bit_send_string_pos@str:
  1194                           	callstack 0
  1195   00002B                     dtoa@d:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x2A
  1199   00002B                     	ds	2
  1200   00002D                     lcd_4bit_send_string_pos@ret:
  1201                           	callstack 0
  1202   00002D                     _dtoa$5164:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x2C
  1206   00002D                     	ds	1
  1207   00002E                     ___flmul@bexp:
  1208                           	callstack 0
  1209                           
  1210                           ; 1 bytes @ 0x2D
  1211   00002E                     	ds	1
  1212   00002F                     dtoa@p:
  1213                           	callstack 0
  1214   00002F                     ___flmul@prod:
  1215                           	callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x2E
  1218   00002F                     	ds	2
  1219   000031                     dtoa@w:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x30
  1223   000031                     	ds	2
  1224   000033                     dtoa@s:
  1225                           	callstack 0
  1226   000033                     ___flmul@temp:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x32
  1230   000033                     	ds	1
  1231   000034                     dtoa@i:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x33
  1235   000034                     	ds	1
  1236   000035                     ?___fldiv:
  1237                           	callstack 0
  1238   000035                     ___fldiv@b:
  1239                           	callstack 0
  1240                           
  1241                           ; 4 bytes @ 0x34
  1242   000035                     	ds	1
  1243   000036                     vfpfcnvrt@fp:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x35
  1247   000036                     	ds	2
  1248   000038                     vfpfcnvrt@fmt:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x37
  1252   000038                     	ds	1
  1253   000039                     ___fldiv@a:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x38
  1257   000039                     	ds	1
  1258   00003A                     vfpfcnvrt@ap:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x39
  1262   00003A                     	ds	2
  1263   00003C                     ??_vfpfcnvrt:
  1264                           
  1265                           ; 1 bytes @ 0x3B
  1266   00003C                     	ds	1
  1267   00003D                     ??___fldiv:
  1268                           
  1269                           ; 1 bytes @ 0x3C
  1270   00003D                     	ds	1
  1271   00003E                     vfpfcnvrt@convarg:
  1272                           	callstack 0
  1273                           
  1274                           ; 4 bytes @ 0x3D
  1275   00003E                     	ds	3
  1276   000041                     ___fldiv@rem:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x40
  1280   000041                     	ds	1
  1281   000042                     vfpfcnvrt@cp:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x41
  1285   000042                     	ds	2
  1286   000044                     ?_vfprintf:
  1287                           	callstack 0
  1288   000044                     vfprintf@fp:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x43
  1292   000044                     	ds	1
  1293   000045                     ___fldiv@sign:
  1294                           	callstack 0
  1295                           
  1296                           ; 1 bytes @ 0x44
  1297   000045                     	ds	1
  1298   000046                     ___fldiv@new_exp:
  1299                           	callstack 0
  1300   000046                     vfprintf@fmt:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x45
  1304   000046                     	ds	2
  1305   000048                     vfprintf@ap:
  1306                           	callstack 0
  1307   000048                     ___fldiv@grs:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x47
  1311   000048                     	ds	2
  1312   00004A                     vfprintf@cfmt:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x49
  1316   00004A                     	ds	2
  1317   00004C                     ?_sprintf:
  1318                           	callstack 0
  1319   00004C                     ___fldiv@bexp:
  1320                           	callstack 0
  1321   00004C                     sprintf@s:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x4B
  1325   00004C                     	ds	1
  1326   00004D                     ___fldiv@aexp:
  1327                           	callstack 0
  1328                           
  1329                           ; 1 bytes @ 0x4C
  1330   00004D                     	ds	1
  1331   00004E                     ?___fladd:
  1332                           	callstack 0
  1333   00004E                     sprintf@fmt:
  1334                           	callstack 0
  1335   00004E                     ___fladd@b:
  1336                           	callstack 0
  1337                           
  1338                           ; 4 bytes @ 0x4D
  1339   00004E                     	ds	4
  1340   000052                     ___fladd@a:
  1341                           	callstack 0
  1342                           
  1343                           ; 4 bytes @ 0x51
  1344   000052                     	ds	2
  1345   000054                     sprintf@ap:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x53
  1349   000054                     	ds	2
  1350   000056                     ??___fladd:
  1351   000056                     sprintf@f:
  1352                           	callstack 0
  1353                           
  1354                           ; 12 bytes @ 0x55
  1355   000056                     	ds	4
  1356   00005A                     ___fladd@signs:
  1357                           	callstack 0
  1358                           
  1359                           ; 1 bytes @ 0x59
  1360   00005A                     	ds	1
  1361   00005B                     ___fladd@aexp:
  1362                           	callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x5A
  1365   00005B                     	ds	1
  1366   00005C                     ___fladd@bexp:
  1367                           	callstack 0
  1368                           
  1369                           ; 1 bytes @ 0x5B
  1370   00005C                     	ds	1
  1371   00005D                     ___fladd@grs:
  1372                           	callstack 0
  1373                           
  1374                           ; 1 bytes @ 0x5C
  1375   00005D                     	ds	1
  1376   00005E                     ?_roundf:
  1377                           	callstack 0
  1378   00005E                     roundf@x:
  1379                           	callstack 0
  1380                           
  1381                           ; 4 bytes @ 0x5D
  1382   00005E                     	ds	4
  1383   000062                     ___fltol@sign1:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x61
  1387   000062                     	ds	1
  1388   000063                     ___fltol@exp1:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x62
  1392   000063                     	ds	1
  1393   000064                     ??_CCP_PWM_Mode_Config:
  1394                           
  1395                           ; 1 bytes @ 0x63
  1396   000064                     	ds	1
  1397   000065                     
  1398                           ; 1 bytes @ 0x64
  1399 ;;
  1400 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1401 ;;
  1402 ;; *************** function _main *****************
  1403 ;; Defined at:
  1404 ;;		line 44 in file "application.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  ret             1   12[BANK1 ] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  2  1790[None  ] int 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;Total ram usage:        5 bytes
  1423 ;; Hardware stack levels required when called: 13
  1424 ;; This function calls:
  1425 ;;		_ADC_StartConversion_Interrupt
  1426 ;;		_CCP_PWM_Set_Duty
  1427 ;;		_CCP_PWM_Start
  1428 ;;		___fldiv
  1429 ;;		___flmul
  1430 ;;		___fltol
  1431 ;;		___xxtofl
  1432 ;;		_application_initialize
  1433 ;;		_convert_uint16_to_string
  1434 ;;		_dc_motor_move_right
  1435 ;;		_dc_motor_stop
  1436 ;;		_lcd_4bit_send_string_pos
  1437 ;;		_roundf
  1438 ;; This function is called by:
  1439 ;;		Startup code after reset
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text0
  1444   0024DC                     __ptext0:
  1445                           	callstack 0
  1446   0024DC                     _main:
  1447                           	callstack 18
  1448   0024DC                     
  1449                           ;application.c: 46:   application_initialize();
  1450   0024DC  ECD4  F024         	call	_application_initialize	;wreg free
  1451   0024E0  0E43               	movlw	low _lcd_1
  1452   0024E2  6E27               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1453   0024E4  0E01               	movlw	high _lcd_1
  1454   0024E6  6E28               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1455   0024E8  0E01               	movlw	1
  1456   0024EA  6E29               	movwf	lcd_4bit_send_string_pos@row^0,c
  1457   0024EC  0E01               	movlw	1
  1458   0024EE  6E2A               	movwf	lcd_4bit_send_string_pos@column^0,c
  1459   0024F0  0E15               	movlw	low STR_4
  1460   0024F2  6E2B               	movwf	lcd_4bit_send_string_pos@str^0,c
  1461   0024F4  0E10               	movlw	high STR_4
  1462   0024F6  6E2C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1463   0024F8  EC28  F020         	call	_lcd_4bit_send_string_pos	;wreg free
  1464   0024FC  0E43               	movlw	low _lcd_1
  1465   0024FE  6E27               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1466   002500  0E01               	movlw	high _lcd_1
  1467   002502  6E28               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1468   002504  0E02               	movlw	2
  1469   002506  6E29               	movwf	lcd_4bit_send_string_pos@row^0,c
  1470   002508  0E02               	movlw	2
  1471   00250A  6E2A               	movwf	lcd_4bit_send_string_pos@column^0,c
  1472   00250C  0E2A               	movlw	low STR_5
  1473   00250E  6E2B               	movwf	lcd_4bit_send_string_pos@str^0,c
  1474   002510  0E10               	movlw	high STR_5
  1475   002512  6E2C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1476   002514  EC28  F020         	call	_lcd_4bit_send_string_pos	;wreg free
  1477   002518  0E43               	movlw	low _lcd_1
  1478   00251A  6E27               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1479   00251C  0E01               	movlw	high _lcd_1
  1480   00251E  6E28               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1481   002520  0E03               	movlw	3
  1482   002522  6E29               	movwf	lcd_4bit_send_string_pos@row^0,c
  1483   002524  0E01               	movlw	1
  1484   002526  6E2A               	movwf	lcd_4bit_send_string_pos@column^0,c
  1485   002528  0E15               	movlw	low STR_4
  1486   00252A  6E2B               	movwf	lcd_4bit_send_string_pos@str^0,c
  1487   00252C  0E10               	movlw	high STR_4
  1488   00252E  6E2C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1489   002530  EC28  F020         	call	_lcd_4bit_send_string_pos	;wreg free
  1490   002534  0E2B               	movlw	low _ccp1_obj
  1491   002536  0100               	movlb	0	; () banked
  1492   002538  6FEA               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  1493   00253A  0E01               	movlw	high _ccp1_obj
  1494   00253C  6FEB               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  1495   00253E  0E00               	movlw	0
  1496   002540  6FEC               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  1497   002542  EC94  F015         	call	_CCP_PWM_Set_Duty	;wreg free
  1498   002546  0E2B               	movlw	low _ccp1_obj
  1499   002548  6E0E               	movwf	CCP_PWM_Start@_ccp_obj^0,c
  1500   00254A  0E01               	movlw	high _ccp1_obj
  1501   00254C  6E0F               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
  1502   00254E  EC59  F022         	call	_CCP_PWM_Start	;wreg free
  1503   002552                     l11798:
  1504   002552  0E3C               	movlw	low _adc_a0
  1505   002554  6E16               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1506   002556  0E01               	movlw	high _adc_a0
  1507   002558  6E17               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1508   00255A  0E00               	movlw	0
  1509   00255C  6E18               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1510   00255E  ECD2  F023         	call	_ADC_StartConversion_Interrupt	;wreg free
  1511   002562                     
  1512                           ;application.c: 59:       lm35_res1_Celsius = roundf((lm35_res1*4.88f)/10);
  1513   002562  0E00               	movlw	0
  1514   002564  6E39               	movwf	___fldiv@a^0,c
  1515   002566  0E00               	movlw	0
  1516   002568  6E3A               	movwf	(___fldiv@a+1)^0,c
  1517   00256A  0E20               	movlw	32
  1518   00256C  6E3B               	movwf	(___fldiv@a+2)^0,c
  1519   00256E  0E41               	movlw	65
  1520   002570  6E3C               	movwf	(___fldiv@a+3)^0,c
  1521   002572  0EF6               	movlw	246
  1522   002574  6E20               	movwf	___flmul@a^0,c
  1523   002576  0E28               	movlw	40
  1524   002578  6E21               	movwf	(___flmul@a+1)^0,c
  1525   00257A  0E9C               	movlw	156
  1526   00257C  6E22               	movwf	(___flmul@a+2)^0,c
  1527   00257E  0E40               	movlw	64
  1528   002580  6E23               	movwf	(___flmul@a+3)^0,c
  1529   002582  C0C2  F00E         	movff	_lm35_res1,___xxtofl@val
  1530   002586  C0C3  F00F         	movff	_lm35_res1+1,___xxtofl@val+1
  1531   00258A  6A10               	clrf	(___xxtofl@val+2)^0,c
  1532   00258C  6A11               	clrf	(___xxtofl@val+3)^0,c
  1533   00258E  0E00               	movlw	0
  1534   002590  ECBA  F014         	call	___xxtofl
  1535   002594  C00E  F01C         	movff	?___xxtofl,___flmul@b
  1536   002598  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  1537   00259C  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  1538   0025A0  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  1539   0025A4  ECB2  F00C         	call	___flmul	;wreg free
  1540   0025A8  C01C  F035         	movff	?___flmul,___fldiv@b
  1541   0025AC  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  1542   0025B0  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  1543   0025B4  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  1544   0025B8  ECA1  F010         	call	___fldiv	;wreg free
  1545   0025BC  C035  F183         	movff	?___fldiv,_main$5740
  1546   0025C0  C036  F184         	movff	?___fldiv+1,_main$5740+1
  1547   0025C4  C037  F185         	movff	?___fldiv+2,_main$5740+2
  1548   0025C8  C038  F186         	movff	?___fldiv+3,_main$5740+3
  1549   0025CC                     
  1550                           ;application.c: 59:       lm35_res1_Celsius = roundf((lm35_res1*4.88f)/10);
  1551   0025CC  C183  F05E         	movff	_main$5740,roundf@x
  1552   0025D0  C184  F05F         	movff	_main$5740+1,roundf@x+1
  1553   0025D4  C185  F060         	movff	_main$5740+2,roundf@x+2
  1554   0025D8  C186  F061         	movff	_main$5740+3,roundf@x+3
  1555   0025DC  ECC7  F00E         	call	_roundf	;wreg free
  1556   0025E0  C05E  F0E2         	movff	?_roundf,___fltol@f1
  1557   0025E4  C05F  F0E3         	movff	?_roundf+1,___fltol@f1+1
  1558   0025E8  C060  F0E4         	movff	?_roundf+2,___fltol@f1+2
  1559   0025EC  C061  F0E5         	movff	?_roundf+3,___fltol@f1+3
  1560   0025F0  ECA0  F01B         	call	___fltol	;wreg free
  1561   0025F4  C0E2  F0FE         	movff	?___fltol,_lm35_res1_Celsius
  1562   0025F8  C0E3  F0FF         	movff	?___fltol+1,_lm35_res1_Celsius+1
  1563   0025FC  C0FE  F0C4         	movff	_lm35_res1_Celsius,convert_uint16_to_string@value
  1564   002600  C0FF  F0C5         	movff	_lm35_res1_Celsius+1,convert_uint16_to_string@value+1
  1565   002604  0E75               	movlw	low _lm35_res1_str
  1566   002606  0100               	movlb	0	; () banked
  1567   002608  6FC6               	movwf	convert_uint16_to_string@str& (0+255),b
  1568   00260A  0E01               	movlw	high _lm35_res1_str
  1569   00260C  6FC7               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1570   00260E  EC1E  F01F         	call	_convert_uint16_to_string	;wreg free
  1571   002612                     
  1572                           ;application.c: 61:       lm35_res1_str[3]='C';
  1573   002612  0E43               	movlw	67
  1574   002614  0101               	movlb	1	; () banked
  1575   002616  6F78               	movwf	(_lm35_res1_str+3)& (0+255),b
  1576   002618                     
  1577                           ; BSR set to: 1
  1578   002618  0E43               	movlw	low _lcd_1
  1579   00261A  6E27               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1580   00261C  0E01               	movlw	high _lcd_1
  1581   00261E  6E28               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1582   002620  0E02               	movlw	2
  1583   002622  6E29               	movwf	lcd_4bit_send_string_pos@row^0,c
  1584   002624  0E10               	movlw	16
  1585   002626  6E2A               	movwf	lcd_4bit_send_string_pos@column^0,c
  1586   002628  0E75               	movlw	low _lm35_res1_str
  1587   00262A  6E2B               	movwf	lcd_4bit_send_string_pos@str^0,c
  1588   00262C  0E01               	movlw	high _lm35_res1_str
  1589   00262E  6E2C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1590   002630  EC28  F020         	call	_lcd_4bit_send_string_pos	;wreg free
  1591   002634                     
  1592                           ;application.c: 64:       if((lm35_res1_Celsius >= 20) && (lm35_res1_Celsius < 30)){
  1593   002634  0100               	movlb	0	; () banked
  1594   002636  51FF               	movf	(_lm35_res1_Celsius+1)& (0+255),w,b
  1595   002638  E109               	bnz	u12170
  1596   00263A  0E14               	movlw	20
  1597   00263C  5DFE               	subwf	_lm35_res1_Celsius& (0+255),w,b
  1598   00263E  A0D8               	btfss	status,0,c
  1599   002640  EF24  F013         	goto	u12171
  1600   002644  EF26  F013         	goto	u12170
  1601   002648                     u12171:
  1602   002648  EF45  F013         	goto	l11816
  1603   00264C                     u12170:
  1604   00264C                     
  1605                           ; BSR set to: 0
  1606   00264C  51FF               	movf	(_lm35_res1_Celsius+1)& (0+255),w,b
  1607   00264E  E107               	bnz	u12181
  1608   002650  0E1E               	movlw	30
  1609   002652  5DFE               	subwf	_lm35_res1_Celsius& (0+255),w,b
  1610   002654  B0D8               	btfsc	status,0,c
  1611   002656  EF2F  F013         	goto	u12181
  1612   00265A  EF31  F013         	goto	u12180
  1613   00265E                     u12181:
  1614   00265E  EF45  F013         	goto	l11816
  1615   002662                     u12180:
  1616   002662                     
  1617                           ; BSR set to: 0
  1618                           ;application.c: 65:         ret = CCP_PWM_Set_Duty(&ccp1_obj, 25);
  1619   002662  0E2B               	movlw	low _ccp1_obj
  1620   002664  6FEA               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  1621   002666  0E01               	movlw	high _ccp1_obj
  1622   002668  6FEB               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  1623   00266A  0E19               	movlw	25
  1624   00266C  6FEC               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  1625   00266E  EC94  F015         	call	_CCP_PWM_Set_Duty	;wreg free
  1626   002672  0101               	movlb	1	; () banked
  1627   002674  6F87               	movwf	main@ret& (0+255),b
  1628                           
  1629                           ;application.c: 66:         ret = dc_motor_move_right(&dc_motor_1);
  1630   002676  0EFC               	movlw	low _dc_motor_1
  1631   002678  6E18               	movwf	dc_motor_move_right@_dc_motor^0,c
  1632   00267A  0E00               	movlw	high _dc_motor_1
  1633   00267C  6E19               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1634   00267E  EC6B  F023         	call	_dc_motor_move_right	;wreg free
  1635   002682  0101               	movlb	1	; () banked
  1636   002684  6F87               	movwf	main@ret& (0+255),b
  1637                           
  1638                           ;application.c: 67:       }
  1639   002686  EFA9  F012         	goto	l11798
  1640   00268A                     l11816:
  1641                           
  1642                           ; BSR set to: 0
  1643   00268A  51FF               	movf	(_lm35_res1_Celsius+1)& (0+255),w,b
  1644   00268C  E109               	bnz	u12190
  1645   00268E  0E1E               	movlw	30
  1646   002690  5DFE               	subwf	_lm35_res1_Celsius& (0+255),w,b
  1647   002692  A0D8               	btfss	status,0,c
  1648   002694  EF4E  F013         	goto	u12191
  1649   002698  EF50  F013         	goto	u12190
  1650   00269C                     u12191:
  1651   00269C  EF6F  F013         	goto	l11822
  1652   0026A0                     u12190:
  1653   0026A0                     
  1654                           ; BSR set to: 0
  1655   0026A0  51FF               	movf	(_lm35_res1_Celsius+1)& (0+255),w,b
  1656   0026A2  E107               	bnz	u12201
  1657   0026A4  0E23               	movlw	35
  1658   0026A6  5DFE               	subwf	_lm35_res1_Celsius& (0+255),w,b
  1659   0026A8  B0D8               	btfsc	status,0,c
  1660   0026AA  EF59  F013         	goto	u12201
  1661   0026AE  EF5B  F013         	goto	u12200
  1662   0026B2                     u12201:
  1663   0026B2  EF6F  F013         	goto	l11822
  1664   0026B6                     u12200:
  1665   0026B6                     
  1666                           ; BSR set to: 0
  1667                           ;application.c: 69:         ret = CCP_PWM_Set_Duty(&ccp1_obj, 50);
  1668   0026B6  0E2B               	movlw	low _ccp1_obj
  1669   0026B8  6FEA               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  1670   0026BA  0E01               	movlw	high _ccp1_obj
  1671   0026BC  6FEB               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  1672   0026BE  0E32               	movlw	50
  1673   0026C0  6FEC               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  1674   0026C2  EC94  F015         	call	_CCP_PWM_Set_Duty	;wreg free
  1675   0026C6  0101               	movlb	1	; () banked
  1676   0026C8  6F87               	movwf	main@ret& (0+255),b
  1677                           
  1678                           ;application.c: 70:         ret = dc_motor_move_right(&dc_motor_1);
  1679   0026CA  0EFC               	movlw	low _dc_motor_1
  1680   0026CC  6E18               	movwf	dc_motor_move_right@_dc_motor^0,c
  1681   0026CE  0E00               	movlw	high _dc_motor_1
  1682   0026D0  6E19               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1683   0026D2  EC6B  F023         	call	_dc_motor_move_right	;wreg free
  1684   0026D6  0101               	movlb	1	; () banked
  1685   0026D8  6F87               	movwf	main@ret& (0+255),b
  1686                           
  1687                           ;application.c: 71:       }
  1688   0026DA  EFA9  F012         	goto	l11798
  1689   0026DE                     l11822:
  1690                           
  1691                           ; BSR set to: 0
  1692   0026DE  51FF               	movf	(_lm35_res1_Celsius+1)& (0+255),w,b
  1693   0026E0  E109               	bnz	u12210
  1694   0026E2  0E23               	movlw	35
  1695   0026E4  5DFE               	subwf	_lm35_res1_Celsius& (0+255),w,b
  1696   0026E6  A0D8               	btfss	status,0,c
  1697   0026E8  EF78  F013         	goto	u12211
  1698   0026EC  EF7A  F013         	goto	u12210
  1699   0026F0                     u12211:
  1700   0026F0  EF99  F013         	goto	l11828
  1701   0026F4                     u12210:
  1702   0026F4                     
  1703                           ; BSR set to: 0
  1704   0026F4  51FF               	movf	(_lm35_res1_Celsius+1)& (0+255),w,b
  1705   0026F6  E107               	bnz	u12221
  1706   0026F8  0E28               	movlw	40
  1707   0026FA  5DFE               	subwf	_lm35_res1_Celsius& (0+255),w,b
  1708   0026FC  B0D8               	btfsc	status,0,c
  1709   0026FE  EF83  F013         	goto	u12221
  1710   002702  EF85  F013         	goto	u12220
  1711   002706                     u12221:
  1712   002706  EF99  F013         	goto	l11828
  1713   00270A                     u12220:
  1714   00270A                     
  1715                           ; BSR set to: 0
  1716                           ;application.c: 73:         ret = CCP_PWM_Set_Duty(&ccp1_obj, 75);
  1717   00270A  0E2B               	movlw	low _ccp1_obj
  1718   00270C  6FEA               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  1719   00270E  0E01               	movlw	high _ccp1_obj
  1720   002710  6FEB               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  1721   002712  0E4B               	movlw	75
  1722   002714  6FEC               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  1723   002716  EC94  F015         	call	_CCP_PWM_Set_Duty	;wreg free
  1724   00271A  0101               	movlb	1	; () banked
  1725   00271C  6F87               	movwf	main@ret& (0+255),b
  1726                           
  1727                           ;application.c: 74:         ret = dc_motor_move_right(&dc_motor_1);
  1728   00271E  0EFC               	movlw	low _dc_motor_1
  1729   002720  6E18               	movwf	dc_motor_move_right@_dc_motor^0,c
  1730   002722  0E00               	movlw	high _dc_motor_1
  1731   002724  6E19               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1732   002726  EC6B  F023         	call	_dc_motor_move_right	;wreg free
  1733   00272A  0101               	movlb	1	; () banked
  1734   00272C  6F87               	movwf	main@ret& (0+255),b
  1735                           
  1736                           ;application.c: 75:       }
  1737   00272E  EFA9  F012         	goto	l11798
  1738   002732                     l11828:
  1739                           
  1740                           ; BSR set to: 0
  1741   002732  51FF               	movf	(_lm35_res1_Celsius+1)& (0+255),w,b
  1742   002734  E109               	bnz	u12230
  1743   002736  0E28               	movlw	40
  1744   002738  5DFE               	subwf	_lm35_res1_Celsius& (0+255),w,b
  1745   00273A  A0D8               	btfss	status,0,c
  1746   00273C  EFA2  F013         	goto	u12231
  1747   002740  EFA4  F013         	goto	u12230
  1748   002744                     u12231:
  1749   002744  EFB8  F013         	goto	l11832
  1750   002748                     u12230:
  1751   002748                     
  1752                           ; BSR set to: 0
  1753                           ;application.c: 77:         ret = CCP_PWM_Set_Duty(&ccp1_obj, 100);
  1754   002748  0E2B               	movlw	low _ccp1_obj
  1755   00274A  6FEA               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  1756   00274C  0E01               	movlw	high _ccp1_obj
  1757   00274E  6FEB               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  1758   002750  0E64               	movlw	100
  1759   002752  6FEC               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  1760   002754  EC94  F015         	call	_CCP_PWM_Set_Duty	;wreg free
  1761   002758  0101               	movlb	1	; () banked
  1762   00275A  6F87               	movwf	main@ret& (0+255),b
  1763                           
  1764                           ;application.c: 78:         ret = dc_motor_move_right(&dc_motor_1);
  1765   00275C  0EFC               	movlw	low _dc_motor_1
  1766   00275E  6E18               	movwf	dc_motor_move_right@_dc_motor^0,c
  1767   002760  0E00               	movlw	high _dc_motor_1
  1768   002762  6E19               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1769   002764  EC6B  F023         	call	_dc_motor_move_right	;wreg free
  1770   002768  0101               	movlb	1	; () banked
  1771   00276A  6F87               	movwf	main@ret& (0+255),b
  1772                           
  1773                           ;application.c: 79:       }
  1774   00276C  EFA9  F012         	goto	l11798
  1775   002770                     l11832:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;application.c: 81:           ret = CCP_PWM_Set_Duty(&ccp1_obj, 0);
  1779   002770  0E2B               	movlw	low _ccp1_obj
  1780   002772  6FEA               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  1781   002774  0E01               	movlw	high _ccp1_obj
  1782   002776  6FEB               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  1783   002778  0E00               	movlw	0
  1784   00277A  6FEC               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  1785   00277C  EC94  F015         	call	_CCP_PWM_Set_Duty	;wreg free
  1786   002780  0101               	movlb	1	; () banked
  1787   002782  6F87               	movwf	main@ret& (0+255),b
  1788                           
  1789                           ;application.c: 82:           ret = dc_motor_stop(&dc_motor_1);
  1790   002784  0EFC               	movlw	low _dc_motor_1
  1791   002786  6E18               	movwf	dc_motor_stop@_dc_motor^0,c
  1792   002788  0E00               	movlw	high _dc_motor_1
  1793   00278A  6E19               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1794   00278C  EC48  F023         	call	_dc_motor_stop	;wreg free
  1795   002790  0101               	movlb	1	; () banked
  1796   002792  6F87               	movwf	main@ret& (0+255),b
  1797   002794  EFA9  F012         	goto	l11798
  1798   002798  EF07  F000         	goto	start
  1799   00279C                     __end_of_main:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _roundf *****************
  1803 ;; Defined at:
  1804 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\roundf.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  x               4   93[COMRAM] float 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  y               4   26[BANK0 ] float 
  1809 ;;  u               4   22[BANK0 ] struct .
  1810 ;;  e               2   16[BANK0 ] int 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  4   93[COMRAM] float 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Totals:         4      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;Total ram usage:       26 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; Hardware stack levels required when called: 6
  1827 ;; This function calls:
  1828 ;;		___fladd
  1829 ;;		___flge
  1830 ;;		___flmul
  1831 ;;		___flneg
  1832 ;;		___flsub
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text1
  1839   001D8E                     __ptext1:
  1840                           	callstack 0
  1841   001D8E                     _roundf:
  1842                           	callstack 24
  1843   001D8E  C080  F0DA         	movff	roundf@F527,roundf@u
  1844   001D92  C081  F0DB         	movff	roundf@F527+1,roundf@u+1
  1845   001D96  C082  F0DC         	movff	roundf@F527+2,roundf@u+2
  1846   001D9A  C083  F0DD         	movff	roundf@F527+3,roundf@u+3
  1847   001D9E  C05E  F0DA         	movff	roundf@x,roundf@u
  1848   001DA2  C05F  F0DB         	movff	roundf@x+1,roundf@u+1
  1849   001DA6  C060  F0DC         	movff	roundf@x+2,roundf@u+2
  1850   001DAA  C061  F0DD         	movff	roundf@x+3,roundf@u+3
  1851   001DAE  C0DA  F0CC         	movff	roundf@u,??_roundf
  1852   001DB2  C0DB  F0CD         	movff	roundf@u+1,??_roundf+1
  1853   001DB6  C0DC  F0CE         	movff	roundf@u+2,??_roundf+2
  1854   001DBA  C0DD  F0CF         	movff	roundf@u+3,??_roundf+3
  1855   001DBE  0E18               	movlw	24
  1856   001DC0  EFE8  F00E         	goto	u11490
  1857   001DC4                     u11495:
  1858   001DC4  0100               	movlb	0	; () banked
  1859   001DC6  90D8               	bcf	status,0,c
  1860   001DC8  33CF               	rrcf	(??_roundf+3)& (0+255),f,b
  1861   001DCA  33CE               	rrcf	(??_roundf+2)& (0+255),f,b
  1862   001DCC  33CD               	rrcf	(??_roundf+1)& (0+255),f,b
  1863   001DCE  33CC               	rrcf	??_roundf& (0+255),f,b
  1864   001DD0                     u11490:
  1865   001DD0  2EE8               	decfsz	wreg,f,c
  1866   001DD2  EFE2  F00E         	goto	u11495
  1867   001DD6  51CC               	movf	??_roundf& (0+255),w,b
  1868   001DD8  6FD4               	movwf	roundf@e& (0+255),b
  1869   001DDA  6BD5               	clrf	(roundf@e+1)& (0+255),b
  1870   001DDC  BFD5               	btfsc	(roundf@e+1)& (0+255),7,b
  1871   001DDE  EFFA  F00E         	goto	u11501
  1872   001DE2  51D5               	movf	(roundf@e+1)& (0+255),w,b
  1873   001DE4  E109               	bnz	u11500
  1874   001DE6  0E96               	movlw	150
  1875   001DE8  5DD4               	subwf	roundf@e& (0+255),w,b
  1876   001DEA  A0D8               	btfss	status,0,c
  1877   001DEC  EFFA  F00E         	goto	u11501
  1878   001DF0  EFFC  F00E         	goto	u11500
  1879   001DF4                     u11501:
  1880   001DF4  EF06  F00F         	goto	l11120
  1881   001DF8                     u11500:
  1882   001DF8                     
  1883                           ; BSR set to: 0
  1884   001DF8  C05E  F05E         	movff	roundf@x,?_roundf
  1885   001DFC  C05F  F05F         	movff	roundf@x+1,?_roundf+1
  1886   001E00  C060  F060         	movff	roundf@x+2,?_roundf+2
  1887   001E04  C061  F061         	movff	roundf@x+3,?_roundf+3
  1888   001E08  EFA0  F010         	goto	l2595
  1889   001E0C                     l11120:
  1890                           
  1891                           ; BSR set to: 0
  1892   001E0C  C0DA  F0CC         	movff	roundf@u,??_roundf
  1893   001E10  C0DB  F0CD         	movff	roundf@u+1,??_roundf+1
  1894   001E14  C0DC  F0CE         	movff	roundf@u+2,??_roundf+2
  1895   001E18  C0DD  F0CF         	movff	roundf@u+3,??_roundf+3
  1896   001E1C  0E20               	movlw	32
  1897   001E1E  EF16  F00F         	goto	u11510
  1898   001E22                     u11515:
  1899   001E22  90D8               	bcf	status,0,c
  1900   001E24  33CF               	rrcf	(??_roundf+3)& (0+255),f,b
  1901   001E26  33CE               	rrcf	(??_roundf+2)& (0+255),f,b
  1902   001E28  33CD               	rrcf	(??_roundf+1)& (0+255),f,b
  1903   001E2A  33CC               	rrcf	??_roundf& (0+255),f,b
  1904   001E2C                     u11510:
  1905   001E2C  2EE8               	decfsz	wreg,f,c
  1906   001E2E  EF11  F00F         	goto	u11515
  1907   001E32  51CC               	movf	??_roundf& (0+255),w,b
  1908   001E34  11CD               	iorwf	(??_roundf+1)& (0+255),w,b
  1909   001E36  11CE               	iorwf	(??_roundf+2)& (0+255),w,b
  1910   001E38  11CF               	iorwf	(??_roundf+3)& (0+255),w,b
  1911   001E3A  B4D8               	btfsc	status,2,c
  1912   001E3C  EF22  F00F         	goto	u11521
  1913   001E40  EF24  F00F         	goto	u11520
  1914   001E44                     u11521:
  1915   001E44  EF36  F00F         	goto	l11124
  1916   001E48                     u11520:
  1917   001E48                     
  1918                           ; BSR set to: 0
  1919   001E48  C05E  F00E         	movff	roundf@x,___flneg@f1
  1920   001E4C  C05F  F00F         	movff	roundf@x+1,___flneg@f1+1
  1921   001E50  C060  F010         	movff	roundf@x+2,___flneg@f1+2
  1922   001E54  C061  F011         	movff	roundf@x+3,___flneg@f1+3
  1923   001E58  EC6D  F024         	call	___flneg	;wreg free
  1924   001E5C  C00E  F05E         	movff	?___flneg,roundf@x
  1925   001E60  C00F  F05F         	movff	?___flneg+1,roundf@x+1
  1926   001E64  C010  F060         	movff	?___flneg+2,roundf@x+2
  1927   001E68  C011  F061         	movff	?___flneg+3,roundf@x+3
  1928   001E6C                     l11124:
  1929   001E6C  0100               	movlb	0	; () banked
  1930   001E6E  BFD5               	btfsc	(roundf@e+1)& (0+255),7,b
  1931   001E70  EF45  F00F         	goto	u11530
  1932   001E74  51D5               	movf	(roundf@e+1)& (0+255),w,b
  1933   001E76  E107               	bnz	u11531
  1934   001E78  0E7E               	movlw	126
  1935   001E7A  5DD4               	subwf	roundf@e& (0+255),w,b
  1936   001E7C  B0D8               	btfsc	status,0,c
  1937   001E7E  EF43  F00F         	goto	u11531
  1938   001E82  EF45  F00F         	goto	u11530
  1939   001E86                     u11531:
  1940   001E86  EF61  F00F         	goto	l11130
  1941   001E8A                     u11530:
  1942   001E8A                     
  1943                           ; BSR set to: 0
  1944   001E8A  C0DA  F01C         	movff	roundf@u,___flmul@b
  1945   001E8E  C0DB  F01D         	movff	roundf@u+1,___flmul@b+1
  1946   001E92  C0DC  F01E         	movff	roundf@u+2,___flmul@b+2
  1947   001E96  C0DD  F01F         	movff	roundf@u+3,___flmul@b+3
  1948   001E9A  0E00               	movlw	0
  1949   001E9C  6E20               	movwf	___flmul@a^0,c
  1950   001E9E  0E00               	movlw	0
  1951   001EA0  6E21               	movwf	(___flmul@a+1)^0,c
  1952   001EA2  0E00               	movlw	0
  1953   001EA4  6E22               	movwf	(___flmul@a+2)^0,c
  1954   001EA6  0E00               	movlw	0
  1955   001EA8  6E23               	movwf	(___flmul@a+3)^0,c
  1956   001EAA  ECB2  F00C         	call	___flmul	;wreg free
  1957   001EAE  C01C  F05E         	movff	?___flmul,?_roundf
  1958   001EB2  C01D  F05F         	movff	?___flmul+1,?_roundf+1
  1959   001EB6  C01E  F060         	movff	?___flmul+2,?_roundf+2
  1960   001EBA  C01F  F061         	movff	?___flmul+3,?_roundf+3
  1961   001EBE  EFA0  F010         	goto	l2595
  1962   001EC2                     l11130:
  1963                           
  1964                           ; BSR set to: 0
  1965   001EC2  0E00               	movlw	0
  1966   001EC4  6E52               	movwf	___fladd@a^0,c
  1967   001EC6  0E00               	movlw	0
  1968   001EC8  6E53               	movwf	(___fladd@a+1)^0,c
  1969   001ECA  0E00               	movlw	0
  1970   001ECC  6E54               	movwf	(___fladd@a+2)^0,c
  1971   001ECE  0E4B               	movlw	75
  1972   001ED0  6E55               	movwf	(___fladd@a+3)^0,c
  1973   001ED2  C05E  F04E         	movff	roundf@x,___fladd@b
  1974   001ED6  C05F  F04F         	movff	roundf@x+1,___fladd@b+1
  1975   001EDA  C060  F050         	movff	roundf@x+2,___fladd@b+2
  1976   001EDE  C061  F051         	movff	roundf@x+3,___fladd@b+3
  1977   001EE2  EC1E  F008         	call	___fladd	;wreg free
  1978   001EE6  C04E  F0D6         	movff	?___fladd,_roundf$5741
  1979   001EEA  C04F  F0D7         	movff	?___fladd+1,_roundf$5741+1
  1980   001EEE  C050  F0D8         	movff	?___fladd+2,_roundf$5741+2
  1981   001EF2  C051  F0D9         	movff	?___fladd+3,_roundf$5741+3
  1982   001EF6  0E00               	movlw	0
  1983   001EF8  6E52               	movwf	___fladd@a^0,c
  1984   001EFA  0E00               	movlw	0
  1985   001EFC  6E53               	movwf	(___fladd@a+1)^0,c
  1986   001EFE  0E00               	movlw	0
  1987   001F00  6E54               	movwf	(___fladd@a+2)^0,c
  1988   001F02  0ECB               	movlw	203
  1989   001F04  6E55               	movwf	(___fladd@a+3)^0,c
  1990   001F06  C0D6  F04E         	movff	_roundf$5741,___fladd@b
  1991   001F0A  C0D7  F04F         	movff	_roundf$5741+1,___fladd@b+1
  1992   001F0E  C0D8  F050         	movff	_roundf$5741+2,___fladd@b+2
  1993   001F12  C0D9  F051         	movff	_roundf$5741+3,___fladd@b+3
  1994   001F16  EC1E  F008         	call	___fladd	;wreg free
  1995   001F1A  C04E  F0D0         	movff	?___fladd,_roundf$5742
  1996   001F1E  C04F  F0D1         	movff	?___fladd+1,_roundf$5742+1
  1997   001F22  C050  F0D2         	movff	?___fladd+2,_roundf$5742+2
  1998   001F26  C051  F0D3         	movff	?___fladd+3,_roundf$5742+3
  1999   001F2A  C0D0  F0C4         	movff	_roundf$5742,___flsub@b
  2000   001F2E  C0D1  F0C5         	movff	_roundf$5742+1,___flsub@b+1
  2001   001F32  C0D2  F0C6         	movff	_roundf$5742+2,___flsub@b+2
  2002   001F36  C0D3  F0C7         	movff	_roundf$5742+3,___flsub@b+3
  2003   001F3A  C05E  F0C8         	movff	roundf@x,___flsub@a
  2004   001F3E  C05F  F0C9         	movff	roundf@x+1,___flsub@a+1
  2005   001F42  C060  F0CA         	movff	roundf@x+2,___flsub@a+2
  2006   001F46  C061  F0CB         	movff	roundf@x+3,___flsub@a+3
  2007   001F4A  EC24  F023         	call	___flsub	;wreg free
  2008   001F4E  C0C4  F0DE         	movff	?___flsub,roundf@y
  2009   001F52  C0C5  F0DF         	movff	?___flsub+1,roundf@y+1
  2010   001F56  C0C6  F0E0         	movff	?___flsub+2,roundf@y+2
  2011   001F5A  C0C7  F0E1         	movff	?___flsub+3,roundf@y+3
  2012   001F5E  0E00               	movlw	0
  2013   001F60  6E0E               	movwf	___flge@ff1^0,c
  2014   001F62  0E00               	movlw	0
  2015   001F64  6E0F               	movwf	(___flge@ff1+1)^0,c
  2016   001F66  0E00               	movlw	0
  2017   001F68  6E10               	movwf	(___flge@ff1+2)^0,c
  2018   001F6A  0E3F               	movlw	63
  2019   001F6C  6E11               	movwf	(___flge@ff1+3)^0,c
  2020   001F6E  C0DE  F012         	movff	roundf@y,___flge@ff2
  2021   001F72  C0DF  F013         	movff	roundf@y+1,___flge@ff2+1
  2022   001F76  C0E0  F014         	movff	roundf@y+2,___flge@ff2+2
  2023   001F7A  C0E1  F015         	movff	roundf@y+3,___flge@ff2+3
  2024   001F7E  ECA7  F01C         	call	___flge	;wreg free
  2025   001F82  B0D8               	btfsc	status,0,c
  2026   001F84  EFC6  F00F         	goto	u11541
  2027   001F88  EFC8  F00F         	goto	u11540
  2028   001F8C                     u11541:
  2029   001F8C  EFFE  F00F         	goto	l11134
  2030   001F90                     u11540:
  2031   001F90  C05E  F052         	movff	roundf@x,___fladd@a
  2032   001F94  C05F  F053         	movff	roundf@x+1,___fladd@a+1
  2033   001F98  C060  F054         	movff	roundf@x+2,___fladd@a+2
  2034   001F9C  C061  F055         	movff	roundf@x+3,___fladd@a+3
  2035   001FA0  C0DE  F04E         	movff	roundf@y,___fladd@b
  2036   001FA4  C0DF  F04F         	movff	roundf@y+1,___fladd@b+1
  2037   001FA8  C0E0  F050         	movff	roundf@y+2,___fladd@b+2
  2038   001FAC  C0E1  F051         	movff	roundf@y+3,___fladd@b+3
  2039   001FB0  EC1E  F008         	call	___fladd	;wreg free
  2040   001FB4  C04E  F0D6         	movff	?___fladd,_roundf$5741
  2041   001FB8  C04F  F0D7         	movff	?___fladd+1,_roundf$5741+1
  2042   001FBC  C050  F0D8         	movff	?___fladd+2,_roundf$5741+2
  2043   001FC0  C051  F0D9         	movff	?___fladd+3,_roundf$5741+3
  2044   001FC4  C0D6  F04E         	movff	_roundf$5741,___fladd@b
  2045   001FC8  C0D7  F04F         	movff	_roundf$5741+1,___fladd@b+1
  2046   001FCC  C0D8  F050         	movff	_roundf$5741+2,___fladd@b+2
  2047   001FD0  C0D9  F051         	movff	_roundf$5741+3,___fladd@b+3
  2048   001FD4  0E00               	movlw	0
  2049   001FD6  6E52               	movwf	___fladd@a^0,c
  2050   001FD8  0E00               	movlw	0
  2051   001FDA  6E53               	movwf	(___fladd@a+1)^0,c
  2052   001FDC  0E80               	movlw	128
  2053   001FDE  6E54               	movwf	(___fladd@a+2)^0,c
  2054   001FE0  0EBF               	movlw	191
  2055   001FE2  6E55               	movwf	(___fladd@a+3)^0,c
  2056   001FE4  EC1E  F008         	call	___fladd	;wreg free
  2057   001FE8  C04E  F0DE         	movff	?___fladd,roundf@y
  2058   001FEC  C04F  F0DF         	movff	?___fladd+1,roundf@y+1
  2059   001FF0  C050  F0E0         	movff	?___fladd+2,roundf@y+2
  2060   001FF4  C051  F0E1         	movff	?___fladd+3,roundf@y+3
  2061   001FF8  EF67  F010         	goto	l11140
  2062   001FFC                     l11134:
  2063   001FFC  0E00               	movlw	0
  2064   001FFE  6E0E               	movwf	___flge@ff1^0,c
  2065   002000  0E00               	movlw	0
  2066   002002  6E0F               	movwf	(___flge@ff1+1)^0,c
  2067   002004  0E00               	movlw	0
  2068   002006  6E10               	movwf	(___flge@ff1+2)^0,c
  2069   002008  0EBF               	movlw	191
  2070   00200A  6E11               	movwf	(___flge@ff1+3)^0,c
  2071   00200C  C0DE  F012         	movff	roundf@y,___flge@ff2
  2072   002010  C0DF  F013         	movff	roundf@y+1,___flge@ff2+1
  2073   002014  C0E0  F014         	movff	roundf@y+2,___flge@ff2+2
  2074   002018  C0E1  F015         	movff	roundf@y+3,___flge@ff2+3
  2075   00201C  ECA7  F01C         	call	___flge	;wreg free
  2076   002020  A0D8               	btfss	status,0,c
  2077   002022  EF15  F010         	goto	u11551
  2078   002026  EF17  F010         	goto	u11550
  2079   00202A                     u11551:
  2080   00202A  EF4D  F010         	goto	l11138
  2081   00202E                     u11550:
  2082   00202E  C05E  F052         	movff	roundf@x,___fladd@a
  2083   002032  C05F  F053         	movff	roundf@x+1,___fladd@a+1
  2084   002036  C060  F054         	movff	roundf@x+2,___fladd@a+2
  2085   00203A  C061  F055         	movff	roundf@x+3,___fladd@a+3
  2086   00203E  C0DE  F04E         	movff	roundf@y,___fladd@b
  2087   002042  C0DF  F04F         	movff	roundf@y+1,___fladd@b+1
  2088   002046  C0E0  F050         	movff	roundf@y+2,___fladd@b+2
  2089   00204A  C0E1  F051         	movff	roundf@y+3,___fladd@b+3
  2090   00204E  EC1E  F008         	call	___fladd	;wreg free
  2091   002052  C04E  F0D6         	movff	?___fladd,_roundf$5741
  2092   002056  C04F  F0D7         	movff	?___fladd+1,_roundf$5741+1
  2093   00205A  C050  F0D8         	movff	?___fladd+2,_roundf$5741+2
  2094   00205E  C051  F0D9         	movff	?___fladd+3,_roundf$5741+3
  2095   002062  C0D6  F04E         	movff	_roundf$5741,___fladd@b
  2096   002066  C0D7  F04F         	movff	_roundf$5741+1,___fladd@b+1
  2097   00206A  C0D8  F050         	movff	_roundf$5741+2,___fladd@b+2
  2098   00206E  C0D9  F051         	movff	_roundf$5741+3,___fladd@b+3
  2099   002072  0E00               	movlw	0
  2100   002074  6E52               	movwf	___fladd@a^0,c
  2101   002076  0E00               	movlw	0
  2102   002078  6E53               	movwf	(___fladd@a+1)^0,c
  2103   00207A  0E80               	movlw	128
  2104   00207C  6E54               	movwf	(___fladd@a+2)^0,c
  2105   00207E  0E3F               	movlw	63
  2106   002080  6E55               	movwf	(___fladd@a+3)^0,c
  2107   002082  EC1E  F008         	call	___fladd	;wreg free
  2108   002086  C04E  F0DE         	movff	?___fladd,roundf@y
  2109   00208A  C04F  F0DF         	movff	?___fladd+1,roundf@y+1
  2110   00208E  C050  F0E0         	movff	?___fladd+2,roundf@y+2
  2111   002092  C051  F0E1         	movff	?___fladd+3,roundf@y+3
  2112   002096  EF67  F010         	goto	l11140
  2113   00209A                     l11138:
  2114   00209A  C0DE  F04E         	movff	roundf@y,___fladd@b
  2115   00209E  C0DF  F04F         	movff	roundf@y+1,___fladd@b+1
  2116   0020A2  C0E0  F050         	movff	roundf@y+2,___fladd@b+2
  2117   0020A6  C0E1  F051         	movff	roundf@y+3,___fladd@b+3
  2118   0020AA  C05E  F052         	movff	roundf@x,___fladd@a
  2119   0020AE  C05F  F053         	movff	roundf@x+1,___fladd@a+1
  2120   0020B2  C060  F054         	movff	roundf@x+2,___fladd@a+2
  2121   0020B6  C061  F055         	movff	roundf@x+3,___fladd@a+3
  2122   0020BA  EC1E  F008         	call	___fladd	;wreg free
  2123   0020BE  C04E  F0DE         	movff	?___fladd,roundf@y
  2124   0020C2  C04F  F0DF         	movff	?___fladd+1,roundf@y+1
  2125   0020C6  C050  F0E0         	movff	?___fladd+2,roundf@y+2
  2126   0020CA  C051  F0E1         	movff	?___fladd+3,roundf@y+3
  2127   0020CE                     l11140:
  2128   0020CE  C0DA  F0CC         	movff	roundf@u,??_roundf
  2129   0020D2  C0DB  F0CD         	movff	roundf@u+1,??_roundf+1
  2130   0020D6  C0DC  F0CE         	movff	roundf@u+2,??_roundf+2
  2131   0020DA  C0DD  F0CF         	movff	roundf@u+3,??_roundf+3
  2132   0020DE  0E20               	movlw	32
  2133   0020E0  EF78  F010         	goto	u11560
  2134   0020E4                     u11565:
  2135   0020E4  0100               	movlb	0	; () banked
  2136   0020E6  90D8               	bcf	status,0,c
  2137   0020E8  33CF               	rrcf	(??_roundf+3)& (0+255),f,b
  2138   0020EA  33CE               	rrcf	(??_roundf+2)& (0+255),f,b
  2139   0020EC  33CD               	rrcf	(??_roundf+1)& (0+255),f,b
  2140   0020EE  33CC               	rrcf	??_roundf& (0+255),f,b
  2141   0020F0                     u11560:
  2142   0020F0  2EE8               	decfsz	wreg,f,c
  2143   0020F2  EF72  F010         	goto	u11565
  2144   0020F6  51CC               	movf	??_roundf& (0+255),w,b
  2145   0020F8  11CD               	iorwf	(??_roundf+1)& (0+255),w,b
  2146   0020FA  11CE               	iorwf	(??_roundf+2)& (0+255),w,b
  2147   0020FC  11CF               	iorwf	(??_roundf+3)& (0+255),w,b
  2148   0020FE  B4D8               	btfsc	status,2,c
  2149   002100  EF84  F010         	goto	u11571
  2150   002104  EF86  F010         	goto	u11570
  2151   002108                     u11571:
  2152   002108  EF98  F010         	goto	l11144
  2153   00210C                     u11570:
  2154   00210C                     
  2155                           ; BSR set to: 0
  2156   00210C  C0DE  F00E         	movff	roundf@y,___flneg@f1
  2157   002110  C0DF  F00F         	movff	roundf@y+1,___flneg@f1+1
  2158   002114  C0E0  F010         	movff	roundf@y+2,___flneg@f1+2
  2159   002118  C0E1  F011         	movff	roundf@y+3,___flneg@f1+3
  2160   00211C  EC6D  F024         	call	___flneg	;wreg free
  2161   002120  C00E  F0DE         	movff	?___flneg,roundf@y
  2162   002124  C00F  F0DF         	movff	?___flneg+1,roundf@y+1
  2163   002128  C010  F0E0         	movff	?___flneg+2,roundf@y+2
  2164   00212C  C011  F0E1         	movff	?___flneg+3,roundf@y+3
  2165   002130                     l11144:
  2166   002130  C0DE  F05E         	movff	roundf@y,?_roundf
  2167   002134  C0DF  F05F         	movff	roundf@y+1,?_roundf+1
  2168   002138  C0E0  F060         	movff	roundf@y+2,?_roundf+2
  2169   00213C  C0E1  F061         	movff	roundf@y+3,?_roundf+3
  2170   002140                     l2595:
  2171   002140  0012               	return		;funcret
  2172   002142                     __end_of_roundf:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function ___flsub *****************
  2176 ;; Defined at:
  2177 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  b               4    0[BANK0 ] float 
  2180 ;;  a               4    4[BANK0 ] float 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  4    0[BANK0 ] float 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2192 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;Total ram usage:        8 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 5
  2199 ;; This function calls:
  2200 ;;		___fladd
  2201 ;; This function is called by:
  2202 ;;		_roundf
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text2
  2207   004648                     __ptext2:
  2208                           	callstack 0
  2209   004648                     ___flsub:
  2210                           	callstack 24
  2211   004648  0E00               	movlw	0
  2212   00464A  0100               	movlb	0	; () banked
  2213   00464C  1BC8               	xorwf	___flsub@a& (0+255),f,b
  2214   00464E  0E00               	movlw	0
  2215   004650  1BC9               	xorwf	(___flsub@a+1)& (0+255),f,b
  2216   004652  0E00               	movlw	0
  2217   004654  1BCA               	xorwf	(___flsub@a+2)& (0+255),f,b
  2218   004656  0E80               	movlw	128
  2219   004658  1BCB               	xorwf	(___flsub@a+3)& (0+255),f,b
  2220   00465A                     
  2221                           ; BSR set to: 0
  2222   00465A  C0C4  F04E         	movff	___flsub@b,___fladd@b
  2223   00465E  C0C5  F04F         	movff	___flsub@b+1,___fladd@b+1
  2224   004662  C0C6  F050         	movff	___flsub@b+2,___fladd@b+2
  2225   004666  C0C7  F051         	movff	___flsub@b+3,___fladd@b+3
  2226   00466A  C0C8  F052         	movff	___flsub@a,___fladd@a
  2227   00466E  C0C9  F053         	movff	___flsub@a+1,___fladd@a+1
  2228   004672  C0CA  F054         	movff	___flsub@a+2,___fladd@a+2
  2229   004676  C0CB  F055         	movff	___flsub@a+3,___fladd@a+3
  2230   00467A  EC1E  F008         	call	___fladd	;wreg free
  2231   00467E  C04E  F0C4         	movff	?___fladd,?___flsub
  2232   004682  C04F  F0C5         	movff	?___fladd+1,?___flsub+1
  2233   004686  C050  F0C6         	movff	?___fladd+2,?___flsub+2
  2234   00468A  C051  F0C7         	movff	?___fladd+3,?___flsub+3
  2235   00468E  0012               	return		;funcret
  2236   004690                     __end_of___flsub:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function ___flneg *****************
  2240 ;; Defined at:
  2241 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  f1              4   13[COMRAM] float 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  4   13[COMRAM] float 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;Total ram usage:        4 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 4
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_roundf
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text3
  2270   0048DA                     __ptext3:
  2271                           	callstack 0
  2272   0048DA                     ___flneg:
  2273                           	callstack 25
  2274   0048DA  500E               	movf	___flneg@f1^0,w,c
  2275   0048DC  100F               	iorwf	(___flneg@f1+1)^0,w,c
  2276   0048DE  1010               	iorwf	(___flneg@f1+2)^0,w,c
  2277   0048E0  1011               	iorwf	(___flneg@f1+3)^0,w,c
  2278   0048E2  B4D8               	btfsc	status,2,c
  2279   0048E4  EF76  F024         	goto	u11251
  2280   0048E8  EF78  F024         	goto	u11250
  2281   0048EC                     u11251:
  2282   0048EC  EF80  F024         	goto	l10912
  2283   0048F0                     u11250:
  2284   0048F0  0E00               	movlw	0
  2285   0048F2  1A0E               	xorwf	___flneg@f1^0,f,c
  2286   0048F4  0E00               	movlw	0
  2287   0048F6  1A0F               	xorwf	(___flneg@f1+1)^0,f,c
  2288   0048F8  0E00               	movlw	0
  2289   0048FA  1A10               	xorwf	(___flneg@f1+2)^0,f,c
  2290   0048FC  0E80               	movlw	128
  2291   0048FE  1A11               	xorwf	(___flneg@f1+3)^0,f,c
  2292   004900                     l10912:
  2293   004900  C00E  F00E         	movff	___flneg@f1,?___flneg
  2294   004904  C00F  F00F         	movff	___flneg@f1+1,?___flneg+1
  2295   004908  C010  F010         	movff	___flneg@f1+2,?___flneg+2
  2296   00490C  C011  F011         	movff	___flneg@f1+3,?___flneg+3
  2297   004910  0012               	return		;funcret
  2298   004912                     __end_of___flneg:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function ___flge *****************
  2302 ;; Defined at:
  2303 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  ff1             4   13[COMRAM] float 
  2306 ;;  ff2             4   17[COMRAM] float 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;		None               void
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2318 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;Total ram usage:       12 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; Hardware stack levels required when called: 4
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_roundf
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text4
  2333   00394E                     __ptext4:
  2334                           	callstack 0
  2335   00394E                     ___flge:
  2336                           	callstack 25
  2337   00394E  0E00               	movlw	0
  2338   003950  140E               	andwf	___flge@ff1^0,w,c
  2339   003952  6E16               	movwf	??___flge^0,c
  2340   003954  0E00               	movlw	0
  2341   003956  140F               	andwf	(___flge@ff1+1)^0,w,c
  2342   003958  6E17               	movwf	(??___flge+1)^0,c
  2343   00395A  0E80               	movlw	128
  2344   00395C  1410               	andwf	(___flge@ff1+2)^0,w,c
  2345   00395E  6E18               	movwf	(??___flge+2)^0,c
  2346   003960  0E7F               	movlw	127
  2347   003962  1411               	andwf	(___flge@ff1+3)^0,w,c
  2348   003964  6E19               	movwf	(??___flge+3)^0,c
  2349   003966  5016               	movf	??___flge^0,w,c
  2350   003968  1017               	iorwf	(??___flge+1)^0,w,c
  2351   00396A  1018               	iorwf	(??___flge+2)^0,w,c
  2352   00396C  1019               	iorwf	(??___flge+3)^0,w,c
  2353   00396E  A4D8               	btfss	status,2,c
  2354   003970  EFBC  F01C         	goto	u11201
  2355   003974  EFBE  F01C         	goto	u11200
  2356   003978                     u11201:
  2357   003978  EFC6  F01C         	goto	l10890
  2358   00397C                     u11200:
  2359   00397C  0E00               	movlw	0
  2360   00397E  6E0E               	movwf	___flge@ff1^0,c
  2361   003980  0E00               	movlw	0
  2362   003982  6E0F               	movwf	(___flge@ff1+1)^0,c
  2363   003984  0E00               	movlw	0
  2364   003986  6E10               	movwf	(___flge@ff1+2)^0,c
  2365   003988  0E00               	movlw	0
  2366   00398A  6E11               	movwf	(___flge@ff1+3)^0,c
  2367   00398C                     l10890:
  2368   00398C  0E00               	movlw	0
  2369   00398E  1412               	andwf	___flge@ff2^0,w,c
  2370   003990  6E16               	movwf	??___flge^0,c
  2371   003992  0E00               	movlw	0
  2372   003994  1413               	andwf	(___flge@ff2+1)^0,w,c
  2373   003996  6E17               	movwf	(??___flge+1)^0,c
  2374   003998  0E80               	movlw	128
  2375   00399A  1414               	andwf	(___flge@ff2+2)^0,w,c
  2376   00399C  6E18               	movwf	(??___flge+2)^0,c
  2377   00399E  0E7F               	movlw	127
  2378   0039A0  1415               	andwf	(___flge@ff2+3)^0,w,c
  2379   0039A2  6E19               	movwf	(??___flge+3)^0,c
  2380   0039A4  5016               	movf	??___flge^0,w,c
  2381   0039A6  1017               	iorwf	(??___flge+1)^0,w,c
  2382   0039A8  1018               	iorwf	(??___flge+2)^0,w,c
  2383   0039AA  1019               	iorwf	(??___flge+3)^0,w,c
  2384   0039AC  A4D8               	btfss	status,2,c
  2385   0039AE  EFDB  F01C         	goto	u11211
  2386   0039B2  EFDD  F01C         	goto	u11210
  2387   0039B6                     u11211:
  2388   0039B6  EFE5  F01C         	goto	l10894
  2389   0039BA                     u11210:
  2390   0039BA  0E00               	movlw	0
  2391   0039BC  6E12               	movwf	___flge@ff2^0,c
  2392   0039BE  0E00               	movlw	0
  2393   0039C0  6E13               	movwf	(___flge@ff2+1)^0,c
  2394   0039C2  0E00               	movlw	0
  2395   0039C4  6E14               	movwf	(___flge@ff2+2)^0,c
  2396   0039C6  0E00               	movlw	0
  2397   0039C8  6E15               	movwf	(___flge@ff2+3)^0,c
  2398   0039CA                     l10894:
  2399   0039CA  AE11               	btfss	(___flge@ff1+3)^0,7,c
  2400   0039CC  EFEA  F01C         	goto	u11221
  2401   0039D0  EFEC  F01C         	goto	u11220
  2402   0039D4                     u11221:
  2403   0039D4  EFF5  F01C         	goto	l10898
  2404   0039D8                     u11220:
  2405   0039D8  6C0E               	negf	___flge@ff1^0,c
  2406   0039DA  1E0F               	comf	(___flge@ff1+1)^0,f,c
  2407   0039DC  B0D8               	btfsc	status,0,c
  2408   0039DE  2A0F               	incf	(___flge@ff1+1)^0,f,c
  2409   0039E0  1E10               	comf	(___flge@ff1+2)^0,f,c
  2410   0039E2  B0D8               	btfsc	status,0,c
  2411   0039E4  2A10               	incf	(___flge@ff1+2)^0,f,c
  2412   0039E6  0E80               	movlw	128
  2413   0039E8  5611               	subfwb	(___flge@ff1+3)^0,f,c
  2414   0039EA                     l10898:
  2415   0039EA  AE15               	btfss	(___flge@ff2+3)^0,7,c
  2416   0039EC  EFFA  F01C         	goto	u11231
  2417   0039F0  EFFC  F01C         	goto	u11230
  2418   0039F4                     u11231:
  2419   0039F4  EF05  F01D         	goto	l2076
  2420   0039F8                     u11230:
  2421   0039F8  6C12               	negf	___flge@ff2^0,c
  2422   0039FA  1E13               	comf	(___flge@ff2+1)^0,f,c
  2423   0039FC  B0D8               	btfsc	status,0,c
  2424   0039FE  2A13               	incf	(___flge@ff2+1)^0,f,c
  2425   003A00  1E14               	comf	(___flge@ff2+2)^0,f,c
  2426   003A02  B0D8               	btfsc	status,0,c
  2427   003A04  2A14               	incf	(___flge@ff2+2)^0,f,c
  2428   003A06  0E80               	movlw	128
  2429   003A08  5615               	subfwb	(___flge@ff2+3)^0,f,c
  2430   003A0A                     l2076:
  2431   003A0A  0E00               	movlw	0
  2432   003A0C  1A0E               	xorwf	___flge@ff1^0,f,c
  2433   003A0E  0E00               	movlw	0
  2434   003A10  1A0F               	xorwf	(___flge@ff1+1)^0,f,c
  2435   003A12  0E00               	movlw	0
  2436   003A14  1A10               	xorwf	(___flge@ff1+2)^0,f,c
  2437   003A16  0E80               	movlw	128
  2438   003A18  1A11               	xorwf	(___flge@ff1+3)^0,f,c
  2439   003A1A  0E00               	movlw	0
  2440   003A1C  1A12               	xorwf	___flge@ff2^0,f,c
  2441   003A1E  0E00               	movlw	0
  2442   003A20  1A13               	xorwf	(___flge@ff2+1)^0,f,c
  2443   003A22  0E00               	movlw	0
  2444   003A24  1A14               	xorwf	(___flge@ff2+2)^0,f,c
  2445   003A26  0E80               	movlw	128
  2446   003A28  1A15               	xorwf	(___flge@ff2+3)^0,f,c
  2447   003A2A  5012               	movf	___flge@ff2^0,w,c
  2448   003A2C  5C0E               	subwf	___flge@ff1^0,w,c
  2449   003A2E  5013               	movf	(___flge@ff2+1)^0,w,c
  2450   003A30  580F               	subwfb	(___flge@ff1+1)^0,w,c
  2451   003A32  5014               	movf	(___flge@ff2+2)^0,w,c
  2452   003A34  5810               	subwfb	(___flge@ff1+2)^0,w,c
  2453   003A36  5015               	movf	(___flge@ff2+3)^0,w,c
  2454   003A38  5811               	subwfb	(___flge@ff1+3)^0,w,c
  2455   003A3A  B0D8               	btfsc	status,0,c
  2456   003A3C  EF22  F01D         	goto	u11241
  2457   003A40  EF24  F01D         	goto	u11240
  2458   003A44                     u11241:
  2459   003A44  EF27  F01D         	goto	l10904
  2460   003A48                     u11240:
  2461   003A48  90D8               	bcf	status,0,c
  2462   003A4A  EF28  F01D         	goto	l2081
  2463   003A4E                     l10904:
  2464   003A4E  80D8               	bsf	status,0,c
  2465   003A50                     l2081:
  2466   003A50  0012               	return		;funcret
  2467   003A52                     __end_of___flge:
  2468                           	callstack 0
  2469                           
  2470 ;; *************** function _lcd_4bit_send_string_pos *****************
  2471 ;; Defined at:
  2472 ;;		line 163 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  lcd             2   38[COMRAM] PTR const struct .
  2475 ;;		 -> lcd_1(6), 
  2476 ;;  row             1   40[COMRAM] unsigned char 
  2477 ;;  column          1   41[COMRAM] unsigned char 
  2478 ;;  str             2   42[COMRAM] PTR unsigned char 
  2479 ;;		 -> lm35_res1_str(6), STR_6(21), STR_5(14), STR_4(21), 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  ret             1   44[COMRAM] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      unsigned char 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2491 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;Total ram usage:        7 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 8
  2498 ;; This function calls:
  2499 ;;		_lcd_4bit_send_char_data
  2500 ;;		_lcd_4bit_set_cursor
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text5
  2507   004050                     __ptext5:
  2508                           	callstack 0
  2509   004050                     _lcd_4bit_send_string_pos:
  2510                           	callstack 22
  2511   004050                     
  2512                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 165:     if(((void*)0) == lcd){
  2513   004050  5027               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  2514   004052  1028               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  2515   004054  A4D8               	btfss	status,2,c
  2516   004056  EF2F  F020         	goto	u11271
  2517   00405A  EF31  F020         	goto	u11270
  2518   00405E                     u11271:
  2519   00405E  EF35  F020         	goto	l10934
  2520   004062                     u11270:
  2521   004062                     
  2522                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 166:         ret = (Std_ReturnType)0x00;
  2523   004062  0E00               	movlw	0
  2524   004064  6E2D               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2525                           
  2526                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 167:     }
  2527   004066  EF76  F020         	goto	l10942
  2528   00406A                     l10934:
  2529                           
  2530                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 169:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  2531   00406A  C027  F020         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  2532   00406E  C028  F021         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  2533   004072  C029  F022         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  2534   004076  C02A  F023         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@coulmn
  2535   00407A  ECD4  F01F         	call	_lcd_4bit_set_cursor	;wreg free
  2536   00407E  6E2D               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2537                           
  2538                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         while(*str){
  2539   004080  EF5D  F020         	goto	l10940
  2540   004084                     l10936:
  2541                           
  2542                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 171:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  2543   004084  C027  F01C         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  2544   004088  C028  F01D         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  2545   00408C  C02B  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  2546   004090  C02C  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  2547   004094  0E00               	movlw	low (__smallconst shr (0+16))
  2548   004096  6EF8               	movwf	tblptru,c
  2549   004098  0E0F               	movlw	(high __ramtop+-1)
  2550   00409A  64F7               	cpfsgt	tblptrh,c
  2551   00409C  D003               	bra	u11287
  2552   00409E  0008               	tblrd		*
  2553   0040A0  50F5               	movf	tablat,w,c
  2554   0040A2  D005               	bra	u11280
  2555   0040A4                     u11287:
  2556   0040A4  CFF6 FFE9          	movff	tblptrl,fsr0l
  2557   0040A8  CFF7 FFEA          	movff	tblptrh,fsr0h
  2558   0040AC  50EF               	movf	indf0,w,c
  2559   0040AE                     u11280:
  2560   0040AE  6E1E               	movwf	lcd_4bit_send_char_data@data^0,c
  2561   0040B0  EC45  F021         	call	_lcd_4bit_send_char_data	;wreg free
  2562   0040B4  6E2D               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2563   0040B6  4A2B               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  2564   0040B8  2A2C               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  2565   0040BA                     l10940:
  2566                           
  2567                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         while(*str){
  2568   0040BA  C02B  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  2569   0040BE  C02C  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  2570   0040C2  0E00               	movlw	low (__smallconst shr (0+16))
  2571   0040C4  6EF8               	movwf	tblptru,c
  2572   0040C6  0E0F               	movlw	(high __ramtop+-1)
  2573   0040C8  64F7               	cpfsgt	tblptrh,c
  2574   0040CA  D003               	bra	u11297
  2575   0040CC  0008               	tblrd		*
  2576   0040CE  50F5               	movf	tablat,w,c
  2577   0040D0  D005               	bra	u11290
  2578   0040D2                     u11297:
  2579   0040D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  2580   0040D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  2581   0040DA  50EF               	movf	indf0,w,c
  2582   0040DC                     u11290:
  2583   0040DC  0900               	iorlw	0
  2584   0040DE  A4D8               	btfss	status,2,c
  2585   0040E0  EF74  F020         	goto	u11301
  2586   0040E4  EF76  F020         	goto	u11300
  2587   0040E8                     u11301:
  2588   0040E8  EF42  F020         	goto	l10936
  2589   0040EC                     u11300:
  2590   0040EC                     l10942:
  2591                           
  2592                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 174:     return ret;
  2593   0040EC  502D               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  2594   0040EE  0012               	return		;funcret
  2595   0040F0                     __end_of_lcd_4bit_send_string_pos:
  2596                           	callstack 0
  2597                           
  2598 ;; *************** function _lcd_4bit_set_cursor *****************
  2599 ;; Defined at:
  2600 ;;		line 549 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  lcd             2   31[COMRAM] PTR const struct .
  2603 ;;		 -> lcd_1(6), 
  2604 ;;  row             1   33[COMRAM] unsigned char 
  2605 ;;  coulmn          1   34[COMRAM] unsigned char 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  ret             1   37[COMRAM] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      unsigned char 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;Total ram usage:        7 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 7
  2624 ;; This function calls:
  2625 ;;		_lcd_4bit_send_command
  2626 ;; This function is called by:
  2627 ;;		_lcd_4bit_send_string_pos
  2628 ;;		_lcd_4bit_send_char_data_pos
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text6
  2633   003FA8                     __ptext6:
  2634                           	callstack 0
  2635   003FA8                     _lcd_4bit_set_cursor:
  2636                           	callstack 22
  2637   003FA8                     
  2638                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 550:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2639   003FA8  0E01               	movlw	1
  2640   003FAA  6E26               	movwf	lcd_4bit_set_cursor@ret^0,c
  2641   003FAC                     
  2642                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 551:     coulmn--;
  2643   003FAC  0623               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  2644                           
  2645                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 552:     switch(row){
  2646   003FAE  EF09  F020         	goto	l10662
  2647   003FB2                     l10654:
  2648   003FB2  C020  F01C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2649   003FB6  C021  F01D         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2650   003FBA  5023               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  2651   003FBC  0F80               	addlw	128
  2652   003FBE  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  2653   003FC0  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  2654   003FC4  6E26               	movwf	lcd_4bit_set_cursor@ret^0,c
  2655   003FC6  EF26  F020         	goto	l10664
  2656   003FCA                     l10656:
  2657   003FCA  C020  F01C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2658   003FCE  C021  F01D         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2659   003FD2  5023               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  2660   003FD4  0FC0               	addlw	192
  2661   003FD6  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  2662   003FD8  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  2663   003FDC  6E26               	movwf	lcd_4bit_set_cursor@ret^0,c
  2664   003FDE  EF26  F020         	goto	l10664
  2665   003FE2                     l10658:
  2666   003FE2  C020  F01C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2667   003FE6  C021  F01D         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2668   003FEA  5023               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  2669   003FEC  0F94               	addlw	148
  2670   003FEE  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  2671   003FF0  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  2672   003FF4  6E26               	movwf	lcd_4bit_set_cursor@ret^0,c
  2673   003FF6  EF26  F020         	goto	l10664
  2674   003FFA                     l10660:
  2675   003FFA  C020  F01C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2676   003FFE  C021  F01D         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2677   004002  5023               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  2678   004004  0FD4               	addlw	212
  2679   004006  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  2680   004008  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  2681   00400C  6E26               	movwf	lcd_4bit_set_cursor@ret^0,c
  2682   00400E  EF26  F020         	goto	l10664
  2683   004012                     l10662:
  2684   004012  5022               	movf	lcd_4bit_set_cursor@row^0,w,c
  2685   004014  6E24               	movwf	??_lcd_4bit_set_cursor^0,c
  2686   004016  6A25               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  2687                           
  2688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2689                           ; Switch size 1, requested type "simple"
  2690                           ; Number of cases is 1, Range of values is 0 to 0
  2691                           ; switch strategies available:
  2692                           ; Name         Instructions Cycles
  2693                           ; simple_byte            4     3 (average)
  2694                           ;	Chosen strategy is simple_byte
  2695   004018  5025               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  2696   00401A  0A00               	xorlw	0	; case 0
  2697   00401C  B4D8               	btfsc	status,2,c
  2698   00401E  EF13  F020         	goto	l11994
  2699   004022  EF26  F020         	goto	l10664
  2700   004026                     l11994:
  2701                           
  2702                           ; Switch size 1, requested type "simple"
  2703                           ; Number of cases is 4, Range of values is 1 to 4
  2704                           ; switch strategies available:
  2705                           ; Name         Instructions Cycles
  2706                           ; simple_byte           13     7 (average)
  2707                           ;	Chosen strategy is simple_byte
  2708   004026  5024               	movf	??_lcd_4bit_set_cursor^0,w,c
  2709   004028  0A01               	xorlw	1	; case 1
  2710   00402A  B4D8               	btfsc	status,2,c
  2711   00402C  EFD9  F01F         	goto	l10654
  2712   004030  0A03               	xorlw	3	; case 2
  2713   004032  B4D8               	btfsc	status,2,c
  2714   004034  EFE5  F01F         	goto	l10656
  2715   004038  0A01               	xorlw	1	; case 3
  2716   00403A  B4D8               	btfsc	status,2,c
  2717   00403C  EFF1  F01F         	goto	l10658
  2718   004040  0A07               	xorlw	7	; case 4
  2719   004042  B4D8               	btfsc	status,2,c
  2720   004044  EFFD  F01F         	goto	l10660
  2721   004048  EF26  F020         	goto	l10664
  2722   00404C                     l10664:
  2723                           
  2724                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 559:     return ret;
  2725   00404C  5026               	movf	lcd_4bit_set_cursor@ret^0,w,c
  2726   00404E  0012               	return		;funcret
  2727   004050                     __end_of_lcd_4bit_set_cursor:
  2728                           	callstack 0
  2729                           
  2730 ;; *************** function _lcd_4bit_send_char_data *****************
  2731 ;; Defined at:
  2732 ;;		line 89 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  lcd             2   27[COMRAM] PTR const struct .
  2735 ;;		 -> lcd_1(6), 
  2736 ;;  data            1   29[COMRAM] unsigned char 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  ret             1   30[COMRAM] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      unsigned char 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2748 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;Total ram usage:        4 bytes
  2753 ;; Hardware stack levels used: 1
  2754 ;; Hardware stack levels required when called: 6
  2755 ;; This function calls:
  2756 ;;		_gpio_pin_write_logic
  2757 ;;		_lcd_4bit_send_enable_signal
  2758 ;;		_lcd_send_4bits
  2759 ;; This function is called by:
  2760 ;;		_lcd_4bit_send_string_pos
  2761 ;;		_lcd_4bit_send_char_data_pos
  2762 ;;		_lcd_4bit_send_string
  2763 ;;		_lcd_4bit_send_custom_char
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text7
  2768   00428A                     __ptext7:
  2769                           	callstack 0
  2770   00428A                     _lcd_4bit_send_char_data:
  2771                           	callstack 23
  2772   00428A                     
  2773                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:     if(((void*)0) == lcd){
  2774   00428A  501C               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  2775   00428C  101D               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  2776   00428E  A4D8               	btfss	status,2,c
  2777   004290  EF4C  F021         	goto	u11011
  2778   004294  EF4E  F021         	goto	u11010
  2779   004298                     u11011:
  2780   004298  EF52  F021         	goto	l10644
  2781   00429C                     u11010:
  2782   00429C                     
  2783                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:         ret = (Std_ReturnType)0x00;
  2784   00429C  0E00               	movlw	0
  2785   00429E  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  2786                           
  2787                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 93:     }
  2788   0042A0  EF7C  F021         	goto	l10646
  2789   0042A4                     l10644:
  2790                           
  2791                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 97:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  2792   0042A4  C01C  F00E         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  2793   0042A8  C01D  F00F         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  2794   0042AC  0E01               	movlw	1
  2795   0042AE  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  2796   0042B0  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  2797   0042B4  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  2798                           
  2799                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 99:         ret = lcd_send_4bits(lcd, data >> 4);
  2800   0042B6  C01C  F018         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2801   0042BA  C01D  F019         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2802   0042BE  381E               	swapf	lcd_4bit_send_char_data@data^0,w,c
  2803   0042C0  0B0F               	andlw	15
  2804   0042C2  6E1A               	movwf	lcd_send_4bits@_data_command^0,c
  2805   0042C4  EC25  F022         	call	_lcd_send_4bits	;wreg free
  2806   0042C8  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  2807                           
  2808                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 101:         ret = lcd_4bit_send_enable_signal(lcd);
  2809   0042CA  C01C  F018         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  2810   0042CE  C01D  F019         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  2811   0042D2  EC89  F024         	call	_lcd_4bit_send_enable_signal	;wreg free
  2812   0042D6  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  2813                           
  2814                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 103:         ret = lcd_send_4bits(lcd, data);
  2815   0042D8  C01C  F018         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2816   0042DC  C01D  F019         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2817   0042E0  C01E  F01A         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  2818   0042E4  EC25  F022         	call	_lcd_send_4bits	;wreg free
  2819   0042E8  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  2820                           
  2821                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 105:         ret = lcd_4bit_send_enable_signal(lcd);
  2822   0042EA  C01C  F018         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  2823   0042EE  C01D  F019         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  2824   0042F2  EC89  F024         	call	_lcd_4bit_send_enable_signal	;wreg free
  2825   0042F6  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  2826   0042F8                     l10646:
  2827                           
  2828                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 107:     return ret;
  2829   0042F8  501F               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2830   0042FA  0012               	return		;funcret
  2831   0042FC                     __end_of_lcd_4bit_send_char_data:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _dc_motor_stop *****************
  2835 ;; Defined at:
  2836 ;;		line 74 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  _dc_motor       2   23[COMRAM] PTR const struct .
  2839 ;;		 -> dc_motor_1(2), 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  ret             1   25[COMRAM] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      unsigned char 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;Total ram usage:        3 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 5
  2858 ;; This function calls:
  2859 ;;		_gpio_pin_write_logic
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text8
  2866   004690                     __ptext8:
  2867                           	callstack 0
  2868   004690                     _dc_motor_stop:
  2869                           	callstack 25
  2870   004690                     
  2871                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 75:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2872   004690  0E01               	movlw	1
  2873   004692  6E1A               	movwf	dc_motor_stop@ret^0,c
  2874   004694                     
  2875                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 76:     if(((void*)0) == _dc_motor){
  2876   004694  5018               	movf	dc_motor_stop@_dc_motor^0,w,c
  2877   004696  1019               	iorwf	(dc_motor_stop@_dc_motor+1)^0,w,c
  2878   004698  A4D8               	btfss	status,2,c
  2879   00469A  EF51  F023         	goto	u11411
  2880   00469E  EF53  F023         	goto	u11410
  2881   0046A2                     u11411:
  2882   0046A2  EF57  F023         	goto	l11044
  2883   0046A6                     u11410:
  2884   0046A6                     
  2885                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 77:         ret = (Std_ReturnType)0x00;
  2886   0046A6  0E00               	movlw	0
  2887   0046A8  6E1A               	movwf	dc_motor_stop@ret^0,c
  2888                           
  2889                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 78:     }
  2890   0046AA  EF69  F023         	goto	l11046
  2891   0046AE                     l11044:
  2892                           
  2893                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 80:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_LOW);
  2894   0046AE  C018  F00E         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
  2895   0046B2  C019  F00F         	movff	dc_motor_stop@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  2896   0046B6  0E00               	movlw	0
  2897   0046B8  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  2898   0046BA  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  2899                           
  2900                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 81:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
  2901   0046BE  0E01               	movlw	1
  2902   0046C0  2418               	addwf	dc_motor_stop@_dc_motor^0,w,c
  2903   0046C2  6E0E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2904   0046C4  0E00               	movlw	0
  2905   0046C6  2019               	addwfc	(dc_motor_stop@_dc_motor+1)^0,w,c
  2906   0046C8  6E0F               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2907   0046CA  0E00               	movlw	0
  2908   0046CC  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  2909   0046CE  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  2910   0046D2                     l11046:
  2911                           
  2912                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 83:     return ret;
  2913   0046D2  501A               	movf	dc_motor_stop@ret^0,w,c
  2914   0046D4  0012               	return		;funcret
  2915   0046D6                     __end_of_dc_motor_stop:
  2916                           	callstack 0
  2917                           
  2918 ;; *************** function _dc_motor_move_right *****************
  2919 ;; Defined at:
  2920 ;;		line 36 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  _dc_motor       2   23[COMRAM] PTR const struct .
  2923 ;;		 -> dc_motor_1(2), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  ret             1   25[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      unsigned char 
  2928 ;; Registers used:
  2929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;Total ram usage:        3 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 5
  2942 ;; This function calls:
  2943 ;;		_gpio_pin_write_logic
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text9
  2950   0046D6                     __ptext9:
  2951                           	callstack 0
  2952   0046D6                     _dc_motor_move_right:
  2953                           	callstack 25
  2954   0046D6                     
  2955                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 37:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2956   0046D6  0E01               	movlw	1
  2957   0046D8  6E1A               	movwf	dc_motor_move_right@ret^0,c
  2958   0046DA                     
  2959                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 38:     if(((void*)0) == _dc_motor){
  2960   0046DA  5018               	movf	dc_motor_move_right@_dc_motor^0,w,c
  2961   0046DC  1019               	iorwf	(dc_motor_move_right@_dc_motor+1)^0,w,c
  2962   0046DE  A4D8               	btfss	status,2,c
  2963   0046E0  EF74  F023         	goto	u11401
  2964   0046E4  EF76  F023         	goto	u11400
  2965   0046E8                     u11401:
  2966   0046E8  EF7A  F023         	goto	l11032
  2967   0046EC                     u11400:
  2968   0046EC                     
  2969                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 39:         ret = (Std_ReturnType)0x00;
  2970   0046EC  0E00               	movlw	0
  2971   0046EE  6E1A               	movwf	dc_motor_move_right@ret^0,c
  2972                           
  2973                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 40:     }
  2974   0046F0  EF8C  F023         	goto	l11034
  2975   0046F4                     l11032:
  2976                           
  2977                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 42:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_HIGH);
  2978   0046F4  C018  F00E         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
  2979   0046F8  C019  F00F         	movff	dc_motor_move_right@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  2980   0046FC  0E01               	movlw	1
  2981   0046FE  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  2982   004700  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  2983                           
  2984                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
  2985   004704  0E01               	movlw	1
  2986   004706  2418               	addwf	dc_motor_move_right@_dc_motor^0,w,c
  2987   004708  6E0E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2988   00470A  0E00               	movlw	0
  2989   00470C  2019               	addwfc	(dc_motor_move_right@_dc_motor+1)^0,w,c
  2990   00470E  6E0F               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2991   004710  0E00               	movlw	0
  2992   004712  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  2993   004714  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  2994   004718                     l11034:
  2995                           
  2996                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:     return ret;
  2997   004718  501A               	movf	dc_motor_move_right@ret^0,w,c
  2998   00471A  0012               	return		;funcret
  2999   00471C                     __end_of_dc_motor_move_right:
  3000                           	callstack 0
  3001                           
  3002 ;; *************** function _convert_uint16_to_string *****************
  3003 ;; Defined at:
  3004 ;;		line 432 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  value           2    0[BANK0 ] unsigned short 
  3007 ;;  str             2    2[BANK0 ] PTR unsigned char 
  3008 ;;		 -> lm35_res1_str(6), 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  Temp_String     6    4[BANK0 ] unsigned char [6]
  3011 ;;  DataCounter     1   11[BANK0 ] unsigned char 
  3012 ;;  ret             1   10[BANK0 ] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      unsigned char 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3022 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;Total ram usage:       12 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 12
  3029 ;; This function calls:
  3030 ;;		_memset
  3031 ;;		_sprintf
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text10
  3038   003E3C                     __ptext10:
  3039                           	callstack 0
  3040   003E3C                     _convert_uint16_to_string:
  3041                           	callstack 18
  3042   003E3C                     
  3043                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 433:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3044   003E3C  0E01               	movlw	1
  3045   003E3E  0100               	movlb	0	; () banked
  3046   003E40  6FCE               	movwf	convert_uint16_to_string@ret& (0+255),b
  3047   003E42                     
  3048                           ; BSR set to: 0
  3049                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 434:     uint8 Temp_String[6] = {0};
  3050   003E42  EE20  F0C8         	lfsr	2,convert_uint16_to_string@Temp_String
  3051   003E46  0E05               	movlw	5
  3052   003E48                     u11371:
  3053   003E48  6ADE               	clrf	postinc2,c
  3054   003E4A  06E8               	decf	wreg,f,c
  3055   003E4C  E2FD               	bc	u11371
  3056   003E4E                     
  3057                           ; BSR set to: 0
  3058                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 435:     uint8 DataCounter = 0;
  3059   003E4E  0E00               	movlw	0
  3060   003E50  6FCF               	movwf	convert_uint16_to_string@DataCounter& (0+255),b
  3061   003E52                     
  3062                           ; BSR set to: 0
  3063                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 436:     if(((void*)0) == str){
  3064   003E52  51C6               	movf	convert_uint16_to_string@str& (0+255),w,b
  3065   003E54  11C7               	iorwf	(convert_uint16_to_string@str+1)& (0+255),w,b
  3066   003E56  A4D8               	btfss	status,2,c
  3067   003E58  EF30  F01F         	goto	u11381
  3068   003E5C  EF32  F01F         	goto	u11380
  3069   003E60                     u11381:
  3070   003E60  EF36  F01F         	goto	l11010
  3071   003E64                     u11380:
  3072   003E64                     
  3073                           ; BSR set to: 0
  3074                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 437:         ret = (Std_ReturnType)0x00;
  3075   003E64  0E00               	movlw	0
  3076   003E66  6FCE               	movwf	convert_uint16_to_string@ret& (0+255),b
  3077                           
  3078                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 438:     }
  3079   003E68  EF7A  F01F         	goto	l11022
  3080   003E6C                     l11010:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 440:         memset(str, ' ', 5);
  3084   003E6C  C0C6  F00E         	movff	convert_uint16_to_string@str,memset@dest
  3085   003E70  C0C7  F00F         	movff	convert_uint16_to_string@str+1,memset@dest+1
  3086   003E74  0E00               	movlw	0
  3087   003E76  6E11               	movwf	(memset@c+1)^0,c
  3088   003E78  0E20               	movlw	32
  3089   003E7A  6E10               	movwf	memset@c^0,c
  3090   003E7C  0E00               	movlw	0
  3091   003E7E  6E13               	movwf	(memset@n+1)^0,c
  3092   003E80  0E05               	movlw	5
  3093   003E82  6E12               	movwf	memset@n^0,c
  3094   003E84  EC2F  F017         	call	_memset	;wreg free
  3095   003E88                     
  3096                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 441:         str[5] = '\0';
  3097   003E88  0100               	movlb	0	; () banked
  3098   003E8A  EE20 F005          	lfsr	2,5
  3099   003E8E  51C6               	movf	convert_uint16_to_string@str& (0+255),w,b
  3100   003E90  26D9               	addwf	fsr2l,f,c
  3101   003E92  51C7               	movf	(convert_uint16_to_string@str+1)& (0+255),w,b
  3102   003E94  22DA               	addwfc	fsr2h,f,c
  3103   003E96  6ADF               	clrf	indf2,c
  3104   003E98                     
  3105                           ; BSR set to: 0
  3106                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 442:         sprintf((char *)Temp_String, "%i", value)
      +                          ;
  3107   003E98  0EC8               	movlw	low convert_uint16_to_string@Temp_String
  3108   003E9A  6E4C               	movwf	sprintf@s^0,c
  3109   003E9C  0E00               	movlw	high convert_uint16_to_string@Temp_String
  3110   003E9E  6E4D               	movwf	(sprintf@s+1)^0,c
  3111   003EA0  0E38               	movlw	low STR_1
  3112   003EA2  6E4E               	movwf	sprintf@fmt^0,c
  3113   003EA4  0E10               	movlw	high STR_1
  3114   003EA6  6E4F               	movwf	(sprintf@fmt+1)^0,c
  3115   003EA8  C0C4  F050         	movff	convert_uint16_to_string@value,?_sprintf+4
  3116   003EAC  C0C5  F051         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  3117   003EB0  ECB4  F022         	call	_sprintf	;wreg free
  3118                           
  3119                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 443:         while(Temp_String[DataCounter] != '\0'){
  3120   003EB4  EF6B  F01F         	goto	l11020
  3121   003EB8                     l11016:
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 444:             str[DataCounter] = Temp_String[DataCo
      +                          unter];
  3125   003EB8  0EC8               	movlw	low convert_uint16_to_string@Temp_String
  3126   003EBA  25CF               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  3127   003EBC  6ED9               	movwf	fsr2l,c
  3128   003EBE  6ADA               	clrf	fsr2h,c
  3129   003EC0  0E00               	movlw	high convert_uint16_to_string@Temp_String
  3130   003EC2  22DA               	addwfc	fsr2h,f,c
  3131   003EC4  51CF               	movf	convert_uint16_to_string@DataCounter& (0+255),w,b
  3132   003EC6  25C6               	addwf	convert_uint16_to_string@str& (0+255),w,b
  3133   003EC8  6EE1               	movwf	fsr1l,c
  3134   003ECA  0E00               	movlw	0
  3135   003ECC  21C7               	addwfc	(convert_uint16_to_string@str+1)& (0+255),w,b
  3136   003ECE  6EE2               	movwf	fsr1h,c
  3137   003ED0  CFDF FFE7          	movff	indf2,indf1
  3138   003ED4                     
  3139                           ; BSR set to: 0
  3140                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 445:             DataCounter++;
  3141   003ED4  2BCF               	incf	convert_uint16_to_string@DataCounter& (0+255),f,b
  3142   003ED6                     l11020:
  3143                           
  3144                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 443:         while(Temp_String[DataCounter] != '\0'){
  3145   003ED6  0EC8               	movlw	low convert_uint16_to_string@Temp_String
  3146   003ED8  0100               	movlb	0	; () banked
  3147   003EDA  25CF               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  3148   003EDC  6ED9               	movwf	fsr2l,c
  3149   003EDE  6ADA               	clrf	fsr2h,c
  3150   003EE0  0E00               	movlw	high convert_uint16_to_string@Temp_String
  3151   003EE2  22DA               	addwfc	fsr2h,f,c
  3152   003EE4  50DF               	movf	indf2,w,c
  3153   003EE6  A4D8               	btfss	status,2,c
  3154   003EE8  EF78  F01F         	goto	u11391
  3155   003EEC  EF7A  F01F         	goto	u11390
  3156   003EF0                     u11391:
  3157   003EF0  EF5C  F01F         	goto	l11016
  3158   003EF4                     u11390:
  3159   003EF4                     l11022:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 448:     return ret;
  3163   003EF4  51CE               	movf	convert_uint16_to_string@ret& (0+255),w,b
  3164   003EF6                     
  3165                           ; BSR set to: 0
  3166   003EF6  0012               	return		;funcret
  3167   003EF8                     __end_of_convert_uint16_to_string:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function _sprintf *****************
  3171 ;; Defined at:
  3172 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  s               2   75[COMRAM] PTR unsigned char 
  3175 ;;		 -> convert_uint16_to_string@Temp_String(6), 
  3176 ;;  fmt             2   77[COMRAM] PTR const unsigned char 
  3177 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  f              12   85[COMRAM] struct _IO_FILE
  3180 ;;  ap              2   83[COMRAM] PTR void [1]
  3181 ;;		 -> ?_sprintf(2), 
  3182 ;;  ret             2    0        int 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  2   75[COMRAM] int 
  3185 ;; Registers used:
  3186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3192 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;Total ram usage:       22 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 11
  3199 ;; This function calls:
  3200 ;;		_vfprintf
  3201 ;; This function is called by:
  3202 ;;		_convert_uint16_to_string
  3203 ;;		_convert_uint8_to_string
  3204 ;;		_convert_uint32_to_string
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text11
  3209   004568                     __ptext11:
  3210                           	callstack 0
  3211   004568                     _sprintf:
  3212                           	callstack 18
  3213   004568  0E50               	movlw	low (?_sprintf+4)
  3214   00456A  6E54               	movwf	sprintf@ap^0,c
  3215   00456C  0E00               	movlw	high (?_sprintf+4)
  3216   00456E  6E55               	movwf	(sprintf@ap+1)^0,c
  3217   004570  C04C  F056         	movff	sprintf@s,sprintf@f
  3218   004574  C04D  F057         	movff	sprintf@s+1,sprintf@f+1
  3219   004578  0E00               	movlw	0
  3220   00457A  6E5A               	movwf	(sprintf@f+4)^0,c
  3221   00457C  0E00               	movlw	0
  3222   00457E  6E59               	movwf	(sprintf@f+3)^0,c
  3223   004580  0E00               	movlw	0
  3224   004582  6E61               	movwf	(sprintf@f+11)^0,c
  3225   004584  0E00               	movlw	0
  3226   004586  6E60               	movwf	(sprintf@f+10)^0,c
  3227   004588  0E56               	movlw	low sprintf@f
  3228   00458A  6E44               	movwf	vfprintf@fp^0,c
  3229   00458C  0E00               	movlw	high sprintf@f
  3230   00458E  6E45               	movwf	(vfprintf@fp+1)^0,c
  3231   004590  C04E  F046         	movff	sprintf@fmt,vfprintf@fmt
  3232   004594  C04F  F047         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3233   004598  0E54               	movlw	low sprintf@ap
  3234   00459A  6E48               	movwf	vfprintf@ap^0,c
  3235   00459C  0E00               	movlw	high sprintf@ap
  3236   00459E  6E49               	movwf	(vfprintf@ap+1)^0,c
  3237   0045A0  EC8C  F022         	call	_vfprintf	;wreg free
  3238   0045A4  5059               	movf	(sprintf@f+3)^0,w,c
  3239   0045A6  244C               	addwf	sprintf@s^0,w,c
  3240   0045A8  6ED9               	movwf	fsr2l,c
  3241   0045AA  505A               	movf	(sprintf@f+4)^0,w,c
  3242   0045AC  204D               	addwfc	(sprintf@s+1)^0,w,c
  3243   0045AE  6EDA               	movwf	fsr2h,c
  3244   0045B0  6ADF               	clrf	indf2,c
  3245   0045B2  0012               	return		;funcret
  3246   0045B4                     __end_of_sprintf:
  3247                           	callstack 0
  3248                           
  3249 ;; *************** function _vfprintf *****************
  3250 ;; Defined at:
  3251 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  3254 ;;		 -> sprintf@f(12), 
  3255 ;;  fmt             2   69[COMRAM] PTR const unsigned char 
  3256 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3257 ;;  ap              2   71[COMRAM] PTR PTR void 
  3258 ;;		 -> sprintf@ap(2), 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  cfmt            2   73[COMRAM] PTR unsigned char 
  3261 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  2   67[COMRAM] int 
  3264 ;; Registers used:
  3265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3271 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;Total ram usage:        8 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 10
  3278 ;; This function calls:
  3279 ;;		_vfpfcnvrt
  3280 ;; This function is called by:
  3281 ;;		_sprintf
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text12
  3286   004518                     __ptext12:
  3287                           	callstack 0
  3288   004518                     _vfprintf:
  3289                           	callstack 18
  3290   004518                     
  3291                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  3292   004518  C046  F04A         	movff	vfprintf@fmt,vfprintf@cfmt
  3293   00451C  C047  F04B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3296   004520  EFA0  F022         	goto	l10632
  3297   004524                     l10630:
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3300   004524  C044  F036         	movff	vfprintf@fp,vfpfcnvrt@fp
  3301   004528  C045  F037         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3302   00452C  0E4A               	movlw	low vfprintf@cfmt
  3303   00452E  6E38               	movwf	vfpfcnvrt@fmt^0,c
  3304   004530  0E00               	movlw	high vfprintf@cfmt
  3305   004532  6E39               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3306   004534  C048  F03A         	movff	vfprintf@ap,vfpfcnvrt@ap
  3307   004538  C049  F03B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3308   00453C  ECE0  F019         	call	_vfpfcnvrt	;wreg free
  3309   004540                     l10632:
  3310                           
  3311                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3312   004540  C04A  FFF6         	movff	vfprintf@cfmt,tblptrl
  3313   004544  C04B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3314   004548                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3315   004548  6AF8               	clrf	tblptru,c
  3316   00454A                     	endif
  3317   00454A                     	if	0	;tblptru may be non-zero
  3318   00454A                     	endif
  3319   00454A  0008               	tblrd		*
  3320   00454C  50F5               	movf	tablat,w,c
  3321   00454E  0900               	iorlw	0
  3322   004550  A4D8               	btfss	status,2,c
  3323   004552  EFAD  F022         	goto	u11001
  3324   004556  EFAF  F022         	goto	u11000
  3325   00455A                     u11001:
  3326   00455A  EF92  F022         	goto	l10630
  3327   00455E                     u11000:
  3328   00455E                     
  3329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  3330   00455E  0E00               	movlw	0
  3331   004560  6E45               	movwf	(?_vfprintf+1)^0,c
  3332   004562  0E00               	movlw	0
  3333   004564  6E44               	movwf	?_vfprintf^0,c
  3334   004566  0012               	return		;funcret
  3335   004568                     __end_of_vfprintf:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function _vfpfcnvrt *****************
  3339 ;; Defined at:
  3340 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  fp              2   53[COMRAM] PTR struct _IO_FILE
  3343 ;;		 -> sprintf@f(12), 
  3344 ;;  fmt             2   55[COMRAM] PTR PTR unsigned char 
  3345 ;;		 -> vfprintf@cfmt(2), 
  3346 ;;  ap              2   57[COMRAM] PTR PTR void 
  3347 ;;		 -> sprintf@ap(2), 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  convarg         4   61[COMRAM] struct .
  3350 ;;  cp              2   65[COMRAM] PTR unsigned char 
  3351 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3352 ;;  i               2    0        int 
  3353 ;;  done            2    0        int 
  3354 ;;  c               1    0        unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3364 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;Total ram usage:       14 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 9
  3371 ;; This function calls:
  3372 ;;		_dtoa
  3373 ;;		_fputc
  3374 ;; This function is called by:
  3375 ;;		_vfprintf
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text13
  3380   0033C0                     __ptext13:
  3381                           	callstack 0
  3382   0033C0                     _vfpfcnvrt:
  3383                           	callstack 18
  3384   0033C0                     
  3385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  3386   0033C0  C038  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3387   0033C4  C039  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3388   0033C8  CFDE FFF6          	movff	postinc2,tblptrl
  3389   0033CC  CFDD FFF7          	movff	postdec2,tblptrh
  3390   0033D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3391   0033D0  6AF8               	clrf	tblptru,c
  3392   0033D2                     	endif
  3393   0033D2                     	if	0	;tblptru may be non-zero
  3394   0033D2                     	endif
  3395   0033D2  0008               	tblrd		*
  3396   0033D4  50F5               	movf	tablat,w,c
  3397   0033D6  0A25               	xorlw	37
  3398   0033D8  A4D8               	btfss	status,2,c
  3399   0033DA  EFF1  F019         	goto	u10821
  3400   0033DE  EFF3  F019         	goto	u10820
  3401   0033E2                     u10821:
  3402   0033E2  EF60  F01A         	goto	l10388
  3403   0033E6                     u10820:
  3404   0033E6                     
  3405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  3406   0033E6  C038  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3407   0033EA  C039  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3408   0033EE  2ADE               	incf	postinc2,f,c
  3409   0033F0  0E00               	movlw	0
  3410   0033F2  22DD               	addwfc	postdec2,f,c
  3411   0033F4                     
  3412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  3413   0033F4  0E00               	movlw	0
  3414   0033F6  0100               	movlb	0	; () banked
  3415   0033F8  6F85               	movwf	(_width+1)& (0+255),b
  3416   0033FA  0E00               	movlw	0
  3417   0033FC  6F84               	movwf	_width& (0+255),b
  3418   0033FE  C084  F0C0         	movff	_width,_flags
  3419   003402                     
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  3422   003402  6986               	setf	_prec& (0+255),b
  3423   003404  6987               	setf	(_prec+1)& (0+255),b
  3424   003406                     
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  3427   003406  C038  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3428   00340A  C039  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3429   00340E  CFDE F042          	movff	postinc2,vfpfcnvrt@cp
  3430   003412  CFDD F043          	movff	postdec2,vfpfcnvrt@cp+1
  3431   003416                     
  3432                           ; BSR set to: 0
  3433                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3434   003416  C042  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3435   00341A  C043  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3436   00341E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3437   00341E  6AF8               	clrf	tblptru,c
  3438   003420                     	endif
  3439   003420                     	if	0	;tblptru may be non-zero
  3440   003420                     	endif
  3441   003420  0008               	tblrd		*
  3442   003422  50F5               	movf	tablat,w,c
  3443   003424  0A64               	xorlw	100
  3444   003426  B4D8               	btfsc	status,2,c
  3445   003428  EF18  F01A         	goto	u10831
  3446   00342C  EF1A  F01A         	goto	u10830
  3447   003430                     u10831:
  3448   003430  EF29  F01A         	goto	l10378
  3449   003434                     u10830:
  3450   003434                     
  3451                           ; BSR set to: 0
  3452   003434  C042  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3453   003438  C043  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3454   00343C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3455   00343C  6AF8               	clrf	tblptru,c
  3456   00343E                     	endif
  3457   00343E                     	if	0	;tblptru may be non-zero
  3458   00343E                     	endif
  3459   00343E  0008               	tblrd		*
  3460   003440  50F5               	movf	tablat,w,c
  3461   003442  0A69               	xorlw	105
  3462   003444  A4D8               	btfss	status,2,c
  3463   003446  EF27  F01A         	goto	u10841
  3464   00344A  EF29  F01A         	goto	u10840
  3465   00344E                     u10841:
  3466   00344E  EF57  F01A         	goto	l10384
  3467   003452                     u10840:
  3468   003452                     l10378:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3472   003452  C03A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3473   003456  C03B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3474   00345A  CFDF F03C          	movff	indf2,??_vfpfcnvrt
  3475   00345E  0E02               	movlw	2
  3476   003460  26DE               	addwf	postinc2,f,c
  3477   003462  CFDF F03D          	movff	indf2,??_vfpfcnvrt+1
  3478   003466  0E00               	movlw	0
  3479   003468  22DD               	addwfc	postdec2,f,c
  3480   00346A  C03C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3481   00346E  C03D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3482   003472  CFDE F03E          	movff	postinc2,vfpfcnvrt@convarg
  3483   003476  CFDD F03F          	movff	postdec2,vfpfcnvrt@convarg+1
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  3486   00347A  0E01               	movlw	1
  3487   00347C  2442               	addwf	vfpfcnvrt@cp^0,w,c
  3488   00347E  6E3C               	movwf	??_vfpfcnvrt^0,c
  3489   003480  0E00               	movlw	0
  3490   003482  2043               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3491   003484  6E3D               	movwf	(??_vfpfcnvrt+1)^0,c
  3492   003486  C038  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3493   00348A  C039  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3494   00348E  C03C  FFDE         	movff	??_vfpfcnvrt,postinc2
  3495   003492  C03D  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3496   003496                     
  3497                           ; BSR set to: 0
  3498                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3499   003496  C036  F029         	movff	vfpfcnvrt@fp,dtoa@fp
  3500   00349A  C037  F02A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3501   00349E  C03E  F02B         	movff	vfpfcnvrt@convarg,dtoa@d
  3502   0034A2  C03F  F02C         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3503   0034A6  EC64  F016         	call	_dtoa	;wreg free
  3504   0034AA  EF75  F01A         	goto	l2551
  3505   0034AE                     l10384:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  3508   0034AE  C038  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3509   0034B2  C039  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3510   0034B6  2ADE               	incf	postinc2,f,c
  3511   0034B8  0E00               	movlw	0
  3512   0034BA  22DD               	addwfc	postdec2,f,c
  3513   0034BC  EF75  F01A         	goto	l2551
  3514   0034C0                     l10388:
  3515                           
  3516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  3517   0034C0  C038  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3518   0034C4  C039  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3519   0034C8  CFDE FFF6          	movff	postinc2,tblptrl
  3520   0034CC  CFDD FFF7          	movff	postdec2,tblptrh
  3521   0034D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3522   0034D0  6AF8               	clrf	tblptru,c
  3523   0034D2                     	endif
  3524   0034D2                     	if	0	;tblptru may be non-zero
  3525   0034D2                     	endif
  3526   0034D2  0008               	tblrd		*
  3527   0034D4  50F5               	movf	tablat,w,c
  3528   0034D6  6E0E               	movwf	fputc@c^0,c
  3529   0034D8  6A0F               	clrf	(fputc@c+1)^0,c
  3530   0034DA  C036  F010         	movff	vfpfcnvrt@fp,fputc@fp
  3531   0034DE  C037  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3532   0034E2  EC95  F01D         	call	_fputc	;wreg free
  3533   0034E6  EF57  F01A         	goto	l10384
  3534   0034EA                     l2551:
  3535   0034EA  0012               	return		;funcret
  3536   0034EC                     __end_of_vfpfcnvrt:
  3537                           	callstack 0
  3538                           
  3539 ;; *************** function _dtoa *****************
  3540 ;; Defined at:
  3541 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  3544 ;;		 -> sprintf@f(12), 
  3545 ;;  d               2   42[COMRAM] int 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  i               2   51[COMRAM] int 
  3548 ;;  w               2   48[COMRAM] int 
  3549 ;;  p               2   46[COMRAM] int 
  3550 ;;  s               1   50[COMRAM] unsigned char 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3560 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;Total ram usage:       13 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 8
  3567 ;; This function calls:
  3568 ;;		___awdiv
  3569 ;;		___awmod
  3570 ;;		_abs
  3571 ;;		_pad
  3572 ;; This function is called by:
  3573 ;;		_vfpfcnvrt
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text14
  3578   002CC8                     __ptext14:
  3579                           	callstack 0
  3580   002CC8                     _dtoa:
  3581                           	callstack 18
  3582   002CC8                     
  3583                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  3584   002CC8  BE2C               	btfsc	(dtoa@d+1)^0,7,c
  3585   002CCA  EF69  F016         	goto	u9681
  3586   002CCE  EF6C  F016         	goto	u9680
  3587   002CD2                     u9681:
  3588   002CD2  0E01               	movlw	1
  3589   002CD4  EF6D  F016         	goto	u9690
  3590   002CD8                     u9680:
  3591   002CD8  0E00               	movlw	0
  3592   002CDA                     u9690:
  3593   002CDA  6E33               	movwf	dtoa@s^0,c
  3594   002CDC                     
  3595                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  3596   002CDC  5033               	movf	dtoa@s^0,w,c
  3597   002CDE  B4D8               	btfsc	status,2,c
  3598   002CE0  EF74  F016         	goto	u9701
  3599   002CE4  EF76  F016         	goto	u9700
  3600   002CE8                     u9701:
  3601   002CE8  EF7A  F016         	goto	l9722
  3602   002CEC                     u9700:
  3603   002CEC                     
  3604                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  3605   002CEC  6C2B               	negf	dtoa@d^0,c
  3606   002CEE  1E2C               	comf	(dtoa@d+1)^0,f,c
  3607   002CF0  B0D8               	btfsc	status,0,c
  3608   002CF2  2A2C               	incf	(dtoa@d+1)^0,f,c
  3609   002CF4                     l9722:
  3610                           
  3611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  3612   002CF4  0100               	movlb	0	; () banked
  3613   002CF6  BF87               	btfsc	(_prec+1)& (0+255),7,b
  3614   002CF8  EF82  F016         	goto	u9710
  3615   002CFC  EF80  F016         	goto	u9711
  3616   002D00                     u9711:
  3617   002D00  EF88  F016         	goto	l2530
  3618   002D04                     u9710:
  3619   002D04                     
  3620                           ; BSR set to: 0
  3621   002D04  0E00               	movlw	0
  3622   002D06  6E30               	movwf	(dtoa@p+1)^0,c
  3623   002D08  0E01               	movlw	1
  3624   002D0A  6E2F               	movwf	dtoa@p^0,c
  3625   002D0C  EF8C  F016         	goto	l2532
  3626   002D10                     l2530:
  3627                           
  3628                           ; BSR set to: 0
  3629   002D10  C086  F02F         	movff	_prec,dtoa@p
  3630   002D14  C087  F030         	movff	_prec+1,dtoa@p+1
  3631   002D18                     l2532:
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  3635   002D18  C084  F031         	movff	_width,dtoa@w
  3636   002D1C  C085  F032         	movff	_width+1,dtoa@w+1
  3637   002D20                     
  3638                           ; BSR set to: 0
  3639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  3640   002D20  5033               	movf	dtoa@s^0,w,c
  3641   002D22  B4D8               	btfsc	status,2,c
  3642   002D24  EF96  F016         	goto	u9721
  3643   002D28  EF98  F016         	goto	u9720
  3644   002D2C                     u9721:
  3645   002D2C  EFAF  F016         	goto	l2533
  3646   002D30                     u9720:
  3647   002D30                     
  3648                           ; BSR set to: 0
  3649                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  3650   002D30  0631               	decf	dtoa@w^0,f,c
  3651   002D32  A0D8               	btfss	status,0,c
  3652   002D34  0632               	decf	(dtoa@w+1)^0,f,c
  3653   002D36                     
  3654                           ; BSR set to: 0
  3655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  3656   002D36  5033               	movf	dtoa@s^0,w,c
  3657   002D38  A4D8               	btfss	status,2,c
  3658   002D3A  EFA1  F016         	goto	u9731
  3659   002D3E  EFA3  F016         	goto	u9730
  3660   002D42                     u9731:
  3661   002D42  EFA9  F016         	goto	l9734
  3662   002D46                     u9730:
  3663   002D46                     
  3664                           ; BSR set to: 0
  3665   002D46  0E00               	movlw	0
  3666   002D48  6E2E               	movwf	(_dtoa$5164+1)^0,c
  3667   002D4A  0E2B               	movlw	43
  3668   002D4C  6E2D               	movwf	_dtoa$5164^0,c
  3669   002D4E  EFAD  F016         	goto	l9736
  3670   002D52                     l9734:
  3671                           
  3672                           ; BSR set to: 0
  3673   002D52  0E00               	movlw	0
  3674   002D54  6E2E               	movwf	(_dtoa$5164+1)^0,c
  3675   002D56  0E2D               	movlw	45
  3676   002D58  6E2D               	movwf	_dtoa$5164^0,c
  3677   002D5A                     l9736:
  3678                           
  3679                           ; BSR set to: 0
  3680   002D5A  C02D  F033         	movff	_dtoa$5164,dtoa@s
  3681   002D5E                     l2533:
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  3685   002D5E  0E00               	movlw	0
  3686   002D60  6E35               	movwf	(dtoa@i+1)^0,c
  3687   002D62  0E1F               	movlw	31
  3688   002D64  6E34               	movwf	dtoa@i^0,c
  3689   002D66                     
  3690                           ; BSR set to: 0
  3691                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  3692   002D66  0E00               	movlw	0
  3693   002D68  0101               	movlb	1	; () banked
  3694   002D6A  6F6E               	movwf	(_dbuf+31)& (0+255),b
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3697   002D6C  EFE8  F016         	goto	l9750
  3698   002D70                     l9740:
  3699                           
  3700                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  3701   002D70  0634               	decf	dtoa@i^0,f,c
  3702   002D72  A0D8               	btfss	status,0,c
  3703   002D74  0635               	decf	(dtoa@i+1)^0,f,c
  3704   002D76                     
  3705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3706   002D76  0E4F               	movlw	low _dbuf
  3707   002D78  2434               	addwf	dtoa@i^0,w,c
  3708   002D7A  6ED9               	movwf	fsr2l,c
  3709   002D7C  0E01               	movlw	high _dbuf
  3710   002D7E  2035               	addwfc	(dtoa@i+1)^0,w,c
  3711   002D80  6EDA               	movwf	fsr2h,c
  3712   002D82  C02B  F00E         	movff	dtoa@d,___awmod@dividend
  3713   002D86  C02C  F00F         	movff	dtoa@d+1,___awmod@dividend+1
  3714   002D8A  0E00               	movlw	0
  3715   002D8C  6E11               	movwf	(___awmod@divisor+1)^0,c
  3716   002D8E  0E0A               	movlw	10
  3717   002D90  6E10               	movwf	___awmod@divisor^0,c
  3718   002D92  EC7C  F01F         	call	___awmod	;wreg free
  3719   002D96  C00E  F014         	movff	?___awmod,abs@a
  3720   002D9A  C00F  F015         	movff	?___awmod+1,abs@a+1
  3721   002D9E  ECF4  F023         	call	_abs	;wreg free
  3722   002DA2  5014               	movf	?_abs^0,w,c
  3723   002DA4  0F30               	addlw	48
  3724   002DA6  6EDF               	movwf	indf2,c
  3725   002DA8                     
  3726                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  3727   002DA8  062F               	decf	dtoa@p^0,f,c
  3728   002DAA  A0D8               	btfss	status,0,c
  3729   002DAC  0630               	decf	(dtoa@p+1)^0,f,c
  3730   002DAE                     
  3731                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  3732   002DAE  0631               	decf	dtoa@w^0,f,c
  3733   002DB0  A0D8               	btfss	status,0,c
  3734   002DB2  0632               	decf	(dtoa@w+1)^0,f,c
  3735   002DB4                     
  3736                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3737   002DB4  C02B  F00E         	movff	dtoa@d,___awdiv@dividend
  3738   002DB8  C02C  F00F         	movff	dtoa@d+1,___awdiv@dividend+1
  3739   002DBC  0E00               	movlw	0
  3740   002DBE  6E11               	movwf	(___awdiv@divisor+1)^0,c
  3741   002DC0  0E0A               	movlw	10
  3742   002DC2  6E10               	movwf	___awdiv@divisor^0,c
  3743   002DC4  ECFA  F01D         	call	___awdiv	;wreg free
  3744   002DC8  C00E  F02B         	movff	?___awdiv,dtoa@d
  3745   002DCC  C00F  F02C         	movff	?___awdiv+1,dtoa@d+1
  3746   002DD0                     l9750:
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3749   002DD0  BE35               	btfsc	(dtoa@i+1)^0,7,c
  3750   002DD2  EFF3  F016         	goto	u9741
  3751   002DD6  5035               	movf	(dtoa@i+1)^0,w,c
  3752   002DD8  E108               	bnz	u9740
  3753   002DDA  0434               	decf	dtoa@i^0,w,c
  3754   002DDC  A0D8               	btfss	status,0,c
  3755   002DDE  EFF3  F016         	goto	u9741
  3756   002DE2  EFF5  F016         	goto	u9740
  3757   002DE6                     u9741:
  3758   002DE6  EF0B  F017         	goto	l9756
  3759   002DEA                     u9740:
  3760   002DEA  502B               	movf	dtoa@d^0,w,c
  3761   002DEC  102C               	iorwf	(dtoa@d+1)^0,w,c
  3762   002DEE  A4D8               	btfss	status,2,c
  3763   002DF0  EFFC  F016         	goto	u9751
  3764   002DF4  EFFE  F016         	goto	u9750
  3765   002DF8                     u9751:
  3766   002DF8  EFB8  F016         	goto	l9740
  3767   002DFC                     u9750:
  3768   002DFC  BE30               	btfsc	(dtoa@p+1)^0,7,c
  3769   002DFE  EF0B  F017         	goto	u9760
  3770   002E02  5030               	movf	(dtoa@p+1)^0,w,c
  3771   002E04  E106               	bnz	u9761
  3772   002E06  042F               	decf	dtoa@p^0,w,c
  3773   002E08  B0D8               	btfsc	status,0,c
  3774   002E0A  EF09  F017         	goto	u9761
  3775   002E0E  EF0B  F017         	goto	u9760
  3776   002E12                     u9761:
  3777   002E12  EFB8  F016         	goto	l9740
  3778   002E16                     u9760:
  3779   002E16                     l9756:
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3782   002E16  5033               	movf	dtoa@s^0,w,c
  3783   002E18  B4D8               	btfsc	status,2,c
  3784   002E1A  EF11  F017         	goto	u9771
  3785   002E1E  EF13  F017         	goto	u9770
  3786   002E22                     u9771:
  3787   002E22  EF1E  F017         	goto	l9762
  3788   002E26                     u9770:
  3789   002E26                     
  3790                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3791   002E26  0634               	decf	dtoa@i^0,f,c
  3792   002E28  A0D8               	btfss	status,0,c
  3793   002E2A  0635               	decf	(dtoa@i+1)^0,f,c
  3794   002E2C                     
  3795                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3796   002E2C  0E4F               	movlw	low _dbuf
  3797   002E2E  2434               	addwf	dtoa@i^0,w,c
  3798   002E30  6ED9               	movwf	fsr2l,c
  3799   002E32  0E01               	movlw	high _dbuf
  3800   002E34  2035               	addwfc	(dtoa@i+1)^0,w,c
  3801   002E36  6EDA               	movwf	fsr2h,c
  3802   002E38  C033  FFDF         	movff	dtoa@s,indf2
  3803   002E3C                     l9762:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3806   002E3C  C029  F01E         	movff	dtoa@fp,pad@fp
  3807   002E40  C02A  F01F         	movff	dtoa@fp+1,pad@fp+1
  3808   002E44  0E4F               	movlw	low _dbuf
  3809   002E46  2434               	addwf	dtoa@i^0,w,c
  3810   002E48  6E20               	movwf	pad@buf^0,c
  3811   002E4A  0E01               	movlw	high _dbuf
  3812   002E4C  2035               	addwfc	(dtoa@i+1)^0,w,c
  3813   002E4E  6E21               	movwf	(pad@buf+1)^0,c
  3814   002E50  C031  F022         	movff	dtoa@w,pad@p
  3815   002E54  C032  F023         	movff	dtoa@w+1,pad@p+1
  3816   002E58  EC08  F021         	call	_pad	;wreg free
  3817   002E5C  0012               	return		;funcret
  3818   002E5E                     __end_of_dtoa:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _pad *****************
  3822 ;; Defined at:
  3823 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3826 ;;		 -> sprintf@f(12), 
  3827 ;;  buf             2   31[COMRAM] PTR unsigned char 
  3828 ;;		 -> dbuf(32), 
  3829 ;;  p               2   33[COMRAM] int 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  w               2   38[COMRAM] int 
  3832 ;;  i               2   36[COMRAM] int 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3842 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;Total ram usage:       11 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 7
  3849 ;; This function calls:
  3850 ;;		_fputc
  3851 ;;		_fputs
  3852 ;; This function is called by:
  3853 ;;		_dtoa
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text15
  3858   004210                     __ptext15:
  3859                           	callstack 0
  3860   004210                     _pad:
  3861                           	callstack 18
  3862   004210                     
  3863                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3864   004210  BE23               	btfsc	(pad@p+1)^0,7,c
  3865   004212  EF0D  F021         	goto	u9591
  3866   004216  EF0F  F021         	goto	u9590
  3867   00421A                     u9591:
  3868   00421A  EF15  F021         	goto	l9654
  3869   00421E                     u9590:
  3870   00421E  C022  F027         	movff	pad@p,pad@w
  3871   004222  C023  F028         	movff	pad@p+1,pad@w+1
  3872   004226  EF19  F021         	goto	l2521
  3873   00422A                     l9654:
  3874   00422A  0E00               	movlw	0
  3875   00422C  6E28               	movwf	(pad@w+1)^0,c
  3876   00422E  0E00               	movlw	0
  3877   004230  6E27               	movwf	pad@w^0,c
  3878   004232                     l2521:
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3881   004232  0E00               	movlw	0
  3882   004234  6E26               	movwf	(pad@i+1)^0,c
  3883   004236  0E00               	movlw	0
  3884   004238  6E25               	movwf	pad@i^0,c
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3887   00423A  EF2B  F021         	goto	l9660
  3888   00423E                     l9656:
  3889                           
  3890                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3891   00423E  0E00               	movlw	0
  3892   004240  6E0F               	movwf	(fputc@c+1)^0,c
  3893   004242  0E20               	movlw	32
  3894   004244  6E0E               	movwf	fputc@c^0,c
  3895   004246  C01E  F010         	movff	pad@fp,fputc@fp
  3896   00424A  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  3897   00424E  EC95  F01D         	call	_fputc	;wreg free
  3898   004252                     
  3899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3900   004252  4A25               	infsnz	pad@i^0,f,c
  3901   004254  2A26               	incf	(pad@i+1)^0,f,c
  3902   004256                     l9660:
  3903                           
  3904                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3905   004256  5027               	movf	pad@w^0,w,c
  3906   004258  5C25               	subwf	pad@i^0,w,c
  3907   00425A  5026               	movf	(pad@i+1)^0,w,c
  3908   00425C  0A80               	xorlw	128
  3909   00425E  6E24               	movwf	??_pad^0,c
  3910   004260  5028               	movf	(pad@w+1)^0,w,c
  3911   004262  0A80               	xorlw	128
  3912   004264  5824               	subwfb	??_pad^0,w,c
  3913   004266  A0D8               	btfss	status,0,c
  3914   004268  EF38  F021         	goto	u9601
  3915   00426C  EF3A  F021         	goto	u9600
  3916   004270                     u9601:
  3917   004270  EF1F  F021         	goto	l9656
  3918   004274                     u9600:
  3919   004274                     
  3920                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3921   004274  C020  F017         	movff	pad@buf,fputs@s
  3922   004278  C021  F018         	movff	pad@buf+1,fputs@s+1
  3923   00427C  C01E  F019         	movff	pad@fp,fputs@fp
  3924   004280  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  3925   004284  EC8E  F023         	call	_fputs	;wreg free
  3926   004288  0012               	return		;funcret
  3927   00428A                     __end_of_pad:
  3928                           	callstack 0
  3929                           
  3930 ;; *************** function _fputs *****************
  3931 ;; Defined at:
  3932 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  s               2   22[COMRAM] PTR const unsigned char 
  3935 ;;		 -> dbuf(32), 
  3936 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  3937 ;;		 -> sprintf@f(12), 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  i               2   27[COMRAM] int 
  3940 ;;  c               1   26[COMRAM] unsigned char 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  2   22[COMRAM] int 
  3943 ;; Registers used:
  3944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;Total ram usage:        7 bytes
  3955 ;; Hardware stack levels used: 1
  3956 ;; Hardware stack levels required when called: 6
  3957 ;; This function calls:
  3958 ;;		_fputc
  3959 ;; This function is called by:
  3960 ;;		_pad
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text16
  3965   00471C                     __ptext16:
  3966                           	callstack 0
  3967   00471C                     _fputs:
  3968                           	callstack 18
  3969   00471C  0E00               	movlw	0
  3970   00471E  6E1D               	movwf	(fputs@i+1)^0,c
  3971   004720  0E00               	movlw	0
  3972   004722  6E1C               	movwf	fputs@i^0,c
  3973   004724  EF9F  F023         	goto	l9544
  3974   004728                     l9540:
  3975   004728  C01B  F00E         	movff	fputs@c,fputc@c
  3976   00472C  6A0F               	clrf	(fputc@c+1)^0,c
  3977   00472E  C019  F010         	movff	fputs@fp,fputc@fp
  3978   004732  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  3979   004736  EC95  F01D         	call	_fputc	;wreg free
  3980   00473A  4A1C               	infsnz	fputs@i^0,f,c
  3981   00473C  2A1D               	incf	(fputs@i+1)^0,f,c
  3982   00473E                     l9544:
  3983   00473E  501C               	movf	fputs@i^0,w,c
  3984   004740  2417               	addwf	fputs@s^0,w,c
  3985   004742  6ED9               	movwf	fsr2l,c
  3986   004744  501D               	movf	(fputs@i+1)^0,w,c
  3987   004746  2018               	addwfc	(fputs@s+1)^0,w,c
  3988   004748  6EDA               	movwf	fsr2h,c
  3989   00474A  50DF               	movf	indf2,w,c
  3990   00474C  6E1B               	movwf	fputs@c^0,c
  3991   00474E  501B               	movf	fputs@c^0,w,c
  3992   004750  A4D8               	btfss	status,2,c
  3993   004752  EFAD  F023         	goto	u9421
  3994   004756  EFAF  F023         	goto	u9420
  3995   00475A                     u9421:
  3996   00475A  EF94  F023         	goto	l9540
  3997   00475E                     u9420:
  3998   00475E  0012               	return		;funcret
  3999   004760                     __end_of_fputs:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function _fputc *****************
  4003 ;; Defined at:
  4004 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  c               2   13[COMRAM] int 
  4007 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4008 ;;		 -> sprintf@f(12), 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  2   13[COMRAM] int 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4020 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;Total ram usage:        9 bytes
  4025 ;; Hardware stack levels used: 1
  4026 ;; Hardware stack levels required when called: 5
  4027 ;; This function calls:
  4028 ;;		_putch
  4029 ;; This function is called by:
  4030 ;;		_pad
  4031 ;;		_vfpfcnvrt
  4032 ;;		_fputs
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text17
  4037   003B2A                     __ptext17:
  4038                           	callstack 0
  4039   003B2A                     _fputc:
  4040                           	callstack 21
  4041   003B2A  5010               	movf	fputc@fp^0,w,c
  4042   003B2C  1011               	iorwf	(fputc@fp+1)^0,w,c
  4043   003B2E  B4D8               	btfsc	status,2,c
  4044   003B30  EF9C  F01D         	goto	u9381
  4045   003B34  EF9E  F01D         	goto	u9380
  4046   003B38                     u9381:
  4047   003B38  EFA7  F01D         	goto	l9528
  4048   003B3C                     u9380:
  4049   003B3C  5010               	movf	fputc@fp^0,w,c
  4050   003B3E  1011               	iorwf	(fputc@fp+1)^0,w,c
  4051   003B40  A4D8               	btfss	status,2,c
  4052   003B42  EFA5  F01D         	goto	u9391
  4053   003B46  EFA7  F01D         	goto	u9390
  4054   003B4A                     u9391:
  4055   003B4A  EFAC  F01D         	goto	l9530
  4056   003B4E                     u9390:
  4057   003B4E                     l9528:
  4058   003B4E  500E               	movf	fputc@c^0,w,c
  4059   003B50  EC98  F025         	call	_putch
  4060   003B54  EFF9  F01D         	goto	l2576
  4061   003B58                     l9530:
  4062   003B58  EE20 F00A          	lfsr	2,10
  4063   003B5C  5010               	movf	fputc@fp^0,w,c
  4064   003B5E  26D9               	addwf	fsr2l,f,c
  4065   003B60  5011               	movf	(fputc@fp+1)^0,w,c
  4066   003B62  22DA               	addwfc	fsr2h,f,c
  4067   003B64  50DE               	movf	postinc2,w,c
  4068   003B66  10DE               	iorwf	postinc2,w,c
  4069   003B68  B4D8               	btfsc	status,2,c
  4070   003B6A  EFB9  F01D         	goto	u9401
  4071   003B6E  EFBB  F01D         	goto	u9400
  4072   003B72                     u9401:
  4073   003B72  EFD6  F01D         	goto	l9534
  4074   003B76                     u9400:
  4075   003B76  EE20 F00A          	lfsr	2,10
  4076   003B7A  5010               	movf	fputc@fp^0,w,c
  4077   003B7C  26D9               	addwf	fsr2l,f,c
  4078   003B7E  5011               	movf	(fputc@fp+1)^0,w,c
  4079   003B80  22DA               	addwfc	fsr2h,f,c
  4080   003B82  EE10 F003          	lfsr	1,3
  4081   003B86  5010               	movf	fputc@fp^0,w,c
  4082   003B88  26E1               	addwf	fsr1l,f,c
  4083   003B8A  5011               	movf	(fputc@fp+1)^0,w,c
  4084   003B8C  22E2               	addwfc	fsr1h,f,c
  4085   003B8E  50DE               	movf	postinc2,w,c
  4086   003B90  5CE6               	subwf	postinc1,w,c
  4087   003B92  50E6               	movf	postinc1,w,c
  4088   003B94  0A80               	xorlw	128
  4089   003B96  6E16               	movwf	(??_fputc+4)^0,c
  4090   003B98  50DE               	movf	postinc2,w,c
  4091   003B9A  0A80               	xorlw	128
  4092   003B9C  5816               	subwfb	(??_fputc+4)^0,w,c
  4093   003B9E  B0D8               	btfsc	status,0,c
  4094   003BA0  EFD4  F01D         	goto	u9411
  4095   003BA4  EFD6  F01D         	goto	u9410
  4096   003BA8                     u9411:
  4097   003BA8  EFF9  F01D         	goto	l2576
  4098   003BAC                     u9410:
  4099   003BAC                     l9534:
  4100   003BAC  EE20 F003          	lfsr	2,3
  4101   003BB0  5010               	movf	fputc@fp^0,w,c
  4102   003BB2  26D9               	addwf	fsr2l,f,c
  4103   003BB4  5011               	movf	(fputc@fp+1)^0,w,c
  4104   003BB6  22DA               	addwfc	fsr2h,f,c
  4105   003BB8  CFDE F012          	movff	postinc2,??_fputc
  4106   003BBC  CFDD F013          	movff	postdec2,??_fputc+1
  4107   003BC0  C010  FFD9         	movff	fputc@fp,fsr2l
  4108   003BC4  C011  FFDA         	movff	fputc@fp+1,fsr2h
  4109   003BC8  CFDE F014          	movff	postinc2,??_fputc+2
  4110   003BCC  CFDD F015          	movff	postdec2,??_fputc+3
  4111   003BD0  5012               	movf	??_fputc^0,w,c
  4112   003BD2  2414               	addwf	(??_fputc+2)^0,w,c
  4113   003BD4  6ED9               	movwf	fsr2l,c
  4114   003BD6  5013               	movf	(??_fputc+1)^0,w,c
  4115   003BD8  2015               	addwfc	(??_fputc+3)^0,w,c
  4116   003BDA  6EDA               	movwf	fsr2h,c
  4117   003BDC  C00E  FFDF         	movff	fputc@c,indf2
  4118   003BE0  EE20 F003          	lfsr	2,3
  4119   003BE4  5010               	movf	fputc@fp^0,w,c
  4120   003BE6  26D9               	addwf	fsr2l,f,c
  4121   003BE8  5011               	movf	(fputc@fp+1)^0,w,c
  4122   003BEA  22DA               	addwfc	fsr2h,f,c
  4123   003BEC  2ADE               	incf	postinc2,f,c
  4124   003BEE  0E00               	movlw	0
  4125   003BF0  22DD               	addwfc	postdec2,f,c
  4126   003BF2                     l2576:
  4127   003BF2  0012               	return		;funcret
  4128   003BF4                     __end_of_fputc:
  4129                           	callstack 0
  4130                           
  4131 ;; *************** function _putch *****************
  4132 ;; Defined at:
  4133 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  c               1    wreg     unsigned char 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  c               1    0[COMRAM] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      void 
  4140 ;; Registers used:
  4141 ;;		wreg
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;Total ram usage:        0 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; Hardware stack levels required when called: 4
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_fputc
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text18
  4162   004B30                     __ptext18:
  4163                           	callstack 0
  4164   004B30                     _putch:
  4165                           	callstack 21
  4166   004B30  0012               	return		;funcret
  4167   004B32                     __end_of_putch:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function _abs *****************
  4171 ;; Defined at:
  4172 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  a               2   19[COMRAM] int 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  2   19[COMRAM] int 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;Total ram usage:        4 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 4
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_dtoa
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text19
  4201   0047E8                     __ptext19:
  4202                           	callstack 0
  4203   0047E8                     _abs:
  4204                           	callstack 21
  4205   0047E8  BE15               	btfsc	(abs@a+1)^0,7,c
  4206   0047EA  EF01  F024         	goto	u9610
  4207   0047EE  5015               	movf	(abs@a+1)^0,w,c
  4208   0047F0  E106               	bnz	u9611
  4209   0047F2  0414               	decf	abs@a^0,w,c
  4210   0047F4  B0D8               	btfsc	status,0,c
  4211   0047F6  EFFF  F023         	goto	u9611
  4212   0047FA  EF01  F024         	goto	u9610
  4213   0047FE                     u9611:
  4214   0047FE  EF0F  F024         	goto	l2561
  4215   004802                     u9610:
  4216   004802  C014  F016         	movff	abs@a,??_abs
  4217   004806  C015  F017         	movff	abs@a+1,??_abs+1
  4218   00480A  1E16               	comf	??_abs^0,f,c
  4219   00480C  1E17               	comf	(??_abs+1)^0,f,c
  4220   00480E  4A16               	infsnz	??_abs^0,f,c
  4221   004810  2A17               	incf	(??_abs+1)^0,f,c
  4222   004812  C016  F014         	movff	??_abs,?_abs
  4223   004816  C017  F015         	movff	??_abs+1,?_abs+1
  4224   00481A  EF13  F024         	goto	l2564
  4225   00481E                     l2561:
  4226   00481E  C014  F014         	movff	abs@a,?_abs
  4227   004822  C015  F015         	movff	abs@a+1,?_abs+1
  4228   004826                     l2564:
  4229   004826  0012               	return		;funcret
  4230   004828                     __end_of_abs:
  4231                           	callstack 0
  4232                           
  4233 ;; *************** function ___awmod *****************
  4234 ;; Defined at:
  4235 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  dividend        2   13[COMRAM] int 
  4238 ;;  divisor         2   15[COMRAM] int 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  sign            1   18[COMRAM] unsigned char 
  4241 ;;  counter         1   17[COMRAM] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2   13[COMRAM] int 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;Total ram usage:        6 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 4
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_dtoa
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text20
  4266   003EF8                     __ptext20:
  4267                           	callstack 0
  4268   003EF8                     ___awmod:
  4269                           	callstack 21
  4270   003EF8  0E00               	movlw	0
  4271   003EFA  6E13               	movwf	___awmod@sign^0,c
  4272   003EFC  BE0F               	btfsc	(___awmod@dividend+1)^0,7,c
  4273   003EFE  EF85  F01F         	goto	u9530
  4274   003F02  EF83  F01F         	goto	u9531
  4275   003F06                     u9531:
  4276   003F06  EF8B  F01F         	goto	l9622
  4277   003F0A                     u9530:
  4278   003F0A  6C0E               	negf	___awmod@dividend^0,c
  4279   003F0C  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  4280   003F0E  B0D8               	btfsc	status,0,c
  4281   003F10  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  4282   003F12  0E01               	movlw	1
  4283   003F14  6E13               	movwf	___awmod@sign^0,c
  4284   003F16                     l9622:
  4285   003F16  BE11               	btfsc	(___awmod@divisor+1)^0,7,c
  4286   003F18  EF92  F01F         	goto	u9540
  4287   003F1C  EF90  F01F         	goto	u9541
  4288   003F20                     u9541:
  4289   003F20  EF96  F01F         	goto	l9626
  4290   003F24                     u9540:
  4291   003F24  6C10               	negf	___awmod@divisor^0,c
  4292   003F26  1E11               	comf	(___awmod@divisor+1)^0,f,c
  4293   003F28  B0D8               	btfsc	status,0,c
  4294   003F2A  2A11               	incf	(___awmod@divisor+1)^0,f,c
  4295   003F2C                     l9626:
  4296   003F2C  5010               	movf	___awmod@divisor^0,w,c
  4297   003F2E  1011               	iorwf	(___awmod@divisor+1)^0,w,c
  4298   003F30  B4D8               	btfsc	status,2,c
  4299   003F32  EF9D  F01F         	goto	u9551
  4300   003F36  EF9F  F01F         	goto	u9550
  4301   003F3A                     u9551:
  4302   003F3A  EFC3  F01F         	goto	l9642
  4303   003F3E                     u9550:
  4304   003F3E  0E01               	movlw	1
  4305   003F40  6E12               	movwf	___awmod@counter^0,c
  4306   003F42  EFA7  F01F         	goto	l9632
  4307   003F46                     l9630:
  4308   003F46  90D8               	bcf	status,0,c
  4309   003F48  3610               	rlcf	___awmod@divisor^0,f,c
  4310   003F4A  3611               	rlcf	(___awmod@divisor+1)^0,f,c
  4311   003F4C  2A12               	incf	___awmod@counter^0,f,c
  4312   003F4E                     l9632:
  4313   003F4E  AE11               	btfss	(___awmod@divisor+1)^0,7,c
  4314   003F50  EFAC  F01F         	goto	u9561
  4315   003F54  EFAE  F01F         	goto	u9560
  4316   003F58                     u9561:
  4317   003F58  EFA3  F01F         	goto	l9630
  4318   003F5C                     u9560:
  4319   003F5C                     l9634:
  4320   003F5C  5010               	movf	___awmod@divisor^0,w,c
  4321   003F5E  5C0E               	subwf	___awmod@dividend^0,w,c
  4322   003F60  5011               	movf	(___awmod@divisor+1)^0,w,c
  4323   003F62  580F               	subwfb	(___awmod@dividend+1)^0,w,c
  4324   003F64  A0D8               	btfss	status,0,c
  4325   003F66  EFB7  F01F         	goto	u9571
  4326   003F6A  EFB9  F01F         	goto	u9570
  4327   003F6E                     u9571:
  4328   003F6E  EFBD  F01F         	goto	l9638
  4329   003F72                     u9570:
  4330   003F72  5010               	movf	___awmod@divisor^0,w,c
  4331   003F74  5E0E               	subwf	___awmod@dividend^0,f,c
  4332   003F76  5011               	movf	(___awmod@divisor+1)^0,w,c
  4333   003F78  5A0F               	subwfb	(___awmod@dividend+1)^0,f,c
  4334   003F7A                     l9638:
  4335   003F7A  90D8               	bcf	status,0,c
  4336   003F7C  3211               	rrcf	(___awmod@divisor+1)^0,f,c
  4337   003F7E  3210               	rrcf	___awmod@divisor^0,f,c
  4338   003F80  2E12               	decfsz	___awmod@counter^0,f,c
  4339   003F82  EFAE  F01F         	goto	l9634
  4340   003F86                     l9642:
  4341   003F86  5013               	movf	___awmod@sign^0,w,c
  4342   003F88  B4D8               	btfsc	status,2,c
  4343   003F8A  EFC9  F01F         	goto	u9581
  4344   003F8E  EFCB  F01F         	goto	u9580
  4345   003F92                     u9581:
  4346   003F92  EFCF  F01F         	goto	l9646
  4347   003F96                     u9580:
  4348   003F96  6C0E               	negf	___awmod@dividend^0,c
  4349   003F98  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  4350   003F9A  B0D8               	btfsc	status,0,c
  4351   003F9C  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  4352   003F9E                     l9646:
  4353   003F9E  C00E  F00E         	movff	___awmod@dividend,?___awmod
  4354   003FA2  C00F  F00F         	movff	___awmod@dividend+1,?___awmod+1
  4355   003FA6  0012               	return		;funcret
  4356   003FA8                     __end_of___awmod:
  4357                           	callstack 0
  4358                           
  4359 ;; *************** function ___awdiv *****************
  4360 ;; Defined at:
  4361 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  dividend        2   13[COMRAM] int 
  4364 ;;  divisor         2   15[COMRAM] int 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  quotient        2   19[COMRAM] int 
  4367 ;;  sign            1   18[COMRAM] unsigned char 
  4368 ;;  counter         1   17[COMRAM] unsigned char 
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  2   13[COMRAM] int 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;Total ram usage:        8 bytes
  4383 ;; Hardware stack levels used: 1
  4384 ;; Hardware stack levels required when called: 4
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_dtoa
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text21
  4393   003BF4                     __ptext21:
  4394                           	callstack 0
  4395   003BF4                     ___awdiv:
  4396                           	callstack 21
  4397   003BF4  0E00               	movlw	0
  4398   003BF6  6E13               	movwf	___awdiv@sign^0,c
  4399   003BF8  BE11               	btfsc	(___awdiv@divisor+1)^0,7,c
  4400   003BFA  EF03  F01E         	goto	u9470
  4401   003BFE  EF01  F01E         	goto	u9471
  4402   003C02                     u9471:
  4403   003C02  EF09  F01E         	goto	l9578
  4404   003C06                     u9470:
  4405   003C06  6C10               	negf	___awdiv@divisor^0,c
  4406   003C08  1E11               	comf	(___awdiv@divisor+1)^0,f,c
  4407   003C0A  B0D8               	btfsc	status,0,c
  4408   003C0C  2A11               	incf	(___awdiv@divisor+1)^0,f,c
  4409   003C0E  0E01               	movlw	1
  4410   003C10  6E13               	movwf	___awdiv@sign^0,c
  4411   003C12                     l9578:
  4412   003C12  BE0F               	btfsc	(___awdiv@dividend+1)^0,7,c
  4413   003C14  EF10  F01E         	goto	u9480
  4414   003C18  EF0E  F01E         	goto	u9481
  4415   003C1C                     u9481:
  4416   003C1C  EF16  F01E         	goto	l9584
  4417   003C20                     u9480:
  4418   003C20  6C0E               	negf	___awdiv@dividend^0,c
  4419   003C22  1E0F               	comf	(___awdiv@dividend+1)^0,f,c
  4420   003C24  B0D8               	btfsc	status,0,c
  4421   003C26  2A0F               	incf	(___awdiv@dividend+1)^0,f,c
  4422   003C28  0E01               	movlw	1
  4423   003C2A  1A13               	xorwf	___awdiv@sign^0,f,c
  4424   003C2C                     l9584:
  4425   003C2C  0E00               	movlw	0
  4426   003C2E  6E15               	movwf	(___awdiv@quotient+1)^0,c
  4427   003C30  0E00               	movlw	0
  4428   003C32  6E14               	movwf	___awdiv@quotient^0,c
  4429   003C34  5010               	movf	___awdiv@divisor^0,w,c
  4430   003C36  1011               	iorwf	(___awdiv@divisor+1)^0,w,c
  4431   003C38  B4D8               	btfsc	status,2,c
  4432   003C3A  EF21  F01E         	goto	u9491
  4433   003C3E  EF23  F01E         	goto	u9490
  4434   003C42                     u9491:
  4435   003C42  EF4B  F01E         	goto	l9606
  4436   003C46                     u9490:
  4437   003C46  0E01               	movlw	1
  4438   003C48  6E12               	movwf	___awdiv@counter^0,c
  4439   003C4A  EF2B  F01E         	goto	l9592
  4440   003C4E                     l9590:
  4441   003C4E  90D8               	bcf	status,0,c
  4442   003C50  3610               	rlcf	___awdiv@divisor^0,f,c
  4443   003C52  3611               	rlcf	(___awdiv@divisor+1)^0,f,c
  4444   003C54  2A12               	incf	___awdiv@counter^0,f,c
  4445   003C56                     l9592:
  4446   003C56  AE11               	btfss	(___awdiv@divisor+1)^0,7,c
  4447   003C58  EF30  F01E         	goto	u9501
  4448   003C5C  EF32  F01E         	goto	u9500
  4449   003C60                     u9501:
  4450   003C60  EF27  F01E         	goto	l9590
  4451   003C64                     u9500:
  4452   003C64                     l9594:
  4453   003C64  90D8               	bcf	status,0,c
  4454   003C66  3614               	rlcf	___awdiv@quotient^0,f,c
  4455   003C68  3615               	rlcf	(___awdiv@quotient+1)^0,f,c
  4456   003C6A  5010               	movf	___awdiv@divisor^0,w,c
  4457   003C6C  5C0E               	subwf	___awdiv@dividend^0,w,c
  4458   003C6E  5011               	movf	(___awdiv@divisor+1)^0,w,c
  4459   003C70  580F               	subwfb	(___awdiv@dividend+1)^0,w,c
  4460   003C72  A0D8               	btfss	status,0,c
  4461   003C74  EF3E  F01E         	goto	u9511
  4462   003C78  EF40  F01E         	goto	u9510
  4463   003C7C                     u9511:
  4464   003C7C  EF45  F01E         	goto	l9602
  4465   003C80                     u9510:
  4466   003C80  5010               	movf	___awdiv@divisor^0,w,c
  4467   003C82  5E0E               	subwf	___awdiv@dividend^0,f,c
  4468   003C84  5011               	movf	(___awdiv@divisor+1)^0,w,c
  4469   003C86  5A0F               	subwfb	(___awdiv@dividend+1)^0,f,c
  4470   003C88  8014               	bsf	___awdiv@quotient^0,0,c
  4471   003C8A                     l9602:
  4472   003C8A  90D8               	bcf	status,0,c
  4473   003C8C  3211               	rrcf	(___awdiv@divisor+1)^0,f,c
  4474   003C8E  3210               	rrcf	___awdiv@divisor^0,f,c
  4475   003C90  2E12               	decfsz	___awdiv@counter^0,f,c
  4476   003C92  EF32  F01E         	goto	l9594
  4477   003C96                     l9606:
  4478   003C96  5013               	movf	___awdiv@sign^0,w,c
  4479   003C98  B4D8               	btfsc	status,2,c
  4480   003C9A  EF51  F01E         	goto	u9521
  4481   003C9E  EF53  F01E         	goto	u9520
  4482   003CA2                     u9521:
  4483   003CA2  EF57  F01E         	goto	l9610
  4484   003CA6                     u9520:
  4485   003CA6  6C14               	negf	___awdiv@quotient^0,c
  4486   003CA8  1E15               	comf	(___awdiv@quotient+1)^0,f,c
  4487   003CAA  B0D8               	btfsc	status,0,c
  4488   003CAC  2A15               	incf	(___awdiv@quotient+1)^0,f,c
  4489   003CAE                     l9610:
  4490   003CAE  C014  F00E         	movff	___awdiv@quotient,?___awdiv
  4491   003CB2  C015  F00F         	movff	___awdiv@quotient+1,?___awdiv+1
  4492   003CB6  0012               	return		;funcret
  4493   003CB8                     __end_of___awdiv:
  4494                           	callstack 0
  4495                           
  4496 ;; *************** function _memset *****************
  4497 ;; Defined at:
  4498 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;  dest            2   13[COMRAM] PTR void 
  4501 ;;		 -> lm35_res1_str(6), 
  4502 ;;  c               2   15[COMRAM] int 
  4503 ;;  n               2   17[COMRAM] unsigned int 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  s               2   23[COMRAM] PTR unsigned char 
  4506 ;;		 -> lm35_res1_str(6), 
  4507 ;;  k               2   21[COMRAM] unsigned int 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  2   13[COMRAM] PTR void 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4517 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;Total ram usage:       12 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 4
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_convert_uint16_to_string
  4528 ;;		_convert_uint8_to_string
  4529 ;;		_convert_uint32_to_string
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text22
  4534   002E5E                     __ptext22:
  4535                           	callstack 0
  4536   002E5E                     _memset:
  4537                           	callstack 25
  4538   002E5E  C00E  F018         	movff	memset@dest,memset@s
  4539   002E62  C00F  F019         	movff	memset@dest+1,memset@s+1
  4540   002E66  5012               	movf	memset@n^0,w,c
  4541   002E68  1013               	iorwf	(memset@n+1)^0,w,c
  4542   002E6A  A4D8               	btfss	status,2,c
  4543   002E6C  EF3A  F017         	goto	u11051
  4544   002E70  EF3C  F017         	goto	u11050
  4545   002E74                     u11051:
  4546   002E74  EF3E  F017         	goto	l10714
  4547   002E78                     u11050:
  4548   002E78  EFE9  F017         	goto	l2486
  4549   002E7C                     l10714:
  4550   002E7C  C018  FFD9         	movff	memset@s,fsr2l
  4551   002E80  C019  FFDA         	movff	memset@s+1,fsr2h
  4552   002E84  C010  FFDF         	movff	memset@c,indf2
  4553   002E88  5012               	movf	memset@n^0,w,c
  4554   002E8A  2418               	addwf	memset@s^0,w,c
  4555   002E8C  6E14               	movwf	??_memset^0,c
  4556   002E8E  5013               	movf	(memset@n+1)^0,w,c
  4557   002E90  2019               	addwfc	(memset@s+1)^0,w,c
  4558   002E92  6E15               	movwf	(??_memset+1)^0,c
  4559   002E94  0EFF               	movlw	255
  4560   002E96  2414               	addwf	??_memset^0,w,c
  4561   002E98  6ED9               	movwf	fsr2l,c
  4562   002E9A  0EFF               	movlw	255
  4563   002E9C  2015               	addwfc	(??_memset+1)^0,w,c
  4564   002E9E  6EDA               	movwf	fsr2h,c
  4565   002EA0  C010  FFDF         	movff	memset@c,indf2
  4566   002EA4  5013               	movf	(memset@n+1)^0,w,c
  4567   002EA6  E107               	bnz	u11061
  4568   002EA8  0E03               	movlw	3
  4569   002EAA  5C12               	subwf	memset@n^0,w,c
  4570   002EAC  B0D8               	btfsc	status,0,c
  4571   002EAE  EF5B  F017         	goto	u11061
  4572   002EB2  EF5D  F017         	goto	u11060
  4573   002EB6                     u11061:
  4574   002EB6  EF5F  F017         	goto	l10720
  4575   002EBA                     u11060:
  4576   002EBA  EFE9  F017         	goto	l2486
  4577   002EBE                     l10720:
  4578   002EBE  EE20 F001          	lfsr	2,1
  4579   002EC2  5018               	movf	memset@s^0,w,c
  4580   002EC4  26D9               	addwf	fsr2l,f,c
  4581   002EC6  5019               	movf	(memset@s+1)^0,w,c
  4582   002EC8  22DA               	addwfc	fsr2h,f,c
  4583   002ECA  C010  FFDF         	movff	memset@c,indf2
  4584   002ECE  EE20 F002          	lfsr	2,2
  4585   002ED2  5018               	movf	memset@s^0,w,c
  4586   002ED4  26D9               	addwf	fsr2l,f,c
  4587   002ED6  5019               	movf	(memset@s+1)^0,w,c
  4588   002ED8  22DA               	addwfc	fsr2h,f,c
  4589   002EDA  C010  FFDF         	movff	memset@c,indf2
  4590   002EDE  5012               	movf	memset@n^0,w,c
  4591   002EE0  2418               	addwf	memset@s^0,w,c
  4592   002EE2  6E14               	movwf	??_memset^0,c
  4593   002EE4  5013               	movf	(memset@n+1)^0,w,c
  4594   002EE6  2019               	addwfc	(memset@s+1)^0,w,c
  4595   002EE8  6E15               	movwf	(??_memset+1)^0,c
  4596   002EEA  0EFE               	movlw	254
  4597   002EEC  2414               	addwf	??_memset^0,w,c
  4598   002EEE  6ED9               	movwf	fsr2l,c
  4599   002EF0  0EFF               	movlw	255
  4600   002EF2  2015               	addwfc	(??_memset+1)^0,w,c
  4601   002EF4  6EDA               	movwf	fsr2h,c
  4602   002EF6  C010  FFDF         	movff	memset@c,indf2
  4603   002EFA  5012               	movf	memset@n^0,w,c
  4604   002EFC  2418               	addwf	memset@s^0,w,c
  4605   002EFE  6E14               	movwf	??_memset^0,c
  4606   002F00  5013               	movf	(memset@n+1)^0,w,c
  4607   002F02  2019               	addwfc	(memset@s+1)^0,w,c
  4608   002F04  6E15               	movwf	(??_memset+1)^0,c
  4609   002F06  0EFD               	movlw	253
  4610   002F08  2414               	addwf	??_memset^0,w,c
  4611   002F0A  6ED9               	movwf	fsr2l,c
  4612   002F0C  0EFF               	movlw	255
  4613   002F0E  2015               	addwfc	(??_memset+1)^0,w,c
  4614   002F10  6EDA               	movwf	fsr2h,c
  4615   002F12  C010  FFDF         	movff	memset@c,indf2
  4616   002F16  5013               	movf	(memset@n+1)^0,w,c
  4617   002F18  E107               	bnz	u11071
  4618   002F1A  0E07               	movlw	7
  4619   002F1C  5C12               	subwf	memset@n^0,w,c
  4620   002F1E  B0D8               	btfsc	status,0,c
  4621   002F20  EF94  F017         	goto	u11071
  4622   002F24  EF96  F017         	goto	u11070
  4623   002F28                     u11071:
  4624   002F28  EF98  F017         	goto	l10726
  4625   002F2C                     u11070:
  4626   002F2C  EFE9  F017         	goto	l2486
  4627   002F30                     l10726:
  4628   002F30  EE20 F003          	lfsr	2,3
  4629   002F34  5018               	movf	memset@s^0,w,c
  4630   002F36  26D9               	addwf	fsr2l,f,c
  4631   002F38  5019               	movf	(memset@s+1)^0,w,c
  4632   002F3A  22DA               	addwfc	fsr2h,f,c
  4633   002F3C  C010  FFDF         	movff	memset@c,indf2
  4634   002F40  5012               	movf	memset@n^0,w,c
  4635   002F42  2418               	addwf	memset@s^0,w,c
  4636   002F44  6E14               	movwf	??_memset^0,c
  4637   002F46  5013               	movf	(memset@n+1)^0,w,c
  4638   002F48  2019               	addwfc	(memset@s+1)^0,w,c
  4639   002F4A  6E15               	movwf	(??_memset+1)^0,c
  4640   002F4C  0EFC               	movlw	252
  4641   002F4E  2414               	addwf	??_memset^0,w,c
  4642   002F50  6ED9               	movwf	fsr2l,c
  4643   002F52  0EFF               	movlw	255
  4644   002F54  2015               	addwfc	(??_memset+1)^0,w,c
  4645   002F56  6EDA               	movwf	fsr2h,c
  4646   002F58  C010  FFDF         	movff	memset@c,indf2
  4647   002F5C  5013               	movf	(memset@n+1)^0,w,c
  4648   002F5E  E107               	bnz	u11081
  4649   002F60  0E09               	movlw	9
  4650   002F62  5C12               	subwf	memset@n^0,w,c
  4651   002F64  B0D8               	btfsc	status,0,c
  4652   002F66  EFB7  F017         	goto	u11081
  4653   002F6A  EFB9  F017         	goto	u11080
  4654   002F6E                     u11081:
  4655   002F6E  EFBB  F017         	goto	l10732
  4656   002F72                     u11080:
  4657   002F72  EFE9  F017         	goto	l2486
  4658   002F76                     l10732:
  4659   002F76  C018  F014         	movff	memset@s,??_memset
  4660   002F7A  C019  F015         	movff	memset@s+1,??_memset+1
  4661   002F7E  1E14               	comf	??_memset^0,f,c
  4662   002F80  1E15               	comf	(??_memset+1)^0,f,c
  4663   002F82  4A14               	infsnz	??_memset^0,f,c
  4664   002F84  2A15               	incf	(??_memset+1)^0,f,c
  4665   002F86  0E03               	movlw	3
  4666   002F88  1414               	andwf	??_memset^0,w,c
  4667   002F8A  6E16               	movwf	memset@k^0,c
  4668   002F8C  6A17               	clrf	(memset@k+1)^0,c
  4669   002F8E  5016               	movf	memset@k^0,w,c
  4670   002F90  2618               	addwf	memset@s^0,f,c
  4671   002F92  5017               	movf	(memset@k+1)^0,w,c
  4672   002F94  2219               	addwfc	(memset@s+1)^0,f,c
  4673   002F96  5016               	movf	memset@k^0,w,c
  4674   002F98  5E12               	subwf	memset@n^0,f,c
  4675   002F9A  5017               	movf	(memset@k+1)^0,w,c
  4676   002F9C  5A13               	subwfb	(memset@n+1)^0,f,c
  4677   002F9E  0EFC               	movlw	252
  4678   002FA0  1612               	andwf	memset@n^0,f,c
  4679   002FA2  0EFF               	movlw	255
  4680   002FA4  1613               	andwf	(memset@n+1)^0,f,c
  4681   002FA6  EFE0  F017         	goto	l10740
  4682   002FAA                     l10734:
  4683   002FAA  C018  FFD9         	movff	memset@s,fsr2l
  4684   002FAE  C019  FFDA         	movff	memset@s+1,fsr2h
  4685   002FB2  C010  FFDF         	movff	memset@c,indf2
  4686   002FB6  0612               	decf	memset@n^0,f,c
  4687   002FB8  A0D8               	btfss	status,0,c
  4688   002FBA  0613               	decf	(memset@n+1)^0,f,c
  4689   002FBC  4A18               	infsnz	memset@s^0,f,c
  4690   002FBE  2A19               	incf	(memset@s+1)^0,f,c
  4691   002FC0                     l10740:
  4692   002FC0  5012               	movf	memset@n^0,w,c
  4693   002FC2  1013               	iorwf	(memset@n+1)^0,w,c
  4694   002FC4  A4D8               	btfss	status,2,c
  4695   002FC6  EFE7  F017         	goto	u11091
  4696   002FCA  EFE9  F017         	goto	u11090
  4697   002FCE                     u11091:
  4698   002FCE  EFD5  F017         	goto	l10734
  4699   002FD2                     u11090:
  4700   002FD2                     l2486:
  4701   002FD2  0012               	return		;funcret
  4702   002FD4                     __end_of_memset:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _application_initialize *****************
  4706 ;; Defined at:
  4707 ;;		line 91 in file "application.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  ret             1    0        unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 9
  4728 ;; This function calls:
  4729 ;;		_ADC_Init
  4730 ;;		_CCP_Init
  4731 ;;		_Timer2_Init
  4732 ;;		_ecu_layer_init
  4733 ;; This function is called by:
  4734 ;;		_main
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text23
  4739   0049A8                     __ptext23:
  4740                           	callstack 0
  4741   0049A8                     _application_initialize:
  4742                           	callstack 21
  4743   0049A8                     
  4744                           ;application.c: 93:     ecu_layer_init();
  4745   0049A8  EC21  F025         	call	_ecu_layer_init	;wreg free
  4746   0049AC  0E3C               	movlw	low _adc_a0
  4747   0049AE  6E11               	movwf	ADC_Init@_adc^0,c
  4748   0049B0  0E01               	movlw	high _adc_a0
  4749   0049B2  6E12               	movwf	(ADC_Init@_adc+1)^0,c
  4750   0049B4  ECBE  F01E         	call	_ADC_Init	;wreg free
  4751   0049B8  0E2B               	movlw	low _ccp1_obj
  4752   0049BA  0100               	movlb	0	; () banked
  4753   0049BC  6FEC               	movwf	CCP_Init@_ccp_obj& (0+255),b
  4754   0049BE  0E01               	movlw	high _ccp1_obj
  4755   0049C0  6FED               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  4756   0049C2  EC24  F01C         	call	_CCP_Init	;wreg free
  4757   0049C6  0E6F               	movlw	low _timer2_obj
  4758   0049C8  6E0E               	movwf	Timer2_Init@_timer^0,c
  4759   0049CA  0E01               	movlw	high _timer2_obj
  4760   0049CC  6E0F               	movwf	(Timer2_Init@_timer+1)^0,c
  4761   0049CE  EC78  F020         	call	_Timer2_Init	;wreg free
  4762   0049D2                     
  4763                           ;application.c: 97:     (PIE1bits.TMR2IE = 0);
  4764   0049D2  929D               	bcf	157,1,c	;volatile
  4765   0049D4  0012               	return		;funcret
  4766   0049D6                     __end_of_application_initialize:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function _ecu_layer_init *****************
  4770 ;; Defined at:
  4771 ;;		line 219 in file "ECU_Layer/ecu_layer_init.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  ret             1    0        unsigned char 
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;Total ram usage:        0 bytes
  4790 ;; Hardware stack levels used: 1
  4791 ;; Hardware stack levels required when called: 8
  4792 ;; This function calls:
  4793 ;;		_dc_motor_initialize
  4794 ;;		_lcd_4bit_intialize
  4795 ;; This function is called by:
  4796 ;;		_application_initialize
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text24
  4801   004A42                     __ptext24:
  4802                           	callstack 0
  4803   004A42                     _ecu_layer_init:
  4804                           	callstack 21
  4805   004A42  0EFC               	movlw	low _dc_motor_1
  4806   004A44  6E1C               	movwf	dc_motor_initialize@_dc_motor^0,c
  4807   004A46  0E00               	movlw	high _dc_motor_1
  4808   004A48  6E1D               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  4809   004A4A  EC14  F024         	call	_dc_motor_initialize	;wreg free
  4810   004A4E  0E43               	movlw	low _lcd_1
  4811   004A50  6E20               	movwf	lcd_4bit_intialize@lcd^0,c
  4812   004A52  0E01               	movlw	high _lcd_1
  4813   004A54  6E21               	movwf	(lcd_4bit_intialize@lcd+1)^0,c
  4814   004A56  EC0C  F01B         	call	_lcd_4bit_intialize	;wreg free
  4815   004A5A  0012               	return		;funcret
  4816   004A5C                     __end_of_ecu_layer_init:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _lcd_4bit_intialize *****************
  4820 ;; Defined at:
  4821 ;;		line 23 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  lcd             2   31[COMRAM] PTR const struct .
  4824 ;;		 -> lcd_1(6), 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  ret             1   36[COMRAM] unsigned char 
  4827 ;;  l_data_pins_    1   35[COMRAM] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      unsigned char 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;Total ram usage:        6 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 7
  4844 ;; This function calls:
  4845 ;;		_gpio_pin_intialize
  4846 ;;		_lcd_4bit_send_command
  4847 ;; This function is called by:
  4848 ;;		_ecu_layer_init
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text25
  4853   003618                     __ptext25:
  4854                           	callstack 0
  4855   003618                     _lcd_4bit_intialize:
  4856                           	callstack 21
  4857   003618                     
  4858                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 25:     uint8 l_data_pins_counter = 0;
  4859   003618  0E00               	movlw	0
  4860   00361A  6E24               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  4861   00361C                     
  4862                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:     if(((void*)0) == lcd){
  4863   00361C  5020               	movf	lcd_4bit_intialize@lcd^0,w,c
  4864   00361E  1021               	iorwf	(lcd_4bit_intialize@lcd+1)^0,w,c
  4865   003620  A4D8               	btfss	status,2,c
  4866   003622  EF15  F01B         	goto	u10851
  4867   003626  EF17  F01B         	goto	u10850
  4868   00362A                     u10851:
  4869   00362A  EF1B  F01B         	goto	l10400
  4870   00362E                     u10850:
  4871   00362E                     
  4872                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         ret = (Std_ReturnType)0x00;
  4873   00362E  0E00               	movlw	0
  4874   003630  6E25               	movwf	lcd_4bit_intialize@ret^0,c
  4875                           
  4876                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 28:     }
  4877   003632  EF9E  F01B         	goto	l10436
  4878   003636                     l10400:
  4879                           
  4880                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 30:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  4881   003636  C020  F018         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  4882   00363A  C021  F019         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  4883   00363E  ECEF  F021         	call	_gpio_pin_intialize	;wreg free
  4884   003642  6E25               	movwf	lcd_4bit_intialize@ret^0,c
  4885                           
  4886                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 31:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  4887   003644  0E01               	movlw	1
  4888   003646  2420               	addwf	lcd_4bit_intialize@lcd^0,w,c
  4889   003648  6E18               	movwf	gpio_pin_intialize@_pin_config^0,c
  4890   00364A  0E00               	movlw	0
  4891   00364C  2021               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  4892   00364E  6E19               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4893   003650  ECEF  F021         	call	_gpio_pin_intialize	;wreg free
  4894   003654  6E25               	movwf	lcd_4bit_intialize@ret^0,c
  4895   003656                     
  4896                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         for(l_data_pins_counter=0; l_data_pins_cou
      +                          nter<4; l_data_pins_counter++){
  4897   003656  0E00               	movlw	0
  4898   003658  6E24               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  4899   00365A                     l10408:
  4900   00365A  5024               	movf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  4901   00365C  2420               	addwf	lcd_4bit_intialize@lcd^0,w,c
  4902   00365E  6E22               	movwf	??_lcd_4bit_intialize^0,c
  4903   003660  0E00               	movlw	0
  4904   003662  2021               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  4905   003664  6E23               	movwf	(??_lcd_4bit_intialize+1)^0,c
  4906   003666  0E02               	movlw	2
  4907   003668  2422               	addwf	??_lcd_4bit_intialize^0,w,c
  4908   00366A  6E18               	movwf	gpio_pin_intialize@_pin_config^0,c
  4909   00366C  0E00               	movlw	0
  4910   00366E  2023               	addwfc	(??_lcd_4bit_intialize+1)^0,w,c
  4911   003670  6E19               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4912   003672  ECEF  F021         	call	_gpio_pin_intialize	;wreg free
  4913   003676                     
  4914                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 34:         }
  4915   003676  2A24               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  4916   003678  0E03               	movlw	3
  4917   00367A  6424               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  4918   00367C  EF42  F01B         	goto	u10861
  4919   003680  EF44  F01B         	goto	u10860
  4920   003684                     u10861:
  4921   003684  EF2D  F01B         	goto	l10408
  4922   003688                     u10860:
  4923   003688                     
  4924                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
  4925   003688  0E34               	movlw	52
  4926   00368A  6E22               	movwf	??_lcd_4bit_intialize^0,c
  4927   00368C  0EF2               	movlw	242
  4928   00368E                     u12247:
  4929   00368E  2EE8               	decfsz	wreg,f,c
  4930   003690  D7FE               	bra	u12247
  4931   003692  2E22               	decfsz	??_lcd_4bit_intialize^0,f,c
  4932   003694  D7FC               	bra	u12247
  4933   003696  C020  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4934   00369A  C021  F01D         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4935   00369E  0E38               	movlw	56
  4936   0036A0  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4937   0036A2  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  4938   0036A6                     
  4939                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
  4940   0036A6  0E0D               	movlw	13
  4941   0036A8  6E22               	movwf	??_lcd_4bit_intialize^0,c
  4942   0036AA  0EFC               	movlw	252
  4943   0036AC                     u12257:
  4944   0036AC  2EE8               	decfsz	wreg,f,c
  4945   0036AE  D7FE               	bra	u12257
  4946   0036B0  2E22               	decfsz	??_lcd_4bit_intialize^0,f,c
  4947   0036B2  D7FC               	bra	u12257
  4948   0036B4  C020  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4949   0036B8  C021  F01D         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4950   0036BC  0E38               	movlw	56
  4951   0036BE  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4952   0036C0  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  4953   0036C4                     
  4954                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00000.0)));
  4955   0036C4  0E64               	movlw	100
  4956   0036C6                     u12267:
  4957   0036C6  2EE8               	decfsz	wreg,f,c
  4958   0036C8  D7FE               	bra	u12267
  4959   0036CA  C020  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4960   0036CE  C021  F01D         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4961   0036D2  0E38               	movlw	56
  4962   0036D4  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4963   0036D6  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  4964   0036DA  C020  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4965   0036DE  C021  F01D         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4966   0036E2  0E01               	movlw	1
  4967   0036E4  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4968   0036E6  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  4969   0036EA  C020  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4970   0036EE  C021  F01D         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4971   0036F2  0E02               	movlw	2
  4972   0036F4  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4973   0036F6  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  4974   0036FA  C020  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4975   0036FE  C021  F01D         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4976   003702  0E06               	movlw	6
  4977   003704  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4978   003706  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  4979   00370A  C020  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4980   00370E  C021  F01D         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4981   003712  0E0C               	movlw	12
  4982   003714  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4983   003716  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  4984   00371A  C020  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4985   00371E  C021  F01D         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4986   003722  0E28               	movlw	40
  4987   003724  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4988   003726  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  4989   00372A                     
  4990                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 47:         ret = lcd_4bit_send_command(lcd, 0x80);
  4991   00372A  C020  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4992   00372E  C021  F01D         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4993   003732  0E80               	movlw	128
  4994   003734  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4995   003736  EC7E  F021         	call	_lcd_4bit_send_command	;wreg free
  4996   00373A  6E25               	movwf	lcd_4bit_intialize@ret^0,c
  4997   00373C                     l10436:
  4998                           
  4999                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:     return ret;
  5000   00373C  5025               	movf	lcd_4bit_intialize@ret^0,w,c
  5001   00373E  0012               	return		;funcret
  5002   003740                     __end_of_lcd_4bit_intialize:
  5003                           	callstack 0
  5004                           
  5005 ;; *************** function _lcd_4bit_send_command *****************
  5006 ;; Defined at:
  5007 ;;		line 60 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  lcd             2   27[COMRAM] PTR const struct .
  5010 ;;		 -> lcd_1(6), 
  5011 ;;  command         1   29[COMRAM] unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  ret             1   30[COMRAM] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      unsigned char 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5023 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;Total ram usage:        4 bytes
  5028 ;; Hardware stack levels used: 1
  5029 ;; Hardware stack levels required when called: 6
  5030 ;; This function calls:
  5031 ;;		_gpio_pin_write_logic
  5032 ;;		_lcd_4bit_send_enable_signal
  5033 ;;		_lcd_send_4bits
  5034 ;; This function is called by:
  5035 ;;		_lcd_4bit_intialize
  5036 ;;		_lcd_4bit_set_cursor
  5037 ;;		_lcd_4bit_send_custom_char
  5038 ;;		_lcd_4bit_clear
  5039 ;;		_lcd_8bit_clear
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text26
  5044   0042FC                     __ptext26:
  5045                           	callstack 0
  5046   0042FC                     _lcd_4bit_send_command:
  5047                           	callstack 22
  5048   0042FC                     
  5049                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 62:     if(((void*)0) == lcd){
  5050   0042FC  501C               	movf	lcd_4bit_send_command@lcd^0,w,c
  5051   0042FE  101D               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  5052   004300  A4D8               	btfss	status,2,c
  5053   004302  EF85  F021         	goto	u9801
  5054   004306  EF87  F021         	goto	u9800
  5055   00430A                     u9801:
  5056   00430A  EF8B  F021         	goto	l9786
  5057   00430E                     u9800:
  5058   00430E                     
  5059                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 63:         ret = (Std_ReturnType)0x00;
  5060   00430E  0E00               	movlw	0
  5061   004310  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  5062                           
  5063                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 64:     }
  5064   004312  EFB5  F021         	goto	l9788
  5065   004316                     l9786:
  5066                           
  5067                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 68:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  5068   004316  C01C  F00E         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  5069   00431A  C01D  F00F         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  5070   00431E  0E00               	movlw	0
  5071   004320  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  5072   004322  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  5073   004326  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  5074                           
  5075                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = lcd_send_4bits(lcd, command >> 4);
  5076   004328  C01C  F018         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  5077   00432C  C01D  F019         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  5078   004330  381E               	swapf	lcd_4bit_send_command@command^0,w,c
  5079   004332  0B0F               	andlw	15
  5080   004334  6E1A               	movwf	lcd_send_4bits@_data_command^0,c
  5081   004336  EC25  F022         	call	_lcd_send_4bits	;wreg free
  5082   00433A  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  5083                           
  5084                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret = lcd_4bit_send_enable_signal(lcd);
  5085   00433C  C01C  F018         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  5086   004340  C01D  F019         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  5087   004344  EC89  F024         	call	_lcd_4bit_send_enable_signal	;wreg free
  5088   004348  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  5089                           
  5090                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 74:         ret = lcd_send_4bits(lcd, command);
  5091   00434A  C01C  F018         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  5092   00434E  C01D  F019         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  5093   004352  C01E  F01A         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  5094   004356  EC25  F022         	call	_lcd_send_4bits	;wreg free
  5095   00435A  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  5096                           
  5097                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 76:         ret = lcd_4bit_send_enable_signal(lcd);
  5098   00435C  C01C  F018         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  5099   004360  C01D  F019         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  5100   004364  EC89  F024         	call	_lcd_4bit_send_enable_signal	;wreg free
  5101   004368  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  5102   00436A                     l9788:
  5103                           
  5104                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 78:     return ret;
  5105   00436A  501F               	movf	lcd_4bit_send_command@ret^0,w,c
  5106   00436C  0012               	return		;funcret
  5107   00436E                     __end_of_lcd_4bit_send_command:
  5108                           	callstack 0
  5109                           
  5110 ;; *************** function _lcd_send_4bits *****************
  5111 ;; Defined at:
  5112 ;;		line 479 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  lcd             2   23[COMRAM] PTR const struct .
  5115 ;;		 -> lcd_1(6), 
  5116 ;;  _data_comman    1   25[COMRAM] unsigned char 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  ret             1   26[COMRAM] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      unsigned char 
  5121 ;; Registers used:
  5122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5128 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5132 ;;Total ram usage:        4 bytes
  5133 ;; Hardware stack levels used: 1
  5134 ;; Hardware stack levels required when called: 5
  5135 ;; This function calls:
  5136 ;;		_gpio_pin_write_logic
  5137 ;; This function is called by:
  5138 ;;		_lcd_4bit_send_command
  5139 ;;		_lcd_4bit_send_char_data
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text27
  5144   00444A                     __ptext27:
  5145                           	callstack 0
  5146   00444A                     _lcd_send_4bits:
  5147                           	callstack 22
  5148   00444A  0E02               	movlw	2
  5149   00444C  2418               	addwf	lcd_send_4bits@lcd^0,w,c
  5150   00444E  6E0E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5151   004450  0E00               	movlw	0
  5152   004452  2019               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  5153   004454  6E0F               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  5154   004456  501A               	movf	lcd_send_4bits@_data_command^0,w,c
  5155   004458  0B01               	andlw	1
  5156   00445A  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  5157   00445C  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  5158   004460  0E03               	movlw	3
  5159   004462  2418               	addwf	lcd_send_4bits@lcd^0,w,c
  5160   004464  6E0E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5161   004466  0E00               	movlw	0
  5162   004468  2019               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  5163   00446A  6E0F               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  5164   00446C  90D8               	bcf	status,0,c
  5165   00446E  301A               	rrcf	lcd_send_4bits@_data_command^0,w,c
  5166   004470  0B01               	andlw	1
  5167   004472  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  5168   004474  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  5169   004478  0E04               	movlw	4
  5170   00447A  2418               	addwf	lcd_send_4bits@lcd^0,w,c
  5171   00447C  6E0E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5172   00447E  0E00               	movlw	0
  5173   004480  2019               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  5174   004482  6E0F               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  5175   004484  401A               	rrncf	lcd_send_4bits@_data_command^0,w,c
  5176   004486  42E8               	rrncf	wreg,f,c
  5177   004488  0B3F               	andlw	63
  5178   00448A  0B01               	andlw	1
  5179   00448C  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  5180   00448E  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  5181   004492                     
  5182                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 484:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  5183   004492  0E05               	movlw	5
  5184   004494  2418               	addwf	lcd_send_4bits@lcd^0,w,c
  5185   004496  6E0E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5186   004498  0E00               	movlw	0
  5187   00449A  2019               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  5188   00449C  6E0F               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  5189   00449E  381A               	swapf	lcd_send_4bits@_data_command^0,w,c
  5190   0044A0  46E8               	rlncf	wreg,f,c
  5191   0044A2  0B1F               	andlw	31
  5192   0044A4  0B01               	andlw	1
  5193   0044A6  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  5194   0044A8  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  5195   0044AC  6E1B               	movwf	lcd_send_4bits@ret^0,c
  5196                           
  5197                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 485:     return ret;
  5198   0044AE  501B               	movf	lcd_send_4bits@ret^0,w,c
  5199   0044B0  0012               	return		;funcret
  5200   0044B2                     __end_of_lcd_send_4bits:
  5201                           	callstack 0
  5202                           
  5203 ;; *************** function _lcd_4bit_send_enable_signal *****************
  5204 ;; Defined at:
  5205 ;;		line 495 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;  lcd             2   23[COMRAM] PTR const struct .
  5208 ;;		 -> lcd_1(6), 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  ret             1   25[COMRAM] unsigned char 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      unsigned char 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;Total ram usage:        3 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; Hardware stack levels required when called: 5
  5227 ;; This function calls:
  5228 ;;		_gpio_pin_write_logic
  5229 ;; This function is called by:
  5230 ;;		_lcd_4bit_send_command
  5231 ;;		_lcd_4bit_send_char_data
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text28
  5236   004912                     __ptext28:
  5237                           	callstack 0
  5238   004912                     _lcd_4bit_send_enable_signal:
  5239                           	callstack 22
  5240   004912  0E01               	movlw	1
  5241   004914  2418               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  5242   004916  6E0E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5243   004918  0E00               	movlw	0
  5244   00491A  2019               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  5245   00491C  6E0F               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  5246   00491E  0E01               	movlw	1
  5247   004920  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  5248   004922  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  5249   004926                     
  5250                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 498:     _delay((unsigned long)((5)*(8000000UL/4000000
      +                          .0)));
  5251   004926  0E03               	movlw	3
  5252   004928                     u12277:
  5253   004928  2EE8               	decfsz	wreg,f,c
  5254   00492A  D7FE               	bra	u12277
  5255   00492C  F000               	nop	
  5256   00492E                     
  5257                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 499:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  5258   00492E  0E01               	movlw	1
  5259   004930  2418               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  5260   004932  6E0E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5261   004934  0E00               	movlw	0
  5262   004936  2019               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  5263   004938  6E0F               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  5264   00493A  0E00               	movlw	0
  5265   00493C  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  5266   00493E  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  5267   004942  6E1A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  5268   004944                     
  5269                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 500:     return ret;
  5270   004944  501A               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  5271   004946  0012               	return		;funcret
  5272   004948                     __end_of_lcd_4bit_send_enable_signal:
  5273                           	callstack 0
  5274                           
  5275 ;; *************** function _dc_motor_initialize *****************
  5276 ;; Defined at:
  5277 ;;		line 17 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  _dc_motor       2   27[COMRAM] PTR const struct .
  5280 ;;		 -> dc_motor_1(2), 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  ret             1   29[COMRAM] unsigned char 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      unsigned char 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;Total ram usage:        3 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 6
  5299 ;; This function calls:
  5300 ;;		_gpio_pin_intialize
  5301 ;; This function is called by:
  5302 ;;		_ecu_layer_init
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text29
  5307   004828                     __ptext29:
  5308                           	callstack 0
  5309   004828                     _dc_motor_initialize:
  5310                           	callstack 22
  5311   004828                     
  5312                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 18:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5313   004828  0E01               	movlw	1
  5314   00482A  6E1E               	movwf	dc_motor_initialize@ret^0,c
  5315   00482C                     
  5316                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 19:     if(((void*)0) == _dc_motor){
  5317   00482C  501C               	movf	dc_motor_initialize@_dc_motor^0,w,c
  5318   00482E  101D               	iorwf	(dc_motor_initialize@_dc_motor+1)^0,w,c
  5319   004830  A4D8               	btfss	status,2,c
  5320   004832  EF1D  F024         	goto	u10871
  5321   004836  EF1F  F024         	goto	u10870
  5322   00483A                     u10871:
  5323   00483A  EF23  F024         	goto	l10446
  5324   00483E                     u10870:
  5325   00483E                     
  5326                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:         ret = (Std_ReturnType)0x00;
  5327   00483E  0E00               	movlw	0
  5328   004840  6E1E               	movwf	dc_motor_initialize@ret^0,c
  5329                           
  5330                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 21:     }
  5331   004842  EF31  F024         	goto	l10448
  5332   004846                     l10446:
  5333                           
  5334                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 23:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0x00U]));
  5335   004846  C01C  F018         	movff	dc_motor_initialize@_dc_motor,gpio_pin_intialize@_pin_config
  5336   00484A  C01D  F019         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_intialize@_pin_config+1
  5337   00484E  ECEF  F021         	call	_gpio_pin_intialize	;wreg free
  5338                           
  5339                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 24:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0x01U]));
  5340   004852  0E01               	movlw	1
  5341   004854  241C               	addwf	dc_motor_initialize@_dc_motor^0,w,c
  5342   004856  6E18               	movwf	gpio_pin_intialize@_pin_config^0,c
  5343   004858  0E00               	movlw	0
  5344   00485A  201D               	addwfc	(dc_motor_initialize@_dc_motor+1)^0,w,c
  5345   00485C  6E19               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  5346   00485E  ECEF  F021         	call	_gpio_pin_intialize	;wreg free
  5347   004862                     l10448:
  5348                           
  5349                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:     return ret;
  5350   004862  501E               	movf	dc_motor_initialize@ret^0,w,c
  5351   004864  0012               	return		;funcret
  5352   004866                     __end_of_dc_motor_initialize:
  5353                           	callstack 0
  5354                           
  5355 ;; *************** function _Timer2_Init *****************
  5356 ;; Defined at:
  5357 ;;		line 15 in file "MCAL_Layer/Timer2/hal_timr2.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  _timer          2   13[COMRAM] PTR const struct .
  5360 ;;		 -> timer2_obj(6), 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  ret             1   16[COMRAM] unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  1    wreg      unsigned char 
  5365 ;; Registers used:
  5366 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5375 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;Total ram usage:        4 bytes
  5377 ;; Hardware stack levels used: 1
  5378 ;; Hardware stack levels required when called: 4
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_application_initialize
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text30
  5387   0040F0                     __ptext30:
  5388                           	callstack 0
  5389   0040F0                     _Timer2_Init:
  5390                           	callstack 25
  5391   0040F0                     
  5392                           ;MCAL_Layer/Timer2/hal_timr2.c: 17:     if(((void*)0) == _timer){
  5393   0040F0  500E               	movf	Timer2_Init@_timer^0,w,c
  5394   0040F2  100F               	iorwf	(Timer2_Init@_timer+1)^0,w,c
  5395   0040F4  A4D8               	btfss	status,2,c
  5396   0040F6  EF7F  F020         	goto	u11191
  5397   0040FA  EF81  F020         	goto	u11190
  5398   0040FE                     u11191:
  5399   0040FE  EF85  F020         	goto	l1523
  5400   004102                     u11190:
  5401   004102                     
  5402                           ;MCAL_Layer/Timer2/hal_timr2.c: 18:         ret = (Std_ReturnType)0x00;
  5403   004102  0E00               	movlw	0
  5404   004104  6E11               	movwf	Timer2_Init@ret^0,c
  5405                           
  5406                           ;MCAL_Layer/Timer2/hal_timr2.c: 19:     }
  5407   004106  EFC3  F020         	goto	l10876
  5408   00410A                     l1523:
  5409                           
  5410                           ;MCAL_Layer/Timer2/hal_timr2.c: 21:         (T2CONbits.TMR2ON = 0);
  5411   00410A  94CA               	bcf	202,2,c	;volatile
  5412   00410C                     
  5413                           ;MCAL_Layer/Timer2/hal_timr2.c: 22:         (T2CONbits.T2CKPS = _timer->timer2_prescaler
      +                          _value);
  5414   00410C  EE20 F005          	lfsr	2,5
  5415   004110  500E               	movf	Timer2_Init@_timer^0,w,c
  5416   004112  26D9               	addwf	fsr2l,f,c
  5417   004114  500F               	movf	(Timer2_Init@_timer+1)^0,w,c
  5418   004116  22DA               	addwfc	fsr2h,f,c
  5419   004118  50DF               	movf	indf2,w,c
  5420   00411A  6E10               	movwf	??_Timer2_Init^0,c
  5421   00411C  50CA               	movf	202,w,c	;volatile
  5422   00411E  1810               	xorwf	??_Timer2_Init^0,w,c
  5423   004120  0BFC               	andlw	-4
  5424   004122  1810               	xorwf	??_Timer2_Init^0,w,c
  5425   004124  6ECA               	movwf	202,c	;volatile
  5426                           
  5427                           ;MCAL_Layer/Timer2/hal_timr2.c: 23:         (T2CONbits.TOUTPS = _timer->timer2_postscale
      +                          r_value);
  5428   004126  EE20 F004          	lfsr	2,4
  5429   00412A  500E               	movf	Timer2_Init@_timer^0,w,c
  5430   00412C  26D9               	addwf	fsr2l,f,c
  5431   00412E  500F               	movf	(Timer2_Init@_timer+1)^0,w,c
  5432   004130  22DA               	addwfc	fsr2h,f,c
  5433   004132  50DF               	movf	indf2,w,c
  5434   004134  6E10               	movwf	??_Timer2_Init^0,c
  5435   004136  4610               	rlncf	??_Timer2_Init^0,f,c
  5436   004138  4610               	rlncf	??_Timer2_Init^0,f,c
  5437   00413A  4610               	rlncf	??_Timer2_Init^0,f,c
  5438   00413C  50CA               	movf	202,w,c	;volatile
  5439   00413E  1810               	xorwf	??_Timer2_Init^0,w,c
  5440   004140  0B87               	andlw	-121
  5441   004142  1810               	xorwf	??_Timer2_Init^0,w,c
  5442   004144  6ECA               	movwf	202,c	;volatile
  5443                           
  5444                           ;MCAL_Layer/Timer2/hal_timr2.c: 24:         TMR2 = _timer->timer2_preload_value;
  5445   004146  EE20 F003          	lfsr	2,3
  5446   00414A  500E               	movf	Timer2_Init@_timer^0,w,c
  5447   00414C  26D9               	addwf	fsr2l,f,c
  5448   00414E  500F               	movf	(Timer2_Init@_timer+1)^0,w,c
  5449   004150  22DA               	addwfc	fsr2h,f,c
  5450   004152  50DF               	movf	indf2,w,c
  5451   004154  6ECC               	movwf	204,c	;volatile
  5452                           
  5453                           ;MCAL_Layer/Timer2/hal_timr2.c: 25:         timer2_preload = _timer->timer2_preload_valu
      +                          e;
  5454   004156  EE20 F003          	lfsr	2,3
  5455   00415A  500E               	movf	Timer2_Init@_timer^0,w,c
  5456   00415C  26D9               	addwf	fsr2l,f,c
  5457   00415E  500F               	movf	(Timer2_Init@_timer+1)^0,w,c
  5458   004160  22DA               	addwfc	fsr2h,f,c
  5459   004162  50DF               	movf	indf2,w,c
  5460   004164  0100               	movlb	0	; () banked
  5461   004166  6FC1               	movwf	_timer2_preload& (0+255),b
  5462   004168                     
  5463                           ; BSR set to: 0
  5464                           ;MCAL_Layer/Timer2/hal_timr2.c: 28:         (PIE1bits.TMR2IE = 1);
  5465   004168  829D               	bsf	157,1,c	;volatile
  5466   00416A                     
  5467                           ; BSR set to: 0
  5468                           ;MCAL_Layer/Timer2/hal_timr2.c: 29:         (PIR1bits.TMR2IF = 0);
  5469   00416A  929E               	bcf	158,1,c	;volatile
  5470   00416C                     
  5471                           ; BSR set to: 0
  5472                           ;MCAL_Layer/Timer2/hal_timr2.c: 30:         TMR2_InterruptHandler = _timer->TMR2_Interru
      +                          ptHandler;
  5473   00416C  C00E  FFD9         	movff	Timer2_Init@_timer,fsr2l
  5474   004170  C00F  FFDA         	movff	Timer2_Init@_timer+1,fsr2h
  5475   004174  CFDE F094          	movff	postinc2,_TMR2_InterruptHandler
  5476   004178  CFDD F095          	movff	postdec2,_TMR2_InterruptHandler+1
  5477   00417C                     
  5478                           ; BSR set to: 0
  5479                           ;MCAL_Layer/Timer2/hal_timr2.c: 46:         (INTCONbits.GIE = 1);
  5480   00417C  8EF2               	bsf	242,7,c	;volatile
  5481   00417E                     
  5482                           ; BSR set to: 0
  5483                           ;MCAL_Layer/Timer2/hal_timr2.c: 47:         (INTCONbits.PEIE = 1);
  5484   00417E  8CF2               	bsf	242,6,c	;volatile
  5485   004180                     
  5486                           ; BSR set to: 0
  5487                           ;MCAL_Layer/Timer2/hal_timr2.c: 50:         (T2CONbits.TMR2ON = 1);
  5488   004180  84CA               	bsf	202,2,c	;volatile
  5489   004182                     
  5490                           ; BSR set to: 0
  5491                           ;MCAL_Layer/Timer2/hal_timr2.c: 51:         ret = (Std_ReturnType)0x01;
  5492   004182  0E01               	movlw	1
  5493   004184  6E11               	movwf	Timer2_Init@ret^0,c
  5494   004186                     l10876:
  5495                           
  5496                           ;MCAL_Layer/Timer2/hal_timr2.c: 53:     return ret;
  5497   004186  5011               	movf	Timer2_Init@ret^0,w,c
  5498   004188  0012               	return		;funcret
  5499   00418A                     __end_of_Timer2_Init:
  5500                           	callstack 0
  5501                           
  5502 ;; *************** function _CCP_Init *****************
  5503 ;; Defined at:
  5504 ;;		line 25 in file "MCAL_Layer/CCP/hal_ccp.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  _ccp_obj        2   40[BANK0 ] PTR const struct .
  5507 ;;		 -> ccp1_obj(17), 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  ret             1   43[BANK0 ] unsigned char 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  1    wreg      unsigned char 
  5512 ;; Registers used:
  5513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5519 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;Total ram usage:        4 bytes
  5524 ;; Hardware stack levels used: 1
  5525 ;; Hardware stack levels required when called: 6
  5526 ;; This function calls:
  5527 ;;		_CCP_Capture_Mode_Config
  5528 ;;		_CCP_Compare_Mode_Config
  5529 ;;		_CCP_Interrupt_Config
  5530 ;;		_CCP_PWM_Mode_Config
  5531 ;;		_gpio_pin_intialize
  5532 ;; This function is called by:
  5533 ;;		_application_initialize
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text31
  5538   003848                     __ptext31:
  5539                           	callstack 0
  5540   003848                     _CCP_Init:
  5541                           	callstack 23
  5542   003848                     
  5543                           ;MCAL_Layer/CCP/hal_ccp.c: 27:     if(((void*)0) == _ccp_obj){
  5544   003848  0100               	movlb	0	; () banked
  5545   00384A  51EC               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  5546   00384C  11ED               	iorwf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  5547   00384E  A4D8               	btfss	status,2,c
  5548   003850  EF2C  F01C         	goto	u11131
  5549   003854  EF2E  F01C         	goto	u11130
  5550   003858                     u11131:
  5551   003858  EF32  F01C         	goto	l10824
  5552   00385C                     u11130:
  5553   00385C                     
  5554                           ; BSR set to: 0
  5555                           ;MCAL_Layer/CCP/hal_ccp.c: 28:         ret = (Std_ReturnType)0x00;
  5556   00385C  0E00               	movlw	0
  5557   00385E  6FEF               	movwf	CCP_Init@ret& (0+255),b
  5558                           
  5559                           ;MCAL_Layer/CCP/hal_ccp.c: 29:     }
  5560   003860  EFA5  F01C         	goto	l10850
  5561   003864                     l10824:
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;MCAL_Layer/CCP/hal_ccp.c: 32:         if(CCP1_INST == _ccp_obj->ccp_inst){
  5565   003864  C0EC  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  5566   003868  C0ED  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  5567   00386C  50DF               	movf	indf2,w,c
  5568   00386E  A4D8               	btfss	status,2,c
  5569   003870  EF3C  F01C         	goto	u11141
  5570   003874  EF3E  F01C         	goto	u11140
  5571   003878                     u11141:
  5572   003878  EF42  F01C         	goto	l10828
  5573   00387C                     u11140:
  5574   00387C                     
  5575                           ; BSR set to: 0
  5576                           ;MCAL_Layer/CCP/hal_ccp.c: 33:             (CCP1CONbits.CCP1M = ((uint8)0x00));
  5577   00387C  0EF0               	movlw	-16
  5578   00387E  16BD               	andwf	189,f,c	;volatile
  5579                           
  5580                           ;MCAL_Layer/CCP/hal_ccp.c: 34:         }
  5581   003880  EF50  F01C         	goto	l10832
  5582   003884                     l10828:
  5583                           
  5584                           ; BSR set to: 0
  5585   003884  C0EC  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  5586   003888  C0ED  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  5587   00388C  04DE               	decf	postinc2,w,c
  5588   00388E  A4D8               	btfss	status,2,c
  5589   003890  EF4C  F01C         	goto	u11151
  5590   003894  EF4E  F01C         	goto	u11150
  5591   003898                     u11151:
  5592   003898  EF50  F01C         	goto	l10832
  5593   00389C                     u11150:
  5594   00389C                     
  5595                           ; BSR set to: 0
  5596                           ;MCAL_Layer/CCP/hal_ccp.c: 36:             (CCP2CONbits.CCP2M = ((uint8)0x00));
  5597   00389C  0EF0               	movlw	-16
  5598   00389E  16BA               	andwf	186,f,c	;volatile
  5599   0038A0                     l10832:
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;MCAL_Layer/CCP/hal_ccp.c: 41:         if(CCP_CAPTURE_MODE_SELECTED == _ccp_obj->ccp_mod
      +                          e){
  5603   0038A0  EE20 F001          	lfsr	2,1
  5604   0038A4  51EC               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  5605   0038A6  26D9               	addwf	fsr2l,f,c
  5606   0038A8  51ED               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  5607   0038AA  22DA               	addwfc	fsr2h,f,c
  5608   0038AC  50DF               	movf	indf2,w,c
  5609   0038AE  A4D8               	btfss	status,2,c
  5610   0038B0  EF5C  F01C         	goto	u11161
  5611   0038B4  EF5E  F01C         	goto	u11160
  5612   0038B8                     u11161:
  5613   0038B8  EF66  F01C         	goto	l10836
  5614   0038BC                     u11160:
  5615   0038BC                     
  5616                           ; BSR set to: 0
  5617   0038BC  C0EC  F011         	movff	CCP_Init@_ccp_obj,CCP_Capture_Mode_Config@_ccp_obj
  5618   0038C0  C0ED  F012         	movff	CCP_Init@_ccp_obj+1,CCP_Capture_Mode_Config@_ccp_obj+1
  5619   0038C4  EC40  F019         	call	_CCP_Capture_Mode_Config	;wreg free
  5620                           
  5621                           ;MCAL_Layer/CCP/hal_ccp.c: 43:         }
  5622   0038C8  EF93  F01C         	goto	l10844
  5623   0038CC                     l10836:
  5624                           
  5625                           ; BSR set to: 0
  5626   0038CC  EE20 F001          	lfsr	2,1
  5627   0038D0  51EC               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  5628   0038D2  26D9               	addwf	fsr2l,f,c
  5629   0038D4  51ED               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  5630   0038D6  22DA               	addwfc	fsr2h,f,c
  5631   0038D8  04DE               	decf	postinc2,w,c
  5632   0038DA  A4D8               	btfss	status,2,c
  5633   0038DC  EF72  F01C         	goto	u11171
  5634   0038E0  EF74  F01C         	goto	u11170
  5635   0038E4                     u11171:
  5636   0038E4  EF7C  F01C         	goto	l10840
  5637   0038E8                     u11170:
  5638   0038E8                     
  5639                           ; BSR set to: 0
  5640   0038E8  C0EC  F011         	movff	CCP_Init@_ccp_obj,CCP_Compare_Mode_Config@_ccp_obj
  5641   0038EC  C0ED  F012         	movff	CCP_Init@_ccp_obj+1,CCP_Compare_Mode_Config@_ccp_obj+1
  5642   0038F0  ECEA  F017         	call	_CCP_Compare_Mode_Config	;wreg free
  5643                           
  5644                           ;MCAL_Layer/CCP/hal_ccp.c: 47:         }
  5645   0038F4  EF93  F01C         	goto	l10844
  5646   0038F8                     l10840:
  5647                           
  5648                           ; BSR set to: 0
  5649   0038F8  EE20 F001          	lfsr	2,1
  5650   0038FC  51EC               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  5651   0038FE  26D9               	addwf	fsr2l,f,c
  5652   003900  51ED               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  5653   003902  22DA               	addwfc	fsr2h,f,c
  5654   003904  0E02               	movlw	2
  5655   003906  18DE               	xorwf	postinc2,w,c
  5656   003908  A4D8               	btfss	status,2,c
  5657   00390A  EF89  F01C         	goto	u11181
  5658   00390E  EF8B  F01C         	goto	u11180
  5659   003912                     u11181:
  5660   003912  EF93  F01C         	goto	l529
  5661   003916                     u11180:
  5662   003916                     
  5663                           ; BSR set to: 0
  5664                           ;MCAL_Layer/CCP/hal_ccp.c: 51:             CCP_PWM_Mode_Config(_ccp_obj);
  5665   003916  C0EC  F0EA         	movff	CCP_Init@_ccp_obj,CCP_PWM_Mode_Config@_ccp_obj
  5666   00391A  C0ED  F0EB         	movff	CCP_Init@_ccp_obj+1,CCP_PWM_Mode_Config@_ccp_obj+1
  5667   00391E  ECCE  F013         	call	_CCP_PWM_Mode_Config	;wreg free
  5668                           
  5669                           ;MCAL_Layer/CCP/hal_ccp.c: 52:         }
  5670   003922  EF93  F01C         	goto	l10844
  5671   003926                     l529:
  5672   003926                     l10844:
  5673   003926  0E03               	movlw	3
  5674   003928  0100               	movlb	0	; () banked
  5675   00392A  25EC               	addwf	CCP_Init@_ccp_obj& (0+255),w,b
  5676   00392C  6E18               	movwf	gpio_pin_intialize@_pin_config^0,c
  5677   00392E  0E00               	movlw	0
  5678   003930  21ED               	addwfc	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  5679   003932  6E19               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  5680   003934  ECEF  F021         	call	_gpio_pin_intialize	;wreg free
  5681   003938                     
  5682                           ;MCAL_Layer/CCP/hal_ccp.c: 59:         CCP_Interrupt_Config(_ccp_obj);
  5683   003938  C0EC  F00E         	movff	CCP_Init@_ccp_obj,CCP_Interrupt_Config@_ccp_obj
  5684   00393C  C0ED  F00F         	movff	CCP_Init@_ccp_obj+1,CCP_Interrupt_Config@_ccp_obj+1
  5685   003940  EC33  F024         	call	_CCP_Interrupt_Config	;wreg free
  5686   003944                     
  5687                           ;MCAL_Layer/CCP/hal_ccp.c: 62:         ret = (Std_ReturnType)0x01;
  5688   003944  0E01               	movlw	1
  5689   003946  0100               	movlb	0	; () banked
  5690   003948  6FEF               	movwf	CCP_Init@ret& (0+255),b
  5691   00394A                     l10850:
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;MCAL_Layer/CCP/hal_ccp.c: 64:     return ret;
  5695   00394A  51EF               	movf	CCP_Init@ret& (0+255),w,b
  5696   00394C                     
  5697                           ; BSR set to: 0
  5698   00394C  0012               	return		;funcret
  5699   00394E                     __end_of_CCP_Init:
  5700                           	callstack 0
  5701                           
  5702 ;; *************** function _gpio_pin_intialize *****************
  5703 ;; Defined at:
  5704 ;;		line 144 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  _pin_config     2   23[COMRAM] PTR const struct .
  5707 ;;		 -> ccp1_obj(17), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), lcd_1.lcd_data(4), 
  5708 ;;		 -> lcd_1(6), 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  ret             1   26[COMRAM] unsigned char 
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      unsigned char 
  5713 ;; Registers used:
  5714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;Total ram usage:        4 bytes
  5725 ;; Hardware stack levels used: 1
  5726 ;; Hardware stack levels required when called: 5
  5727 ;; This function calls:
  5728 ;;		_gpio_pin_direction_intialize
  5729 ;;		_gpio_pin_write_logic
  5730 ;; This function is called by:
  5731 ;;		_lcd_4bit_intialize
  5732 ;;		_dc_motor_initialize
  5733 ;;		_CCP_Init
  5734 ;;		_seven_segement_intialize
  5735 ;;		_lcd_8bit_intialize
  5736 ;;		_keypad_initialize
  5737 ;;		_led_initialize
  5738 ;;		_relay_initialize
  5739 ;;		_Ultrasonic_Init
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text32
  5744   0043DE                     __ptext32:
  5745                           	callstack 0
  5746   0043DE                     _gpio_pin_intialize:
  5747                           	callstack 22
  5748   0043DE                     
  5749                           ;MCAL_Layer/GPIO/hal_gpio.c: 146:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1){
  5750   0043DE  5018               	movf	gpio_pin_intialize@_pin_config^0,w,c
  5751   0043E0  1019               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  5752   0043E2  B4D8               	btfsc	status,2,c
  5753   0043E4  EFF6  F021         	goto	u9781
  5754   0043E8  EFF8  F021         	goto	u9780
  5755   0043EC                     u9781:
  5756   0043EC  EF09  F022         	goto	l9772
  5757   0043F0                     u9780:
  5758   0043F0  C018  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  5759   0043F4  C019  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  5760   0043F8  30DF               	rrcf	223,w,c
  5761   0043FA  32E8               	rrcf	wreg,f,c
  5762   0043FC  32E8               	rrcf	wreg,f,c
  5763   0043FE  0B07               	andlw	7
  5764   004400  6E1A               	movwf	??_gpio_pin_intialize^0,c
  5765   004402  0E07               	movlw	7
  5766   004404  641A               	cpfsgt	??_gpio_pin_intialize^0,c
  5767   004406  EF07  F022         	goto	u9791
  5768   00440A  EF09  F022         	goto	u9790
  5769   00440E                     u9791:
  5770   00440E  EF0D  F022         	goto	l9774
  5771   004412                     u9790:
  5772   004412                     l9772:
  5773                           
  5774                           ;MCAL_Layer/GPIO/hal_gpio.c: 147:         ret = (Std_ReturnType)0x00;
  5775   004412  0E00               	movlw	0
  5776   004414  6E1B               	movwf	gpio_pin_intialize@ret^0,c
  5777                           
  5778                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     }
  5779   004416  EF23  F022         	goto	l9776
  5780   00441A                     l9774:
  5781                           
  5782                           ;MCAL_Layer/GPIO/hal_gpio.c: 150:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
  5783   00441A  C018  F00E         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  5784   00441E  C019  F00F         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  5785   004422  EC9E  F018         	call	_gpio_pin_direction_intialize	;wreg free
  5786   004426  6E1B               	movwf	gpio_pin_intialize@ret^0,c
  5787                           
  5788                           ;MCAL_Layer/GPIO/hal_gpio.c: 151:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  5789   004428  C018  F00E         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  5790   00442C  C019  F00F         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  5791   004430  C018  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  5792   004434  C019  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  5793   004438  0E00               	movlw	0
  5794   00443A  BEDF               	btfsc	indf2,7,c
  5795   00443C  0E01               	movlw	1
  5796   00443E  6E10               	movwf	gpio_pin_write_logic@logic^0,c
  5797   004440  EC76  F01A         	call	_gpio_pin_write_logic	;wreg free
  5798   004444  6E1B               	movwf	gpio_pin_intialize@ret^0,c
  5799   004446                     l9776:
  5800                           
  5801                           ;MCAL_Layer/GPIO/hal_gpio.c: 153:     return ret;
  5802   004446  501B               	movf	gpio_pin_intialize@ret^0,w,c
  5803   004448  0012               	return		;funcret
  5804   00444A                     __end_of_gpio_pin_intialize:
  5805                           	callstack 0
  5806                           
  5807 ;; *************** function _gpio_pin_write_logic *****************
  5808 ;; Defined at:
  5809 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  _pin_config     2   13[COMRAM] PTR const struct .
  5812 ;;		 -> ccp1_obj(17), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), lcd_1.lcd_data(4), 
  5813 ;;		 -> lcd_1(6), 
  5814 ;;  logic           1   15[COMRAM] enum E3462
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  ret             1   22[COMRAM] unsigned char 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      unsigned char 
  5819 ;; Registers used:
  5820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5826 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;Total ram usage:       10 bytes
  5831 ;; Hardware stack levels used: 1
  5832 ;; Hardware stack levels required when called: 4
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		_lcd_4bit_send_command
  5837 ;;		_lcd_4bit_send_char_data
  5838 ;;		_lcd_send_4bits
  5839 ;;		_lcd_4bit_send_enable_signal
  5840 ;;		_dc_motor_move_right
  5841 ;;		_dc_motor_stop
  5842 ;;		_gpio_pin_intialize
  5843 ;;		_seven_segement_write_number
  5844 ;;		_lcd_8bit_send_command
  5845 ;;		_lcd_8bit_send_char_data
  5846 ;;		_lcd_8bit_send_enable_signal
  5847 ;;		_dc_motor_move_left
  5848 ;;		_keypad_get_value
  5849 ;;		_led_turn_on
  5850 ;;		_led_turn_off
  5851 ;;		_relay_turn_on
  5852 ;;		_relay_turn_off
  5853 ;;		_Ultrasonic_Calculate_Distance
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text33
  5858   0034EC                     __ptext33:
  5859                           	callstack 0
  5860   0034EC                     _gpio_pin_write_logic:
  5861                           	callstack 22
  5862   0034EC                     
  5863                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5864   0034EC  0E01               	movlw	1
  5865   0034EE  6E17               	movwf	gpio_pin_write_logic@ret^0,c
  5866   0034F0                     
  5867                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  5868   0034F0  500E               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5869   0034F2  100F               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  5870   0034F4  B4D8               	btfsc	status,2,c
  5871   0034F6  EF7F  F01A         	goto	u9431
  5872   0034FA  EF81  F01A         	goto	u9430
  5873   0034FE                     u9431:
  5874   0034FE  EF92  F01A         	goto	l9552
  5875   003502                     u9430:
  5876   003502  C00E  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5877   003506  C00F  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5878   00350A  30DF               	rrcf	223,w,c
  5879   00350C  32E8               	rrcf	wreg,f,c
  5880   00350E  32E8               	rrcf	wreg,f,c
  5881   003510  0B07               	andlw	7
  5882   003512  6E11               	movwf	??_gpio_pin_write_logic^0,c
  5883   003514  0E07               	movlw	7
  5884   003516  6411               	cpfsgt	??_gpio_pin_write_logic^0,c
  5885   003518  EF90  F01A         	goto	u9441
  5886   00351C  EF92  F01A         	goto	u9440
  5887   003520                     u9441:
  5888   003520  EFF5  F01A         	goto	l9560
  5889   003524                     u9440:
  5890   003524                     l9552:
  5891                           
  5892                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret = (Std_ReturnType)0x00;
  5893   003524  0E00               	movlw	0
  5894   003526  6E17               	movwf	gpio_pin_write_logic@ret^0,c
  5895                           
  5896                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     }
  5897   003528  EF0A  F01B         	goto	l9562
  5898   00352C                     l9554:
  5899                           
  5900                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  5901   00352C  C00E  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5902   003530  C00F  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5903   003534  30DF               	rrcf	223,w,c
  5904   003536  32E8               	rrcf	wreg,f,c
  5905   003538  32E8               	rrcf	wreg,f,c
  5906   00353A  0B07               	andlw	7
  5907   00353C  6E11               	movwf	??_gpio_pin_write_logic^0,c
  5908   00353E  0E01               	movlw	1
  5909   003540  6E12               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5910   003542  2A11               	incf	??_gpio_pin_write_logic^0,f,c
  5911   003544  EFA6  F01A         	goto	u9454
  5912   003548                     u9455:
  5913   003548  90D8               	bcf	status,0,c
  5914   00354A  3612               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5915   00354C                     u9454:
  5916   00354C  2E11               	decfsz	??_gpio_pin_write_logic^0,f,c
  5917   00354E  EFA4  F01A         	goto	u9455
  5918   003552  5012               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5919   003554  0AFF               	xorlw	255
  5920   003556  6E13               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5921   003558  C00E  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5922   00355C  C00F  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5923   003560  50DF               	movf	223,w,c
  5924   003562  0B07               	andlw	7
  5925   003564  6E14               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5926   003566  5014               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5927   003568  0D02               	mullw	2
  5928   00356A  0EF0               	movlw	low _lat_registers
  5929   00356C  24F3               	addwf	243,w,c
  5930   00356E  6ED9               	movwf	fsr2l,c
  5931   003570  0E00               	movlw	high _lat_registers
  5932   003572  20F4               	addwfc	prodh,w,c
  5933   003574  6EDA               	movwf	fsr2h,c
  5934   003576  CFDE F015          	movff	postinc2,??_gpio_pin_write_logic+4
  5935   00357A  CFDD F016          	movff	postdec2,??_gpio_pin_write_logic+5
  5936   00357E  C015  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5937   003582  C016  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5938   003586  5013               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5939   003588  16DF               	andwf	indf2,f,c
  5940                           
  5941                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
  5942   00358A  EF0A  F01B         	goto	l9562
  5943   00358E                     l9556:
  5944                           
  5945                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  5946   00358E  C00E  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5947   003592  C00F  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5948   003596  30DF               	rrcf	223,w,c
  5949   003598  32E8               	rrcf	wreg,f,c
  5950   00359A  32E8               	rrcf	wreg,f,c
  5951   00359C  0B07               	andlw	7
  5952   00359E  6E11               	movwf	??_gpio_pin_write_logic^0,c
  5953   0035A0  0E01               	movlw	1
  5954   0035A2  6E12               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5955   0035A4  2A11               	incf	??_gpio_pin_write_logic^0,f,c
  5956   0035A6  EFD7  F01A         	goto	u9464
  5957   0035AA                     u9465:
  5958   0035AA  90D8               	bcf	status,0,c
  5959   0035AC  3612               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5960   0035AE                     u9464:
  5961   0035AE  2E11               	decfsz	??_gpio_pin_write_logic^0,f,c
  5962   0035B0  EFD5  F01A         	goto	u9465
  5963   0035B4  C00E  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5964   0035B8  C00F  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5965   0035BC  50DF               	movf	223,w,c
  5966   0035BE  0B07               	andlw	7
  5967   0035C0  6E13               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5968   0035C2  5013               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5969   0035C4  0D02               	mullw	2
  5970   0035C6  0EF0               	movlw	low _lat_registers
  5971   0035C8  24F3               	addwf	243,w,c
  5972   0035CA  6ED9               	movwf	fsr2l,c
  5973   0035CC  0E00               	movlw	high _lat_registers
  5974   0035CE  20F4               	addwfc	prodh,w,c
  5975   0035D0  6EDA               	movwf	fsr2h,c
  5976   0035D2  CFDE F014          	movff	postinc2,??_gpio_pin_write_logic+3
  5977   0035D6  CFDD F015          	movff	postdec2,??_gpio_pin_write_logic+4
  5978   0035DA  C014  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5979   0035DE  C015  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5980   0035E2  5012               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5981   0035E4  12DF               	iorwf	indf2,f,c
  5982                           
  5983                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  5984   0035E6  EF0A  F01B         	goto	l9562
  5985   0035EA                     l9560:
  5986   0035EA  5010               	movf	gpio_pin_write_logic@logic^0,w,c
  5987   0035EC  6E11               	movwf	??_gpio_pin_write_logic^0,c
  5988   0035EE  6A12               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5989                           
  5990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5991                           ; Switch size 1, requested type "simple"
  5992                           ; Number of cases is 1, Range of values is 0 to 0
  5993                           ; switch strategies available:
  5994                           ; Name         Instructions Cycles
  5995                           ; simple_byte            4     3 (average)
  5996                           ;	Chosen strategy is simple_byte
  5997   0035F0  5012               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5998   0035F2  0A00               	xorlw	0	; case 0
  5999   0035F4  B4D8               	btfsc	status,2,c
  6000   0035F6  EFFF  F01A         	goto	l11996
  6001   0035FA  EF92  F01A         	goto	l9552
  6002   0035FE                     l11996:
  6003                           
  6004                           ; Switch size 1, requested type "simple"
  6005                           ; Number of cases is 2, Range of values is 0 to 1
  6006                           ; switch strategies available:
  6007                           ; Name         Instructions Cycles
  6008                           ; simple_byte            7     4 (average)
  6009                           ;	Chosen strategy is simple_byte
  6010   0035FE  5011               	movf	??_gpio_pin_write_logic^0,w,c
  6011   003600  0A00               	xorlw	0	; case 0
  6012   003602  B4D8               	btfsc	status,2,c
  6013   003604  EF96  F01A         	goto	l9554
  6014   003608  0A01               	xorlw	1	; case 1
  6015   00360A  B4D8               	btfsc	status,2,c
  6016   00360C  EFC7  F01A         	goto	l9556
  6017   003610  EF92  F01A         	goto	l9552
  6018   003614                     l9562:
  6019                           
  6020                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     return ret;
  6021   003614  5017               	movf	gpio_pin_write_logic@ret^0,w,c
  6022   003616  0012               	return		;funcret
  6023   003618                     __end_of_gpio_pin_write_logic:
  6024                           	callstack 0
  6025                           
  6026 ;; *************** function _gpio_pin_direction_intialize *****************
  6027 ;; Defined at:
  6028 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  _pin_config     2   13[COMRAM] PTR const struct .
  6031 ;;		 -> ccp1_obj(17), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(1), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
      +@SPI_CLK(1), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(1), 
  6032 ;;		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(1), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK(1),
      + MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI(1), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO(1), 
  6033 ;;		 -> dc_motor_1.dc_motor_pin(2), dc_motor_1(2), lcd_1.lcd_data(4), lcd_1(6), 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  ret             1   21[COMRAM] unsigned char 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      unsigned char 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;Total ram usage:        9 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; Hardware stack levels required when called: 4
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		_gpio_pin_intialize
  6056 ;;		_button_initialize
  6057 ;;		_keypad_initialize
  6058 ;;		_Interrupt_RBx_Init
  6059 ;;		_Interrupt_INTx_Pin_Init
  6060 ;;		_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations
  6061 ;;		_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text34
  6066   00313C                     __ptext34:
  6067                           	callstack 0
  6068   00313C                     _gpio_pin_direction_intialize:
  6069                           	callstack 22
  6070   00313C                     
  6071                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6072   00313C  0E01               	movlw	1
  6073   00313E  6E16               	movwf	gpio_pin_direction_intialize@ret^0,c
  6074   003140                     
  6075                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  6076   003140  500E               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  6077   003142  100F               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  6078   003144  B4D8               	btfsc	status,2,c
  6079   003146  EFA7  F018         	goto	u9621
  6080   00314A  EFA9  F018         	goto	u9620
  6081   00314E                     u9621:
  6082   00314E  EFBA  F018         	goto	l9674
  6083   003152                     u9620:
  6084   003152  C00E  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  6085   003156  C00F  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  6086   00315A  30DF               	rrcf	223,w,c
  6087   00315C  32E8               	rrcf	wreg,f,c
  6088   00315E  32E8               	rrcf	wreg,f,c
  6089   003160  0B07               	andlw	7
  6090   003162  6E10               	movwf	??_gpio_pin_direction_intialize^0,c
  6091   003164  0E07               	movlw	7
  6092   003166  6410               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  6093   003168  EFB8  F018         	goto	u9631
  6094   00316C  EFBA  F018         	goto	u9630
  6095   003170                     u9631:
  6096   003170  EF1D  F019         	goto	l9682
  6097   003174                     u9630:
  6098   003174                     l9674:
  6099                           
  6100                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (Std_ReturnType)0x00;
  6101   003174  0E00               	movlw	0
  6102   003176  6E16               	movwf	gpio_pin_direction_intialize@ret^0,c
  6103                           
  6104                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     }
  6105   003178  EF3E  F019         	goto	l9684
  6106   00317C                     l9676:
  6107                           
  6108                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  6109   00317C  C00E  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  6110   003180  C00F  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  6111   003184  30DF               	rrcf	223,w,c
  6112   003186  32E8               	rrcf	wreg,f,c
  6113   003188  32E8               	rrcf	wreg,f,c
  6114   00318A  0B07               	andlw	7
  6115   00318C  6E10               	movwf	??_gpio_pin_direction_intialize^0,c
  6116   00318E  0E01               	movlw	1
  6117   003190  6E11               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  6118   003192  2A10               	incf	??_gpio_pin_direction_intialize^0,f,c
  6119   003194  EFCE  F018         	goto	u9644
  6120   003198                     u9645:
  6121   003198  90D8               	bcf	status,0,c
  6122   00319A  3611               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  6123   00319C                     u9644:
  6124   00319C  2E10               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  6125   00319E  EFCC  F018         	goto	u9645
  6126   0031A2  5011               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  6127   0031A4  0AFF               	xorlw	255
  6128   0031A6  6E12               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  6129   0031A8  C00E  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  6130   0031AC  C00F  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  6131   0031B0  50DF               	movf	223,w,c
  6132   0031B2  0B07               	andlw	7
  6133   0031B4  6E13               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  6134   0031B6  5013               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  6135   0031B8  0D02               	mullw	2
  6136   0031BA  0E0A               	movlw	low _tris_registers
  6137   0031BC  24F3               	addwf	243,w,c
  6138   0031BE  6ED9               	movwf	fsr2l,c
  6139   0031C0  0E01               	movlw	high _tris_registers
  6140   0031C2  20F4               	addwfc	prodh,w,c
  6141   0031C4  6EDA               	movwf	fsr2h,c
  6142   0031C6  CFDE F014          	movff	postinc2,??_gpio_pin_direction_intialize+4
  6143   0031CA  CFDD F015          	movff	postdec2,??_gpio_pin_direction_intialize+5
  6144   0031CE  C014  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  6145   0031D2  C015  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  6146   0031D6  5012               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  6147   0031D8  16DF               	andwf	indf2,f,c
  6148                           
  6149                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  6150   0031DA  EF3E  F019         	goto	l9684
  6151   0031DE                     l9678:
  6152                           
  6153                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  6154   0031DE  C00E  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  6155   0031E2  C00F  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  6156   0031E6  30DF               	rrcf	223,w,c
  6157   0031E8  32E8               	rrcf	wreg,f,c
  6158   0031EA  32E8               	rrcf	wreg,f,c
  6159   0031EC  0B07               	andlw	7
  6160   0031EE  6E10               	movwf	??_gpio_pin_direction_intialize^0,c
  6161   0031F0  0E01               	movlw	1
  6162   0031F2  6E11               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  6163   0031F4  2A10               	incf	??_gpio_pin_direction_intialize^0,f,c
  6164   0031F6  EFFF  F018         	goto	u9654
  6165   0031FA                     u9655:
  6166   0031FA  90D8               	bcf	status,0,c
  6167   0031FC  3611               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  6168   0031FE                     u9654:
  6169   0031FE  2E10               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  6170   003200  EFFD  F018         	goto	u9655
  6171   003204  C00E  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  6172   003208  C00F  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  6173   00320C  50DF               	movf	223,w,c
  6174   00320E  0B07               	andlw	7
  6175   003210  6E12               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  6176   003212  5012               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  6177   003214  0D02               	mullw	2
  6178   003216  0E0A               	movlw	low _tris_registers
  6179   003218  24F3               	addwf	243,w,c
  6180   00321A  6ED9               	movwf	fsr2l,c
  6181   00321C  0E01               	movlw	high _tris_registers
  6182   00321E  20F4               	addwfc	prodh,w,c
  6183   003220  6EDA               	movwf	fsr2h,c
  6184   003222  CFDE F013          	movff	postinc2,??_gpio_pin_direction_intialize+3
  6185   003226  CFDD F014          	movff	postdec2,??_gpio_pin_direction_intialize+4
  6186   00322A  C013  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  6187   00322E  C014  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  6188   003232  5011               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  6189   003234  12DF               	iorwf	indf2,f,c
  6190                           
  6191                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  6192   003236  EF3E  F019         	goto	l9684
  6193   00323A                     l9682:
  6194   00323A  C00E  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  6195   00323E  C00F  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  6196   003242  BCDF               	btfsc	indf2,6,c
  6197   003244  EF26  F019         	goto	u9661
  6198   003248  EF29  F019         	goto	u9660
  6199   00324C                     u9661:
  6200   00324C  0E01               	movlw	1
  6201   00324E  EF2A  F019         	goto	u9670
  6202   003252                     u9660:
  6203   003252  0E00               	movlw	0
  6204   003254                     u9670:
  6205   003254  6E10               	movwf	??_gpio_pin_direction_intialize^0,c
  6206   003256  6A11               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  6207                           
  6208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6209                           ; Switch size 1, requested type "simple"
  6210                           ; Number of cases is 1, Range of values is 0 to 0
  6211                           ; switch strategies available:
  6212                           ; Name         Instructions Cycles
  6213                           ; simple_byte            4     3 (average)
  6214                           ;	Chosen strategy is simple_byte
  6215   003258  5011               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  6216   00325A  0A00               	xorlw	0	; case 0
  6217   00325C  B4D8               	btfsc	status,2,c
  6218   00325E  EF33  F019         	goto	l11998
  6219   003262  EFBA  F018         	goto	l9674
  6220   003266                     l11998:
  6221                           
  6222                           ; Switch size 1, requested type "simple"
  6223                           ; Number of cases is 2, Range of values is 0 to 1
  6224                           ; switch strategies available:
  6225                           ; Name         Instructions Cycles
  6226                           ; simple_byte            7     4 (average)
  6227                           ;	Chosen strategy is simple_byte
  6228   003266  5010               	movf	??_gpio_pin_direction_intialize^0,w,c
  6229   003268  0A00               	xorlw	0	; case 0
  6230   00326A  B4D8               	btfsc	status,2,c
  6231   00326C  EFBE  F018         	goto	l9676
  6232   003270  0A01               	xorlw	1	; case 1
  6233   003272  B4D8               	btfsc	status,2,c
  6234   003274  EFEF  F018         	goto	l9678
  6235   003278  EFBA  F018         	goto	l9674
  6236   00327C                     l9684:
  6237                           
  6238                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:     return ret;
  6239   00327C  5016               	movf	gpio_pin_direction_intialize@ret^0,w,c
  6240   00327E  0012               	return		;funcret
  6241   003280                     __end_of_gpio_pin_direction_intialize:
  6242                           	callstack 0
  6243                           
  6244 ;; *************** function _CCP_PWM_Mode_Config *****************
  6245 ;; Defined at:
  6246 ;;		line 263 in file "MCAL_Layer/CCP/hal_ccp.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  _ccp_obj        2   38[BANK0 ] PTR const struct .
  6249 ;;		 -> ccp1_obj(17), 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Totals:         1       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;Total ram usage:       11 bytes
  6266 ;; Hardware stack levels used: 1
  6267 ;; Hardware stack levels required when called: 5
  6268 ;; This function calls:
  6269 ;;		___fladd
  6270 ;;		___fldiv
  6271 ;;		___flmul
  6272 ;;		___fltol
  6273 ;;		___xxtofl
  6274 ;; This function is called by:
  6275 ;;		_CCP_Init
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text35
  6280   00279C                     __ptext35:
  6281                           	callstack 0
  6282   00279C                     _CCP_PWM_Mode_Config:
  6283                           	callstack 23
  6284   00279C                     
  6285                           ;MCAL_Layer/CCP/hal_ccp.c: 265:     PR2 = (uint8)(((float)8000000UL / ((float)_ccp_obj->
      +                          PWM_Frequency * 4.0 * (float)_ccp_obj->timer2_prescaler_value *
  6286   00279C  0E00               	movlw	0
  6287   00279E  6E20               	movwf	___flmul@a^0,c
  6288   0027A0  0E00               	movlw	0
  6289   0027A2  6E21               	movwf	(___flmul@a+1)^0,c
  6290   0027A4  0E80               	movlw	128
  6291   0027A6  6E22               	movwf	(___flmul@a+2)^0,c
  6292   0027A8  0E40               	movlw	64
  6293   0027AA  6E23               	movwf	(___flmul@a+3)^0,c
  6294   0027AC  0100               	movlb	0	; () banked
  6295   0027AE  EE20 F005          	lfsr	2,5
  6296   0027B2  51EA               	movf	CCP_PWM_Mode_Config@_ccp_obj& (0+255),w,b
  6297   0027B4  26D9               	addwf	fsr2l,f,c
  6298   0027B6  51EB               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)& (0+255),w,b
  6299   0027B8  22DA               	addwfc	fsr2h,f,c
  6300   0027BA  CFDE F00E          	movff	postinc2,___xxtofl@val
  6301   0027BE  CFDE F00F          	movff	postinc2,___xxtofl@val+1
  6302   0027C2  CFDE F010          	movff	postinc2,___xxtofl@val+2
  6303   0027C6  CFDE F011          	movff	postinc2,___xxtofl@val+3
  6304   0027CA  0E00               	movlw	0
  6305   0027CC  ECBA  F014         	call	___xxtofl
  6306   0027D0  C00E  F01C         	movff	?___xxtofl,___flmul@b
  6307   0027D4  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  6308   0027D8  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  6309   0027DC  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  6310   0027E0  ECB2  F00C         	call	___flmul	;wreg free
  6311   0027E4  C01C  F17B         	movff	?___flmul,_CCP_PWM_Mode_Config$5737
  6312   0027E8  C01D  F17C         	movff	?___flmul+1,_CCP_PWM_Mode_Config$5737+1
  6313   0027EC  C01E  F17D         	movff	?___flmul+2,_CCP_PWM_Mode_Config$5737+2
  6314   0027F0  C01F  F17E         	movff	?___flmul+3,_CCP_PWM_Mode_Config$5737+3
  6315                           
  6316                           ;MCAL_Layer/CCP/hal_ccp.c: 265:     PR2 = (uint8)(((float)8000000UL / ((float)_ccp_obj->
      +                          PWM_Frequency * 4.0 * (float)_ccp_obj->timer2_prescaler_value *
  6317   0027F4  0100               	movlb	0	; () banked
  6318   0027F6  EE20 F00A          	lfsr	2,10
  6319   0027FA  51EA               	movf	CCP_PWM_Mode_Config@_ccp_obj& (0+255),w,b
  6320   0027FC  26D9               	addwf	fsr2l,f,c
  6321   0027FE  51EB               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)& (0+255),w,b
  6322   002800  22DA               	addwfc	fsr2h,f,c
  6323   002802  50DF               	movf	indf2,w,c
  6324   002804  6E64               	movwf	??_CCP_PWM_Mode_Config^0,c
  6325   002806  5064               	movf	??_CCP_PWM_Mode_Config^0,w,c
  6326   002808  6E0E               	movwf	___xxtofl@val^0,c
  6327   00280A  6A0F               	clrf	(___xxtofl@val+1)^0,c
  6328   00280C  6A10               	clrf	(___xxtofl@val+2)^0,c
  6329   00280E  6A11               	clrf	(___xxtofl@val+3)^0,c
  6330   002810  0E00               	movlw	0
  6331   002812  ECBA  F014         	call	___xxtofl
  6332   002816  C00E  F020         	movff	?___xxtofl,___flmul@a
  6333   00281A  C00F  F021         	movff	?___xxtofl+1,___flmul@a+1
  6334   00281E  C010  F022         	movff	?___xxtofl+2,___flmul@a+2
  6335   002822  C011  F023         	movff	?___xxtofl+3,___flmul@a+3
  6336   002826  C17B  F01C         	movff	_CCP_PWM_Mode_Config$5737,___flmul@b
  6337   00282A  C17C  F01D         	movff	_CCP_PWM_Mode_Config$5737+1,___flmul@b+1
  6338   00282E  C17D  F01E         	movff	_CCP_PWM_Mode_Config$5737+2,___flmul@b+2
  6339   002832  C17E  F01F         	movff	_CCP_PWM_Mode_Config$5737+3,___flmul@b+3
  6340   002836  ECB2  F00C         	call	___flmul	;wreg free
  6341   00283A  C01C  F17F         	movff	?___flmul,_CCP_PWM_Mode_Config$5738
  6342   00283E  C01D  F180         	movff	?___flmul+1,_CCP_PWM_Mode_Config$5738+1
  6343   002842  C01E  F181         	movff	?___flmul+2,_CCP_PWM_Mode_Config$5738+2
  6344   002846  C01F  F182         	movff	?___flmul+3,_CCP_PWM_Mode_Config$5738+3
  6345                           
  6346                           ;MCAL_Layer/CCP/hal_ccp.c: 265:     PR2 = (uint8)(((float)8000000UL / ((float)_ccp_obj->
      +                          PWM_Frequency * 4.0 * (float)_ccp_obj->timer2_prescaler_value *
  6347   00284A  0E00               	movlw	0
  6348   00284C  6E52               	movwf	___fladd@a^0,c
  6349   00284E  0E00               	movlw	0
  6350   002850  6E53               	movwf	(___fladd@a+1)^0,c
  6351   002852  0E80               	movlw	128
  6352   002854  6E54               	movwf	(___fladd@a+2)^0,c
  6353   002856  0EBF               	movlw	191
  6354   002858  6E55               	movwf	(___fladd@a+3)^0,c
  6355   00285A  0100               	movlb	0	; () banked
  6356   00285C  EE20 F009          	lfsr	2,9
  6357   002860  51EA               	movf	CCP_PWM_Mode_Config@_ccp_obj& (0+255),w,b
  6358   002862  26D9               	addwf	fsr2l,f,c
  6359   002864  51EB               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)& (0+255),w,b
  6360   002866  22DA               	addwfc	fsr2h,f,c
  6361   002868  50DF               	movf	indf2,w,c
  6362   00286A  6E64               	movwf	??_CCP_PWM_Mode_Config^0,c
  6363   00286C  5064               	movf	??_CCP_PWM_Mode_Config^0,w,c
  6364   00286E  6E0E               	movwf	___xxtofl@val^0,c
  6365   002870  6A0F               	clrf	(___xxtofl@val+1)^0,c
  6366   002872  6A10               	clrf	(___xxtofl@val+2)^0,c
  6367   002874  6A11               	clrf	(___xxtofl@val+3)^0,c
  6368   002876  0E00               	movlw	0
  6369   002878  ECBA  F014         	call	___xxtofl
  6370   00287C  C00E  F020         	movff	?___xxtofl,___flmul@a
  6371   002880  C00F  F021         	movff	?___xxtofl+1,___flmul@a+1
  6372   002884  C010  F022         	movff	?___xxtofl+2,___flmul@a+2
  6373   002888  C011  F023         	movff	?___xxtofl+3,___flmul@a+3
  6374   00288C  C17F  F01C         	movff	_CCP_PWM_Mode_Config$5738,___flmul@b
  6375   002890  C180  F01D         	movff	_CCP_PWM_Mode_Config$5738+1,___flmul@b+1
  6376   002894  C181  F01E         	movff	_CCP_PWM_Mode_Config$5738+2,___flmul@b+2
  6377   002898  C182  F01F         	movff	_CCP_PWM_Mode_Config$5738+3,___flmul@b+3
  6378   00289C  ECB2  F00C         	call	___flmul	;wreg free
  6379   0028A0  C01C  F039         	movff	?___flmul,___fldiv@a
  6380   0028A4  C01D  F03A         	movff	?___flmul+1,___fldiv@a+1
  6381   0028A8  C01E  F03B         	movff	?___flmul+2,___fldiv@a+2
  6382   0028AC  C01F  F03C         	movff	?___flmul+3,___fldiv@a+3
  6383   0028B0  0E00               	movlw	0
  6384   0028B2  6E35               	movwf	___fldiv@b^0,c
  6385   0028B4  0E24               	movlw	36
  6386   0028B6  6E36               	movwf	(___fldiv@b+1)^0,c
  6387   0028B8  0EF4               	movlw	244
  6388   0028BA  6E37               	movwf	(___fldiv@b+2)^0,c
  6389   0028BC  0E4A               	movlw	74
  6390   0028BE  6E38               	movwf	(___fldiv@b+3)^0,c
  6391   0028C0  ECA1  F010         	call	___fldiv	;wreg free
  6392   0028C4  C035  F04E         	movff	?___fldiv,___fladd@b
  6393   0028C8  C036  F04F         	movff	?___fldiv+1,___fladd@b+1
  6394   0028CC  C037  F050         	movff	?___fldiv+2,___fladd@b+2
  6395   0028D0  C038  F051         	movff	?___fldiv+3,___fladd@b+3
  6396   0028D4  EC1E  F008         	call	___fladd	;wreg free
  6397   0028D8  C04E  F0E2         	movff	?___fladd,___fltol@f1
  6398   0028DC  C04F  F0E3         	movff	?___fladd+1,___fltol@f1+1
  6399   0028E0  C050  F0E4         	movff	?___fladd+2,___fltol@f1+2
  6400   0028E4  C051  F0E5         	movff	?___fladd+3,___fltol@f1+3
  6401   0028E8  ECA0  F01B         	call	___fltol	;wreg free
  6402   0028EC  0100               	movlb	0	; () banked
  6403   0028EE  51E2               	movf	?___fltol& (0+255),w,b
  6404   0028F0  6ECB               	movwf	203,c	;volatile
  6405   0028F2                     
  6406                           ; BSR set to: 0
  6407                           ;MCAL_Layer/CCP/hal_ccp.c: 268:     if(CCP1_INST == _ccp_obj->ccp_inst){
  6408   0028F2  C0EA  FFD9         	movff	CCP_PWM_Mode_Config@_ccp_obj,fsr2l
  6409   0028F6  C0EB  FFDA         	movff	CCP_PWM_Mode_Config@_ccp_obj+1,fsr2h
  6410   0028FA  50DF               	movf	indf2,w,c
  6411   0028FC  A4D8               	btfss	status,2,c
  6412   0028FE  EF83  F014         	goto	u10961
  6413   002902  EF85  F014         	goto	u10960
  6414   002906                     u10961:
  6415   002906  EF9A  F014         	goto	l10606
  6416   00290A                     u10960:
  6417   00290A                     
  6418                           ; BSR set to: 0
  6419                           ;MCAL_Layer/CCP/hal_ccp.c: 269:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
  6420   00290A  EE20 F002          	lfsr	2,2
  6421   00290E  51EA               	movf	CCP_PWM_Mode_Config@_ccp_obj& (0+255),w,b
  6422   002910  26D9               	addwf	fsr2l,f,c
  6423   002912  51EB               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)& (0+255),w,b
  6424   002914  22DA               	addwfc	fsr2h,f,c
  6425   002916  0E0C               	movlw	12
  6426   002918  18DE               	xorwf	postinc2,w,c
  6427   00291A  A4D8               	btfss	status,2,c
  6428   00291C  EF92  F014         	goto	u10971
  6429   002920  EF94  F014         	goto	u10970
  6430   002924                     u10971:
  6431   002924  EFB9  F014         	goto	l589
  6432   002928                     u10970:
  6433   002928                     
  6434                           ; BSR set to: 0
  6435                           ;MCAL_Layer/CCP/hal_ccp.c: 270:             (CCP1CONbits.CCP1M = ((uint8)0x0C));
  6436   002928  50BD               	movf	189,w,c	;volatile
  6437   00292A  0BF0               	andlw	-16
  6438   00292C  090C               	iorlw	12
  6439   00292E  6EBD               	movwf	189,c	;volatile
  6440                           
  6441                           ;MCAL_Layer/CCP/hal_ccp.c: 271:         }
  6442   002930  EFB9  F014         	goto	l589
  6443   002934                     l10606:
  6444                           
  6445                           ; BSR set to: 0
  6446   002934  C0EA  FFD9         	movff	CCP_PWM_Mode_Config@_ccp_obj,fsr2l
  6447   002938  C0EB  FFDA         	movff	CCP_PWM_Mode_Config@_ccp_obj+1,fsr2h
  6448   00293C  04DE               	decf	postinc2,w,c
  6449   00293E  A4D8               	btfss	status,2,c
  6450   002940  EFA4  F014         	goto	u10981
  6451   002944  EFA6  F014         	goto	u10980
  6452   002948                     u10981:
  6453   002948  EFB9  F014         	goto	l589
  6454   00294C                     u10980:
  6455   00294C                     
  6456                           ; BSR set to: 0
  6457                           ;MCAL_Layer/CCP/hal_ccp.c: 275:         if(((uint8)0x0C) == _ccp_obj->ccp_mode_variant){
  6458   00294C  EE20 F002          	lfsr	2,2
  6459   002950  51EA               	movf	CCP_PWM_Mode_Config@_ccp_obj& (0+255),w,b
  6460   002952  26D9               	addwf	fsr2l,f,c
  6461   002954  51EB               	movf	(CCP_PWM_Mode_Config@_ccp_obj+1)& (0+255),w,b
  6462   002956  22DA               	addwfc	fsr2h,f,c
  6463   002958  0E0C               	movlw	12
  6464   00295A  18DE               	xorwf	postinc2,w,c
  6465   00295C  A4D8               	btfss	status,2,c
  6466   00295E  EFB3  F014         	goto	u10991
  6467   002962  EFB5  F014         	goto	u10990
  6468   002966                     u10991:
  6469   002966  EFB9  F014         	goto	l589
  6470   00296A                     u10990:
  6471   00296A                     
  6472                           ; BSR set to: 0
  6473                           ;MCAL_Layer/CCP/hal_ccp.c: 276:             (CCP2CONbits.CCP2M = ((uint8)0x0C));
  6474   00296A  50BA               	movf	186,w,c	;volatile
  6475   00296C  0BF0               	andlw	-16
  6476   00296E  090C               	iorlw	12
  6477   002970  6EBA               	movwf	186,c	;volatile
  6478   002972                     l589:
  6479                           
  6480                           ; BSR set to: 0
  6481   002972  0012               	return		;funcret
  6482   002974                     __end_of_CCP_PWM_Mode_Config:
  6483                           	callstack 0
  6484                           
  6485 ;; *************** function _CCP_Interrupt_Config *****************
  6486 ;; Defined at:
  6487 ;;		line 284 in file "MCAL_Layer/CCP/hal_ccp.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  _ccp_obj        2   13[COMRAM] PTR const struct .
  6490 ;;		 -> ccp1_obj(17), 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  1    wreg      void 
  6495 ;; Registers used:
  6496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;Total ram usage:        2 bytes
  6507 ;; Hardware stack levels used: 1
  6508 ;; Hardware stack levels required when called: 4
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_CCP_Init
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text36
  6517   004866                     __ptext36:
  6518                           	callstack 0
  6519   004866                     _CCP_Interrupt_Config:
  6520                           	callstack 24
  6521   004866                     
  6522                           ;MCAL_Layer/CCP/hal_ccp.c: 287:     (PIE1bits.CCP1IE = 1);
  6523   004866  849D               	bsf	157,2,c	;volatile
  6524                           
  6525                           ;MCAL_Layer/CCP/hal_ccp.c: 288:     (PIR1bits.CCP1IF = 0);
  6526   004868  949E               	bcf	158,2,c	;volatile
  6527   00486A                     
  6528                           ;MCAL_Layer/CCP/hal_ccp.c: 289:     CCP1_InterruptHandler = _ccp_obj->CCP1_InterruptHand
      +                          ler;
  6529   00486A  EE20 F00B          	lfsr	2,11
  6530   00486E  500E               	movf	CCP_Interrupt_Config@_ccp_obj^0,w,c
  6531   004870  26D9               	addwf	fsr2l,f,c
  6532   004872  500F               	movf	(CCP_Interrupt_Config@_ccp_obj+1)^0,w,c
  6533   004874  22DA               	addwfc	fsr2h,f,c
  6534   004876  CFDE F0BC          	movff	postinc2,_CCP1_InterruptHandler
  6535   00487A  CFDD F0BD          	movff	postdec2,_CCP1_InterruptHandler+1
  6536   00487E                     
  6537                           ;MCAL_Layer/CCP/hal_ccp.c: 305:     (INTCONbits.GIE = 1);
  6538   00487E  8EF2               	bsf	242,7,c	;volatile
  6539   004880                     
  6540                           ;MCAL_Layer/CCP/hal_ccp.c: 306:     (INTCONbits.PEIE = 1);
  6541   004880  8CF2               	bsf	242,6,c	;volatile
  6542   004882                     
  6543                           ;MCAL_Layer/CCP/hal_ccp.c: 312:     (PIE2bits.CCP2IE = 1);
  6544   004882  80A0               	bsf	160,0,c	;volatile
  6545   004884                     
  6546                           ;MCAL_Layer/CCP/hal_ccp.c: 313:     (PIR2bits.CCP2IF = 0);
  6547   004884  90A1               	bcf	161,0,c	;volatile
  6548                           
  6549                           ;MCAL_Layer/CCP/hal_ccp.c: 314:     CCP2_InterruptHandler = _ccp_obj->CCP2_InterruptHand
      +                          ler;
  6550   004886  EE20 F00E          	lfsr	2,14
  6551   00488A  500E               	movf	CCP_Interrupt_Config@_ccp_obj^0,w,c
  6552   00488C  26D9               	addwf	fsr2l,f,c
  6553   00488E  500F               	movf	(CCP_Interrupt_Config@_ccp_obj+1)^0,w,c
  6554   004890  22DA               	addwfc	fsr2h,f,c
  6555   004892  CFDE F0BA          	movff	postinc2,_CCP2_InterruptHandler
  6556   004896  CFDD F0BB          	movff	postdec2,_CCP2_InterruptHandler+1
  6557   00489A                     
  6558                           ;MCAL_Layer/CCP/hal_ccp.c: 330:     (INTCONbits.GIE = 1);
  6559   00489A  8EF2               	bsf	242,7,c	;volatile
  6560   00489C                     
  6561                           ;MCAL_Layer/CCP/hal_ccp.c: 331:     (INTCONbits.PEIE = 1);
  6562   00489C  8CF2               	bsf	242,6,c	;volatile
  6563   00489E  0012               	return		;funcret
  6564   0048A0                     __end_of_CCP_Interrupt_Config:
  6565                           	callstack 0
  6566                           
  6567 ;; *************** function _CCP_Compare_Mode_Config *****************
  6568 ;; Defined at:
  6569 ;;		line 386 in file "MCAL_Layer/CCP/hal_ccp.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;  _ccp_obj        2   16[COMRAM] PTR const struct .
  6572 ;;		 -> ccp1_obj(17), 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  ret             1   20[COMRAM] unsigned char 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      unsigned char 
  6577 ;; Registers used:
  6578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;Total ram usage:        5 bytes
  6589 ;; Hardware stack levels used: 1
  6590 ;; Hardware stack levels required when called: 5
  6591 ;; This function calls:
  6592 ;;		_CCP_Mode_Timer_Select
  6593 ;; This function is called by:
  6594 ;;		_CCP_Init
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text37
  6599   002FD4                     __ptext37:
  6600                           	callstack 0
  6601   002FD4                     _CCP_Compare_Mode_Config:
  6602                           	callstack 23
  6603   002FD4                     
  6604                           ;MCAL_Layer/CCP/hal_ccp.c: 387:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6605   002FD4  0E01               	movlw	1
  6606   002FD6  6E15               	movwf	CCP_Compare_Mode_Config@ret^0,c
  6607   002FD8                     
  6608                           ;MCAL_Layer/CCP/hal_ccp.c: 389:     if(CCP1_INST == _ccp_obj->ccp_inst){
  6609   002FD8  C011  FFD9         	movff	CCP_Compare_Mode_Config@_ccp_obj,fsr2l
  6610   002FDC  C012  FFDA         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,fsr2h
  6611   002FE0  50DF               	movf	indf2,w,c
  6612   002FE2  A4D8               	btfss	status,2,c
  6613   002FE4  EFF6  F017         	goto	u10941
  6614   002FE8  EFF8  F017         	goto	u10940
  6615   002FEC                     u10941:
  6616   002FEC  EF43  F018         	goto	l10566
  6617   002FF0                     u10940:
  6618   002FF0  EF1C  F018         	goto	l10564
  6619   002FF4                     l10552:
  6620   002FF4  50BD               	movf	189,w,c	;volatile
  6621   002FF6  0BF0               	andlw	-16
  6622   002FF8  0908               	iorlw	8
  6623   002FFA  6EBD               	movwf	189,c	;volatile
  6624   002FFC  EF96  F018         	goto	l10584
  6625   003000                     l10554:
  6626   003000  50BD               	movf	189,w,c	;volatile
  6627   003002  0BF0               	andlw	-16
  6628   003004  0909               	iorlw	9
  6629   003006  6EBD               	movwf	189,c	;volatile
  6630   003008  EF96  F018         	goto	l10584
  6631   00300C                     l10556:
  6632   00300C  50BD               	movf	189,w,c	;volatile
  6633   00300E  0BF0               	andlw	-16
  6634   003010  0902               	iorlw	2
  6635   003012  6EBD               	movwf	189,c	;volatile
  6636   003014  EF96  F018         	goto	l10584
  6637   003018                     l10558:
  6638   003018  50BD               	movf	189,w,c	;volatile
  6639   00301A  0BF0               	andlw	-16
  6640   00301C  090A               	iorlw	10
  6641   00301E  6EBD               	movwf	189,c	;volatile
  6642   003020  EF96  F018         	goto	l10584
  6643   003024                     l10560:
  6644   003024  50BD               	movf	189,w,c	;volatile
  6645   003026  0BF0               	andlw	-16
  6646   003028  090B               	iorlw	11
  6647   00302A  6EBD               	movwf	189,c	;volatile
  6648   00302C  EF96  F018         	goto	l10584
  6649   003030                     l10562:
  6650   003030  0E00               	movlw	0
  6651   003032  6E15               	movwf	CCP_Compare_Mode_Config@ret^0,c
  6652                           
  6653                           ;MCAL_Layer/CCP/hal_ccp.c: 398:         }
  6654   003034  EF96  F018         	goto	l10584
  6655   003038                     l10564:
  6656   003038  EE20 F002          	lfsr	2,2
  6657   00303C  5011               	movf	CCP_Compare_Mode_Config@_ccp_obj^0,w,c
  6658   00303E  26D9               	addwf	fsr2l,f,c
  6659   003040  5012               	movf	(CCP_Compare_Mode_Config@_ccp_obj+1)^0,w,c
  6660   003042  22DA               	addwfc	fsr2h,f,c
  6661   003044  50DF               	movf	indf2,w,c
  6662   003046  6E13               	movwf	??_CCP_Compare_Mode_Config^0,c
  6663   003048  6A14               	clrf	(??_CCP_Compare_Mode_Config+1)^0,c
  6664                           
  6665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6666                           ; Switch size 1, requested type "simple"
  6667                           ; Number of cases is 1, Range of values is 0 to 0
  6668                           ; switch strategies available:
  6669                           ; Name         Instructions Cycles
  6670                           ; simple_byte            4     3 (average)
  6671                           ;	Chosen strategy is simple_byte
  6672   00304A  5014               	movf	(??_CCP_Compare_Mode_Config+1)^0,w,c
  6673   00304C  0A00               	xorlw	0	; case 0
  6674   00304E  B4D8               	btfsc	status,2,c
  6675   003050  EF2C  F018         	goto	l12000
  6676   003054  EF18  F018         	goto	l10562
  6677   003058                     l12000:
  6678                           
  6679                           ; Switch size 1, requested type "simple"
  6680                           ; Number of cases is 5, Range of values is 2 to 11
  6681                           ; switch strategies available:
  6682                           ; Name         Instructions Cycles
  6683                           ; simple_byte           16     9 (average)
  6684                           ;	Chosen strategy is simple_byte
  6685   003058  5013               	movf	??_CCP_Compare_Mode_Config^0,w,c
  6686   00305A  0A02               	xorlw	2	; case 2
  6687   00305C  B4D8               	btfsc	status,2,c
  6688   00305E  EF06  F018         	goto	l10556
  6689   003062  0A0A               	xorlw	10	; case 8
  6690   003064  B4D8               	btfsc	status,2,c
  6691   003066  EFFA  F017         	goto	l10552
  6692   00306A  0A01               	xorlw	1	; case 9
  6693   00306C  B4D8               	btfsc	status,2,c
  6694   00306E  EF00  F018         	goto	l10554
  6695   003072  0A03               	xorlw	3	; case 10
  6696   003074  B4D8               	btfsc	status,2,c
  6697   003076  EF0C  F018         	goto	l10558
  6698   00307A  0A01               	xorlw	1	; case 11
  6699   00307C  B4D8               	btfsc	status,2,c
  6700   00307E  EF12  F018         	goto	l10560
  6701   003082  EF18  F018         	goto	l10562
  6702   003086                     l10566:
  6703   003086  C011  FFD9         	movff	CCP_Compare_Mode_Config@_ccp_obj,fsr2l
  6704   00308A  C012  FFDA         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,fsr2h
  6705   00308E  04DE               	decf	postinc2,w,c
  6706   003090  A4D8               	btfss	status,2,c
  6707   003092  EF4D  F018         	goto	u10951
  6708   003096  EF4F  F018         	goto	u10950
  6709   00309A                     u10951:
  6710   00309A  EF96  F018         	goto	l10584
  6711   00309E                     u10950:
  6712   00309E  EF6F  F018         	goto	l10582
  6713   0030A2                     l10570:
  6714   0030A2  50BA               	movf	186,w,c	;volatile
  6715   0030A4  0BF0               	andlw	-16
  6716   0030A6  0908               	iorlw	8
  6717   0030A8  6EBA               	movwf	186,c	;volatile
  6718   0030AA  EF96  F018         	goto	l10584
  6719   0030AE                     l10572:
  6720   0030AE  50BA               	movf	186,w,c	;volatile
  6721   0030B0  0BF0               	andlw	-16
  6722   0030B2  0909               	iorlw	9
  6723   0030B4  6EBA               	movwf	186,c	;volatile
  6724   0030B6  EF96  F018         	goto	l10584
  6725   0030BA                     l10574:
  6726   0030BA  50BA               	movf	186,w,c	;volatile
  6727   0030BC  0BF0               	andlw	-16
  6728   0030BE  0902               	iorlw	2
  6729   0030C0  6EBA               	movwf	186,c	;volatile
  6730   0030C2  EF96  F018         	goto	l10584
  6731   0030C6                     l10576:
  6732   0030C6  50BA               	movf	186,w,c	;volatile
  6733   0030C8  0BF0               	andlw	-16
  6734   0030CA  090A               	iorlw	10
  6735   0030CC  6EBA               	movwf	186,c	;volatile
  6736   0030CE  EF96  F018         	goto	l10584
  6737   0030D2                     l10578:
  6738   0030D2  50BA               	movf	186,w,c	;volatile
  6739   0030D4  0BF0               	andlw	-16
  6740   0030D6  090B               	iorlw	11
  6741   0030D8  6EBA               	movwf	186,c	;volatile
  6742   0030DA  EF96  F018         	goto	l10584
  6743   0030DE                     l10582:
  6744   0030DE  EE20 F002          	lfsr	2,2
  6745   0030E2  5011               	movf	CCP_Compare_Mode_Config@_ccp_obj^0,w,c
  6746   0030E4  26D9               	addwf	fsr2l,f,c
  6747   0030E6  5012               	movf	(CCP_Compare_Mode_Config@_ccp_obj+1)^0,w,c
  6748   0030E8  22DA               	addwfc	fsr2h,f,c
  6749   0030EA  50DF               	movf	indf2,w,c
  6750   0030EC  6E13               	movwf	??_CCP_Compare_Mode_Config^0,c
  6751   0030EE  6A14               	clrf	(??_CCP_Compare_Mode_Config+1)^0,c
  6752                           
  6753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6754                           ; Switch size 1, requested type "simple"
  6755                           ; Number of cases is 1, Range of values is 0 to 0
  6756                           ; switch strategies available:
  6757                           ; Name         Instructions Cycles
  6758                           ; simple_byte            4     3 (average)
  6759                           ;	Chosen strategy is simple_byte
  6760   0030F0  5014               	movf	(??_CCP_Compare_Mode_Config+1)^0,w,c
  6761   0030F2  0A00               	xorlw	0	; case 0
  6762   0030F4  B4D8               	btfsc	status,2,c
  6763   0030F6  EF7F  F018         	goto	l12002
  6764   0030FA  EF18  F018         	goto	l10562
  6765   0030FE                     l12002:
  6766                           
  6767                           ; Switch size 1, requested type "simple"
  6768                           ; Number of cases is 5, Range of values is 2 to 11
  6769                           ; switch strategies available:
  6770                           ; Name         Instructions Cycles
  6771                           ; simple_byte           16     9 (average)
  6772                           ;	Chosen strategy is simple_byte
  6773   0030FE  5013               	movf	??_CCP_Compare_Mode_Config^0,w,c
  6774   003100  0A02               	xorlw	2	; case 2
  6775   003102  B4D8               	btfsc	status,2,c
  6776   003104  EF5D  F018         	goto	l10574
  6777   003108  0A0A               	xorlw	10	; case 8
  6778   00310A  B4D8               	btfsc	status,2,c
  6779   00310C  EF51  F018         	goto	l10570
  6780   003110  0A01               	xorlw	1	; case 9
  6781   003112  B4D8               	btfsc	status,2,c
  6782   003114  EF57  F018         	goto	l10572
  6783   003118  0A03               	xorlw	3	; case 10
  6784   00311A  B4D8               	btfsc	status,2,c
  6785   00311C  EF63  F018         	goto	l10576
  6786   003120  0A01               	xorlw	1	; case 11
  6787   003122  B4D8               	btfsc	status,2,c
  6788   003124  EF69  F018         	goto	l10578
  6789   003128  EF18  F018         	goto	l10562
  6790   00312C                     l10584:
  6791                           
  6792                           ;MCAL_Layer/CCP/hal_ccp.c: 413:     CCP_Mode_Timer_Select(_ccp_obj);
  6793   00312C  C011  F00E         	movff	CCP_Compare_Mode_Config@_ccp_obj,CCP_Mode_Timer_Select@_ccp_obj
  6794   003130  C012  F00F         	movff	CCP_Compare_Mode_Config@_ccp_obj+1,CCP_Mode_Timer_Select@_ccp_obj+1
  6795   003134  ECB7  F021         	call	_CCP_Mode_Timer_Select	;wreg free
  6796   003138                     
  6797                           ;MCAL_Layer/CCP/hal_ccp.c: 415:     return ret;
  6798   003138  5015               	movf	CCP_Compare_Mode_Config@ret^0,w,c
  6799   00313A  0012               	return		;funcret
  6800   00313C                     __end_of_CCP_Compare_Mode_Config:
  6801                           	callstack 0
  6802                           
  6803 ;; *************** function _CCP_Capture_Mode_Config *****************
  6804 ;; Defined at:
  6805 ;;		line 356 in file "MCAL_Layer/CCP/hal_ccp.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  _ccp_obj        2   16[COMRAM] PTR const struct .
  6808 ;;		 -> ccp1_obj(17), 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  ret             1   20[COMRAM] unsigned char 
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  1    wreg      unsigned char 
  6813 ;; Registers used:
  6814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;Total ram usage:        5 bytes
  6825 ;; Hardware stack levels used: 1
  6826 ;; Hardware stack levels required when called: 5
  6827 ;; This function calls:
  6828 ;;		_CCP_Mode_Timer_Select
  6829 ;; This function is called by:
  6830 ;;		_CCP_Init
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834                           	psect	text38
  6835   003280                     __ptext38:
  6836                           	callstack 0
  6837   003280                     _CCP_Capture_Mode_Config:
  6838                           	callstack 23
  6839   003280                     
  6840                           ;MCAL_Layer/CCP/hal_ccp.c: 357:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6841   003280  0E01               	movlw	1
  6842   003282  6E15               	movwf	CCP_Capture_Mode_Config@ret^0,c
  6843   003284                     
  6844                           ;MCAL_Layer/CCP/hal_ccp.c: 359:     if(CCP1_INST == _ccp_obj->ccp_inst){
  6845   003284  C011  FFD9         	movff	CCP_Capture_Mode_Config@_ccp_obj,fsr2l
  6846   003288  C012  FFDA         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,fsr2h
  6847   00328C  50DF               	movf	indf2,w,c
  6848   00328E  A4D8               	btfss	status,2,c
  6849   003290  EF4C  F019         	goto	u10921
  6850   003294  EF4E  F019         	goto	u10920
  6851   003298                     u10921:
  6852   003298  EF8F  F019         	goto	l10516
  6853   00329C                     u10920:
  6854   00329C  EF6C  F019         	goto	l10514
  6855   0032A0                     l10504:
  6856   0032A0  50BD               	movf	189,w,c	;volatile
  6857   0032A2  0BF0               	andlw	-16
  6858   0032A4  0904               	iorlw	4
  6859   0032A6  6EBD               	movwf	189,c	;volatile
  6860   0032A8  EFD8  F019         	goto	l10532
  6861   0032AC                     l10506:
  6862   0032AC  50BD               	movf	189,w,c	;volatile
  6863   0032AE  0BF0               	andlw	-16
  6864   0032B0  0905               	iorlw	5
  6865   0032B2  6EBD               	movwf	189,c	;volatile
  6866   0032B4  EFD8  F019         	goto	l10532
  6867   0032B8                     l10508:
  6868   0032B8  50BD               	movf	189,w,c	;volatile
  6869   0032BA  0BF0               	andlw	-16
  6870   0032BC  0906               	iorlw	6
  6871   0032BE  6EBD               	movwf	189,c	;volatile
  6872   0032C0  EFD8  F019         	goto	l10532
  6873   0032C4                     l10510:
  6874   0032C4  50BD               	movf	189,w,c	;volatile
  6875   0032C6  0BF0               	andlw	-16
  6876   0032C8  0907               	iorlw	7
  6877   0032CA  6EBD               	movwf	189,c	;volatile
  6878   0032CC  EFD8  F019         	goto	l10532
  6879   0032D0                     l10512:
  6880   0032D0  0E00               	movlw	0
  6881   0032D2  6E15               	movwf	CCP_Capture_Mode_Config@ret^0,c
  6882                           
  6883                           ;MCAL_Layer/CCP/hal_ccp.c: 367:         }
  6884   0032D4  EFD8  F019         	goto	l10532
  6885   0032D8                     l10514:
  6886   0032D8  EE20 F002          	lfsr	2,2
  6887   0032DC  5011               	movf	CCP_Capture_Mode_Config@_ccp_obj^0,w,c
  6888   0032DE  26D9               	addwf	fsr2l,f,c
  6889   0032E0  5012               	movf	(CCP_Capture_Mode_Config@_ccp_obj+1)^0,w,c
  6890   0032E2  22DA               	addwfc	fsr2h,f,c
  6891   0032E4  50DF               	movf	indf2,w,c
  6892   0032E6  6E13               	movwf	??_CCP_Capture_Mode_Config^0,c
  6893   0032E8  6A14               	clrf	(??_CCP_Capture_Mode_Config+1)^0,c
  6894                           
  6895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6896                           ; Switch size 1, requested type "simple"
  6897                           ; Number of cases is 1, Range of values is 0 to 0
  6898                           ; switch strategies available:
  6899                           ; Name         Instructions Cycles
  6900                           ; simple_byte            4     3 (average)
  6901                           ;	Chosen strategy is simple_byte
  6902   0032EA  5014               	movf	(??_CCP_Capture_Mode_Config+1)^0,w,c
  6903   0032EC  0A00               	xorlw	0	; case 0
  6904   0032EE  B4D8               	btfsc	status,2,c
  6905   0032F0  EF7C  F019         	goto	l12004
  6906   0032F4  EF68  F019         	goto	l10512
  6907   0032F8                     l12004:
  6908                           
  6909                           ; Switch size 1, requested type "simple"
  6910                           ; Number of cases is 4, Range of values is 4 to 7
  6911                           ; switch strategies available:
  6912                           ; Name         Instructions Cycles
  6913                           ; simple_byte           13     7 (average)
  6914                           ;	Chosen strategy is simple_byte
  6915   0032F8  5013               	movf	??_CCP_Capture_Mode_Config^0,w,c
  6916   0032FA  0A04               	xorlw	4	; case 4
  6917   0032FC  B4D8               	btfsc	status,2,c
  6918   0032FE  EF50  F019         	goto	l10504
  6919   003302  0A01               	xorlw	1	; case 5
  6920   003304  B4D8               	btfsc	status,2,c
  6921   003306  EF56  F019         	goto	l10506
  6922   00330A  0A03               	xorlw	3	; case 6
  6923   00330C  B4D8               	btfsc	status,2,c
  6924   00330E  EF5C  F019         	goto	l10508
  6925   003312  0A01               	xorlw	1	; case 7
  6926   003314  B4D8               	btfsc	status,2,c
  6927   003316  EF62  F019         	goto	l10510
  6928   00331A  EF68  F019         	goto	l10512
  6929   00331E                     l10516:
  6930   00331E  C011  FFD9         	movff	CCP_Capture_Mode_Config@_ccp_obj,fsr2l
  6931   003322  C012  FFDA         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,fsr2h
  6932   003326  04DE               	decf	postinc2,w,c
  6933   003328  A4D8               	btfss	status,2,c
  6934   00332A  EF99  F019         	goto	u10931
  6935   00332E  EF9B  F019         	goto	u10930
  6936   003332                     u10931:
  6937   003332  EFD8  F019         	goto	l10532
  6938   003336                     u10930:
  6939   003336  EFB5  F019         	goto	l10530
  6940   00333A                     l10520:
  6941   00333A  50BA               	movf	186,w,c	;volatile
  6942   00333C  0BF0               	andlw	-16
  6943   00333E  0904               	iorlw	4
  6944   003340  6EBA               	movwf	186,c	;volatile
  6945   003342  EFD8  F019         	goto	l10532
  6946   003346                     l10522:
  6947   003346  50BA               	movf	186,w,c	;volatile
  6948   003348  0BF0               	andlw	-16
  6949   00334A  0905               	iorlw	5
  6950   00334C  6EBA               	movwf	186,c	;volatile
  6951   00334E  EFD8  F019         	goto	l10532
  6952   003352                     l10524:
  6953   003352  50BA               	movf	186,w,c	;volatile
  6954   003354  0BF0               	andlw	-16
  6955   003356  0906               	iorlw	6
  6956   003358  6EBA               	movwf	186,c	;volatile
  6957   00335A  EFD8  F019         	goto	l10532
  6958   00335E                     l10526:
  6959   00335E  50BA               	movf	186,w,c	;volatile
  6960   003360  0BF0               	andlw	-16
  6961   003362  0907               	iorlw	7
  6962   003364  6EBA               	movwf	186,c	;volatile
  6963   003366  EFD8  F019         	goto	l10532
  6964   00336A                     l10530:
  6965   00336A  EE20 F002          	lfsr	2,2
  6966   00336E  5011               	movf	CCP_Capture_Mode_Config@_ccp_obj^0,w,c
  6967   003370  26D9               	addwf	fsr2l,f,c
  6968   003372  5012               	movf	(CCP_Capture_Mode_Config@_ccp_obj+1)^0,w,c
  6969   003374  22DA               	addwfc	fsr2h,f,c
  6970   003376  50DF               	movf	indf2,w,c
  6971   003378  6E13               	movwf	??_CCP_Capture_Mode_Config^0,c
  6972   00337A  6A14               	clrf	(??_CCP_Capture_Mode_Config+1)^0,c
  6973                           
  6974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6975                           ; Switch size 1, requested type "simple"
  6976                           ; Number of cases is 1, Range of values is 0 to 0
  6977                           ; switch strategies available:
  6978                           ; Name         Instructions Cycles
  6979                           ; simple_byte            4     3 (average)
  6980                           ;	Chosen strategy is simple_byte
  6981   00337C  5014               	movf	(??_CCP_Capture_Mode_Config+1)^0,w,c
  6982   00337E  0A00               	xorlw	0	; case 0
  6983   003380  B4D8               	btfsc	status,2,c
  6984   003382  EFC5  F019         	goto	l12006
  6985   003386  EF68  F019         	goto	l10512
  6986   00338A                     l12006:
  6987                           
  6988                           ; Switch size 1, requested type "simple"
  6989                           ; Number of cases is 4, Range of values is 4 to 7
  6990                           ; switch strategies available:
  6991                           ; Name         Instructions Cycles
  6992                           ; simple_byte           13     7 (average)
  6993                           ;	Chosen strategy is simple_byte
  6994   00338A  5013               	movf	??_CCP_Capture_Mode_Config^0,w,c
  6995   00338C  0A04               	xorlw	4	; case 4
  6996   00338E  B4D8               	btfsc	status,2,c
  6997   003390  EF9D  F019         	goto	l10520
  6998   003394  0A01               	xorlw	1	; case 5
  6999   003396  B4D8               	btfsc	status,2,c
  7000   003398  EFA3  F019         	goto	l10522
  7001   00339C  0A03               	xorlw	3	; case 6
  7002   00339E  B4D8               	btfsc	status,2,c
  7003   0033A0  EFA9  F019         	goto	l10524
  7004   0033A4  0A01               	xorlw	1	; case 7
  7005   0033A6  B4D8               	btfsc	status,2,c
  7006   0033A8  EFAF  F019         	goto	l10526
  7007   0033AC  EF68  F019         	goto	l10512
  7008   0033B0                     l10532:
  7009                           
  7010                           ;MCAL_Layer/CCP/hal_ccp.c: 381:     CCP_Mode_Timer_Select(_ccp_obj);
  7011   0033B0  C011  F00E         	movff	CCP_Capture_Mode_Config@_ccp_obj,CCP_Mode_Timer_Select@_ccp_obj
  7012   0033B4  C012  F00F         	movff	CCP_Capture_Mode_Config@_ccp_obj+1,CCP_Mode_Timer_Select@_ccp_obj+1
  7013   0033B8  ECB7  F021         	call	_CCP_Mode_Timer_Select	;wreg free
  7014   0033BC                     
  7015                           ;MCAL_Layer/CCP/hal_ccp.c: 383:     return ret;
  7016   0033BC  5015               	movf	CCP_Capture_Mode_Config@ret^0,w,c
  7017   0033BE  0012               	return		;funcret
  7018   0033C0                     __end_of_CCP_Capture_Mode_Config:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function _CCP_Mode_Timer_Select *****************
  7022 ;; Defined at:
  7023 ;;		line 336 in file "MCAL_Layer/CCP/hal_ccp.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  _ccp_obj        2   13[COMRAM] PTR const struct .
  7026 ;;		 -> ccp1_obj(17), 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      void 
  7031 ;; Registers used:
  7032 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7042 ;;Total ram usage:        3 bytes
  7043 ;; Hardware stack levels used: 1
  7044 ;; Hardware stack levels required when called: 4
  7045 ;; This function calls:
  7046 ;;		Nothing
  7047 ;; This function is called by:
  7048 ;;		_CCP_Capture_Mode_Config
  7049 ;;		_CCP_Compare_Mode_Config
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           	psect	text39
  7054   00436E                     __ptext39:
  7055                           	callstack 0
  7056   00436E                     _CCP_Mode_Timer_Select:
  7057                           	callstack 23
  7058   00436E                     
  7059                           ;MCAL_Layer/CCP/hal_ccp.c: 337:     if(CCP1_CCP2_TIMER3 == _ccp_obj->ccp_capture_timer){
  7060   00436E  EE20 F004          	lfsr	2,4
  7061   004372  500E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  7062   004374  26D9               	addwf	fsr2l,f,c
  7063   004376  500F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  7064   004378  22DA               	addwfc	fsr2h,f,c
  7065   00437A  50DF               	movf	indf2,w,c
  7066   00437C  A4D8               	btfss	status,2,c
  7067   00437E  EFC3  F021         	goto	u9811
  7068   004382  EFC5  F021         	goto	u9810
  7069   004386                     u9811:
  7070   004386  EFC9  F021         	goto	l9796
  7071   00438A                     u9810:
  7072   00438A                     
  7073                           ;MCAL_Layer/CCP/hal_ccp.c: 339:         T3CONbits.T3CCP1 = 0;
  7074   00438A  96B1               	bcf	177,3,c	;volatile
  7075                           
  7076                           ;MCAL_Layer/CCP/hal_ccp.c: 340:         T3CONbits.T3CCP2 = 1;
  7077   00438C  8CB1               	bsf	177,6,c	;volatile
  7078                           
  7079                           ;MCAL_Layer/CCP/hal_ccp.c: 341:     }
  7080   00438E  EFEE  F021         	goto	l601
  7081   004392                     l9796:
  7082   004392  EE20 F004          	lfsr	2,4
  7083   004396  500E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  7084   004398  26D9               	addwf	fsr2l,f,c
  7085   00439A  500F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  7086   00439C  22DA               	addwfc	fsr2h,f,c
  7087   00439E  04DE               	decf	postinc2,w,c
  7088   0043A0  A4D8               	btfss	status,2,c
  7089   0043A2  EFD5  F021         	goto	u9821
  7090   0043A6  EFD7  F021         	goto	u9820
  7091   0043AA                     u9821:
  7092   0043AA  EFDB  F021         	goto	l9800
  7093   0043AE                     u9820:
  7094   0043AE                     
  7095                           ;MCAL_Layer/CCP/hal_ccp.c: 345:         T3CONbits.T3CCP1 = 1;
  7096   0043AE  86B1               	bsf	177,3,c	;volatile
  7097                           
  7098                           ;MCAL_Layer/CCP/hal_ccp.c: 346:         T3CONbits.T3CCP2 = 0;
  7099   0043B0  9CB1               	bcf	177,6,c	;volatile
  7100                           
  7101                           ;MCAL_Layer/CCP/hal_ccp.c: 347:     }
  7102   0043B2  EFEE  F021         	goto	l601
  7103   0043B6                     l9800:
  7104   0043B6  EE20 F004          	lfsr	2,4
  7105   0043BA  500E               	movf	CCP_Mode_Timer_Select@_ccp_obj^0,w,c
  7106   0043BC  26D9               	addwf	fsr2l,f,c
  7107   0043BE  500F               	movf	(CCP_Mode_Timer_Select@_ccp_obj+1)^0,w,c
  7108   0043C0  22DA               	addwfc	fsr2h,f,c
  7109   0043C2  0E02               	movlw	2
  7110   0043C4  18DE               	xorwf	postinc2,w,c
  7111   0043C6  A4D8               	btfss	status,2,c
  7112   0043C8  EFE8  F021         	goto	u9831
  7113   0043CC  EFEA  F021         	goto	u9830
  7114   0043D0                     u9831:
  7115   0043D0  EFEE  F021         	goto	l598
  7116   0043D4                     u9830:
  7117   0043D4                     
  7118                           ;MCAL_Layer/CCP/hal_ccp.c: 350:         T3CONbits.T3CCP1 = 0;
  7119   0043D4  96B1               	bcf	177,3,c	;volatile
  7120                           
  7121                           ;MCAL_Layer/CCP/hal_ccp.c: 351:         T3CONbits.T3CCP2 = 0;
  7122   0043D6  9CB1               	bcf	177,6,c	;volatile
  7123                           
  7124                           ;MCAL_Layer/CCP/hal_ccp.c: 352:     }
  7125   0043D8  EFEE  F021         	goto	l601
  7126   0043DC                     l598:
  7127   0043DC                     l601:
  7128   0043DC  0012               	return		;funcret
  7129   0043DE                     __end_of_CCP_Mode_Timer_Select:
  7130                           	callstack 0
  7131                           
  7132 ;; *************** function _ADC_Init *****************
  7133 ;; Defined at:
  7134 ;;		line 29 in file "MCAL_Layer/ADC/hal_adc.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  _adc            2   16[COMRAM] PTR const struct .
  7137 ;;		 -> adc_a0(7), 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  ret             1   19[COMRAM] unsigned char 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  1    wreg      unsigned char 
  7142 ;; Registers used:
  7143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;Total ram usage:        4 bytes
  7154 ;; Hardware stack levels used: 1
  7155 ;; Hardware stack levels required when called: 5
  7156 ;; This function calls:
  7157 ;;		_adc_input_channel_port_configure
  7158 ;;		_configure_voltage_reference
  7159 ;;		_select_result_format
  7160 ;; This function is called by:
  7161 ;;		_application_initialize
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text40
  7166   003D7C                     __ptext40:
  7167                           	callstack 0
  7168   003D7C                     _ADC_Init:
  7169                           	callstack 24
  7170   003D7C                     
  7171                           ;MCAL_Layer/ADC/hal_adc.c: 31:     if(((void*)0) == _adc){
  7172   003D7C  5011               	movf	ADC_Init@_adc^0,w,c
  7173   003D7E  1012               	iorwf	(ADC_Init@_adc+1)^0,w,c
  7174   003D80  A4D8               	btfss	status,2,c
  7175   003D82  EFC5  F01E         	goto	u11101
  7176   003D86  EFC7  F01E         	goto	u11100
  7177   003D8A                     u11101:
  7178   003D8A  EFCB  F01E         	goto	l388
  7179   003D8E                     u11100:
  7180   003D8E                     
  7181                           ;MCAL_Layer/ADC/hal_adc.c: 32:         ret = (Std_ReturnType)0x00;
  7182   003D8E  0E00               	movlw	0
  7183   003D90  6E14               	movwf	ADC_Init@ret^0,c
  7184                           
  7185                           ;MCAL_Layer/ADC/hal_adc.c: 33:     }
  7186   003D92  EF1C  F01F         	goto	l10788
  7187   003D96                     l388:
  7188                           
  7189                           ;MCAL_Layer/ADC/hal_adc.c: 36:         (ADCON0bits.ADON = 0);
  7190   003D96  90C2               	bcf	194,0,c	;volatile
  7191   003D98                     
  7192                           ;MCAL_Layer/ADC/hal_adc.c: 38:         ADCON2bits.ACQT = _adc->acquisition_time;
  7193   003D98  EE20 F003          	lfsr	2,3
  7194   003D9C  5011               	movf	ADC_Init@_adc^0,w,c
  7195   003D9E  26D9               	addwf	fsr2l,f,c
  7196   003DA0  5012               	movf	(ADC_Init@_adc+1)^0,w,c
  7197   003DA2  22DA               	addwfc	fsr2h,f,c
  7198   003DA4  50DF               	movf	indf2,w,c
  7199   003DA6  6E13               	movwf	??_ADC_Init^0,c
  7200   003DA8  4613               	rlncf	??_ADC_Init^0,f,c
  7201   003DAA  4613               	rlncf	??_ADC_Init^0,f,c
  7202   003DAC  4613               	rlncf	??_ADC_Init^0,f,c
  7203   003DAE  50C0               	movf	192,w,c	;volatile
  7204   003DB0  1813               	xorwf	??_ADC_Init^0,w,c
  7205   003DB2  0BC7               	andlw	-57
  7206   003DB4  1813               	xorwf	??_ADC_Init^0,w,c
  7207   003DB6  6EC0               	movwf	192,c	;volatile
  7208                           
  7209                           ;MCAL_Layer/ADC/hal_adc.c: 40:         ADCON2bits.ADCS = _adc->conversion_clock;
  7210   003DB8  EE20 F004          	lfsr	2,4
  7211   003DBC  5011               	movf	ADC_Init@_adc^0,w,c
  7212   003DBE  26D9               	addwf	fsr2l,f,c
  7213   003DC0  5012               	movf	(ADC_Init@_adc+1)^0,w,c
  7214   003DC2  22DA               	addwfc	fsr2h,f,c
  7215   003DC4  50DF               	movf	indf2,w,c
  7216   003DC6  6E13               	movwf	??_ADC_Init^0,c
  7217   003DC8  50C0               	movf	192,w,c	;volatile
  7218   003DCA  1813               	xorwf	??_ADC_Init^0,w,c
  7219   003DCC  0BF8               	andlw	-8
  7220   003DCE  1813               	xorwf	??_ADC_Init^0,w,c
  7221   003DD0  6EC0               	movwf	192,c	;volatile
  7222                           
  7223                           ;MCAL_Layer/ADC/hal_adc.c: 42:         ADCON0bits.CHS = _adc->adc_channel;
  7224   003DD2  EE20 F005          	lfsr	2,5
  7225   003DD6  5011               	movf	ADC_Init@_adc^0,w,c
  7226   003DD8  26D9               	addwf	fsr2l,f,c
  7227   003DDA  5012               	movf	(ADC_Init@_adc+1)^0,w,c
  7228   003DDC  22DA               	addwfc	fsr2h,f,c
  7229   003DDE  50DF               	movf	indf2,w,c
  7230   003DE0  6E13               	movwf	??_ADC_Init^0,c
  7231   003DE2  4613               	rlncf	??_ADC_Init^0,f,c
  7232   003DE4  4613               	rlncf	??_ADC_Init^0,f,c
  7233   003DE6  50C2               	movf	194,w,c	;volatile
  7234   003DE8  1813               	xorwf	??_ADC_Init^0,w,c
  7235   003DEA  0BC3               	andlw	-61
  7236   003DEC  1813               	xorwf	??_ADC_Init^0,w,c
  7237   003DEE  6EC2               	movwf	194,c	;volatile
  7238   003DF0                     
  7239                           ;MCAL_Layer/ADC/hal_adc.c: 43:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
  7240   003DF0  EE20 F005          	lfsr	2,5
  7241   003DF4  5011               	movf	ADC_Init@_adc^0,w,c
  7242   003DF6  26D9               	addwf	fsr2l,f,c
  7243   003DF8  5012               	movf	(ADC_Init@_adc+1)^0,w,c
  7244   003DFA  22DA               	addwfc	fsr2h,f,c
  7245   003DFC  50DF               	movf	indf2,w,c
  7246   003DFE  EC29  F01D         	call	_adc_input_channel_port_configure
  7247   003E02                     
  7248                           ;MCAL_Layer/ADC/hal_adc.c: 46:         (INTCONbits.GIE = 1);
  7249   003E02  8EF2               	bsf	242,7,c	;volatile
  7250   003E04                     
  7251                           ;MCAL_Layer/ADC/hal_adc.c: 47:         (INTCONbits.PEIE = 1);
  7252   003E04  8CF2               	bsf	242,6,c	;volatile
  7253   003E06                     
  7254                           ;MCAL_Layer/ADC/hal_adc.c: 48:         (PIE1bits.ADIE = 1);
  7255   003E06  8C9D               	bsf	157,6,c	;volatile
  7256   003E08                     
  7257                           ;MCAL_Layer/ADC/hal_adc.c: 49:         (PIR1bits.ADIF = 0);
  7258   003E08  9C9E               	bcf	158,6,c	;volatile
  7259   003E0A                     
  7260                           ;MCAL_Layer/ADC/hal_adc.c: 61:         ADC_InterruptHandler = _adc->ADC_InterruptHandler
      +                          ;
  7261   003E0A  C011  FFD9         	movff	ADC_Init@_adc,fsr2l
  7262   003E0E  C012  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  7263   003E12  CFDE F0BE          	movff	postinc2,_ADC_InterruptHandler
  7264   003E16  CFDD F0BF          	movff	postdec2,_ADC_InterruptHandler+1
  7265   003E1A                     
  7266                           ;MCAL_Layer/ADC/hal_adc.c: 64:         select_result_format(_adc);
  7267   003E1A  C011  F00E         	movff	ADC_Init@_adc,select_result_format@_adc
  7268   003E1E  C012  F00F         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
  7269   003E22  ECB0  F023         	call	_select_result_format	;wreg free
  7270   003E26                     
  7271                           ;MCAL_Layer/ADC/hal_adc.c: 66:         configure_voltage_reference(_adc);
  7272   003E26  C011  F00E         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  7273   003E2A  C012  F00F         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
  7274   003E2E  ECDA  F022         	call	_configure_voltage_reference	;wreg free
  7275   003E32                     
  7276                           ;MCAL_Layer/ADC/hal_adc.c: 68:         (ADCON0bits.ADON = 1);
  7277   003E32  80C2               	bsf	194,0,c	;volatile
  7278   003E34                     
  7279                           ;MCAL_Layer/ADC/hal_adc.c: 69:         ret = (Std_ReturnType)0x01;
  7280   003E34  0E01               	movlw	1
  7281   003E36  6E14               	movwf	ADC_Init@ret^0,c
  7282   003E38                     l10788:
  7283                           
  7284                           ;MCAL_Layer/ADC/hal_adc.c: 71:     return ret;
  7285   003E38  5014               	movf	ADC_Init@ret^0,w,c
  7286   003E3A  0012               	return		;funcret
  7287   003E3C                     __end_of_ADC_Init:
  7288                           	callstack 0
  7289                           
  7290 ;; *************** function _select_result_format *****************
  7291 ;; Defined at:
  7292 ;;		line 272 in file "MCAL_Layer/ADC/hal_adc.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  _adc            2   13[COMRAM] PTR const struct .
  7295 ;;		 -> adc_a0(7), 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7311 ;;Total ram usage:        2 bytes
  7312 ;; Hardware stack levels used: 1
  7313 ;; Hardware stack levels required when called: 4
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_ADC_Init
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text41
  7322   004760                     __ptext41:
  7323                           	callstack 0
  7324   004760                     _select_result_format:
  7325                           	callstack 24
  7326   004760                     
  7327                           ;MCAL_Layer/ADC/hal_adc.c: 273:     if(0x01U == _adc->result_format){
  7328   004760  EE20 F006          	lfsr	2,6
  7329   004764  500E               	movf	select_result_format@_adc^0,w,c
  7330   004766  26D9               	addwf	fsr2l,f,c
  7331   004768  500F               	movf	(select_result_format@_adc+1)^0,w,c
  7332   00476A  22DA               	addwfc	fsr2h,f,c
  7333   00476C  A2DF               	btfss	indf2,1,c
  7334   00476E  EFBB  F023         	goto	u10881
  7335   004772  EFBD  F023         	goto	u10880
  7336   004776                     u10881:
  7337   004776  EFC0  F023         	goto	l10490
  7338   00477A                     u10880:
  7339   00477A                     
  7340                           ;MCAL_Layer/ADC/hal_adc.c: 274:         (ADCON2bits.ADFM = 1);
  7341   00477A  8EC0               	bsf	192,7,c	;volatile
  7342                           
  7343                           ;MCAL_Layer/ADC/hal_adc.c: 275:     }
  7344   00477C  EFD1  F023         	goto	l464
  7345   004780                     l10490:
  7346   004780  EE20 F006          	lfsr	2,6
  7347   004784  500E               	movf	select_result_format@_adc^0,w,c
  7348   004786  26D9               	addwf	fsr2l,f,c
  7349   004788  500F               	movf	(select_result_format@_adc+1)^0,w,c
  7350   00478A  22DA               	addwfc	fsr2h,f,c
  7351   00478C  B2DF               	btfsc	indf2,1,c
  7352   00478E  EFCB  F023         	goto	u10891
  7353   004792  EFCD  F023         	goto	u10890
  7354   004796                     u10891:
  7355   004796  EFD0  F023         	goto	l462
  7356   00479A                     u10890:
  7357   00479A                     
  7358                           ;MCAL_Layer/ADC/hal_adc.c: 277:         (ADCON2bits.ADFM = 0);
  7359   00479A  9EC0               	bcf	192,7,c	;volatile
  7360                           
  7361                           ;MCAL_Layer/ADC/hal_adc.c: 278:     }
  7362   00479C  EFD1  F023         	goto	l464
  7363   0047A0                     l462:
  7364                           
  7365                           ;MCAL_Layer/ADC/hal_adc.c: 280:         (ADCON2bits.ADFM = 1);
  7366   0047A0  8EC0               	bsf	192,7,c	;volatile
  7367   0047A2                     l464:
  7368   0047A2  0012               	return		;funcret
  7369   0047A4                     __end_of_select_result_format:
  7370                           	callstack 0
  7371                           
  7372 ;; *************** function _configure_voltage_reference *****************
  7373 ;; Defined at:
  7374 ;;		line 284 in file "MCAL_Layer/ADC/hal_adc.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  _adc            2   13[COMRAM] PTR const struct .
  7377 ;;		 -> adc_a0(7), 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7393 ;;Total ram usage:        2 bytes
  7394 ;; Hardware stack levels used: 1
  7395 ;; Hardware stack levels required when called: 4
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_ADC_Init
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text42
  7404   0045B4                     __ptext42:
  7405                           	callstack 0
  7406   0045B4                     _configure_voltage_reference:
  7407                           	callstack 24
  7408   0045B4                     
  7409                           ;MCAL_Layer/ADC/hal_adc.c: 285:     if(0x01U == _adc->voltage_reference){
  7410   0045B4  EE20 F006          	lfsr	2,6
  7411   0045B8  500E               	movf	configure_voltage_reference@_adc^0,w,c
  7412   0045BA  26D9               	addwf	fsr2l,f,c
  7413   0045BC  500F               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  7414   0045BE  22DA               	addwfc	fsr2h,f,c
  7415   0045C0  A0DF               	btfss	indf2,0,c
  7416   0045C2  EFE5  F022         	goto	u10901
  7417   0045C6  EFE7  F022         	goto	u10900
  7418   0045CA                     u10901:
  7419   0045CA  EFEB  F022         	goto	l10496
  7420   0045CE                     u10900:
  7421   0045CE  8AC1               	bsf	193,5,c	;volatile
  7422   0045D0  88C1               	bsf	193,4,c	;volatile
  7423   0045D2  EFFE  F022         	goto	l477
  7424   0045D6                     l10496:
  7425   0045D6  EE20 F006          	lfsr	2,6
  7426   0045DA  500E               	movf	configure_voltage_reference@_adc^0,w,c
  7427   0045DC  26D9               	addwf	fsr2l,f,c
  7428   0045DE  500F               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  7429   0045E0  22DA               	addwfc	fsr2h,f,c
  7430   0045E2  B0DF               	btfsc	indf2,0,c
  7431   0045E4  EFF6  F022         	goto	u10911
  7432   0045E8  EFF8  F022         	goto	u10910
  7433   0045EC                     u10911:
  7434   0045EC  EFFC  F022         	goto	l475
  7435   0045F0                     u10910:
  7436   0045F0  9AC1               	bcf	193,5,c	;volatile
  7437   0045F2  98C1               	bcf	193,4,c	;volatile
  7438   0045F4  EFFE  F022         	goto	l477
  7439   0045F8                     l475:
  7440   0045F8  9AC1               	bcf	193,5,c	;volatile
  7441   0045FA  98C1               	bcf	193,4,c	;volatile
  7442   0045FC                     l477:
  7443   0045FC  0012               	return		;funcret
  7444   0045FE                     __end_of_configure_voltage_reference:
  7445                           	callstack 0
  7446                           
  7447 ;; *************** function _CCP_PWM_Start *****************
  7448 ;; Defined at:
  7449 ;;		line 205 in file "MCAL_Layer/CCP/hal_ccp.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  _ccp_obj        2   13[COMRAM] PTR const struct .
  7452 ;;		 -> ccp1_obj(17), 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  ret             1   16[COMRAM] unsigned char 
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1    wreg      unsigned char 
  7457 ;; Registers used:
  7458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;Total ram usage:        4 bytes
  7469 ;; Hardware stack levels used: 1
  7470 ;; Hardware stack levels required when called: 4
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		_main
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text43
  7479   0044B2                     __ptext43:
  7480                           	callstack 0
  7481   0044B2                     _CCP_PWM_Start:
  7482                           	callstack 26
  7483   0044B2                     
  7484                           ;MCAL_Layer/CCP/hal_ccp.c: 208:     if(((void*)0) == _ccp_obj){
  7485   0044B2  500E               	movf	CCP_PWM_Start@_ccp_obj^0,w,c
  7486   0044B4  100F               	iorwf	(CCP_PWM_Start@_ccp_obj+1)^0,w,c
  7487   0044B6  A4D8               	btfss	status,2,c
  7488   0044B8  EF60  F022         	goto	u11461
  7489   0044BC  EF62  F022         	goto	u11460
  7490   0044C0                     u11461:
  7491   0044C0  EF66  F022         	goto	l11090
  7492   0044C4                     u11460:
  7493   0044C4                     
  7494                           ;MCAL_Layer/CCP/hal_ccp.c: 209:         ret = (Std_ReturnType)0x00;
  7495   0044C4  0E00               	movlw	0
  7496   0044C6  6E11               	movwf	CCP_PWM_Start@ret^0,c
  7497                           
  7498                           ;MCAL_Layer/CCP/hal_ccp.c: 210:     }
  7499   0044C8  EF8A  F022         	goto	l554
  7500   0044CC                     l11090:
  7501                           
  7502                           ;MCAL_Layer/CCP/hal_ccp.c: 212:         if(CCP1_INST == _ccp_obj->ccp_inst){
  7503   0044CC  C00E  FFD9         	movff	CCP_PWM_Start@_ccp_obj,fsr2l
  7504   0044D0  C00F  FFDA         	movff	CCP_PWM_Start@_ccp_obj+1,fsr2h
  7505   0044D4  50DF               	movf	indf2,w,c
  7506   0044D6  A4D8               	btfss	status,2,c
  7507   0044D8  EF70  F022         	goto	u11471
  7508   0044DC  EF72  F022         	goto	u11470
  7509   0044E0                     u11471:
  7510   0044E0  EF78  F022         	goto	l11094
  7511   0044E4                     u11470:
  7512   0044E4                     
  7513                           ;MCAL_Layer/CCP/hal_ccp.c: 213:             CCP1CONbits.CCP1M = ((uint8)0x0C);
  7514   0044E4  50BD               	movf	189,w,c	;volatile
  7515   0044E6  0BF0               	andlw	-16
  7516   0044E8  090C               	iorlw	12
  7517   0044EA  6EBD               	movwf	189,c	;volatile
  7518                           
  7519                           ;MCAL_Layer/CCP/hal_ccp.c: 214:         }
  7520   0044EC  EF88  F022         	goto	l11098
  7521   0044F0                     l11094:
  7522   0044F0  C00E  FFD9         	movff	CCP_PWM_Start@_ccp_obj,fsr2l
  7523   0044F4  C00F  FFDA         	movff	CCP_PWM_Start@_ccp_obj+1,fsr2h
  7524   0044F8  04DE               	decf	postinc2,w,c
  7525   0044FA  A4D8               	btfss	status,2,c
  7526   0044FC  EF82  F022         	goto	u11481
  7527   004500  EF84  F022         	goto	u11480
  7528   004504                     u11481:
  7529   004504  EF88  F022         	goto	l11098
  7530   004508                     u11480:
  7531   004508                     
  7532                           ;MCAL_Layer/CCP/hal_ccp.c: 216:             CCP2CONbits.CCP2M = ((uint8)0x0C);
  7533   004508  50BA               	movf	186,w,c	;volatile
  7534   00450A  0BF0               	andlw	-16
  7535   00450C  090C               	iorlw	12
  7536   00450E  6EBA               	movwf	186,c	;volatile
  7537   004510                     l11098:
  7538                           
  7539                           ;MCAL_Layer/CCP/hal_ccp.c: 219:         ret = (Std_ReturnType)0x01;
  7540   004510  0E01               	movlw	1
  7541   004512  6E11               	movwf	CCP_PWM_Start@ret^0,c
  7542   004514                     l554:
  7543                           
  7544                           ;MCAL_Layer/CCP/hal_ccp.c: 222:     return ret;
  7545   004514  5011               	movf	CCP_PWM_Start@ret^0,w,c
  7546   004516  0012               	return		;funcret
  7547   004518                     __end_of_CCP_PWM_Start:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function _CCP_PWM_Set_Duty *****************
  7551 ;; Defined at:
  7552 ;;		line 177 in file "MCAL_Layer/CCP/hal_ccp.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  _ccp_obj        2   38[BANK0 ] PTR const struct .
  7555 ;;		 -> ccp1_obj(17), 
  7556 ;;  _duty           1   40[BANK0 ] const unsigned char 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  l_duty_temp     2    5[BANK1 ] unsigned short 
  7559 ;;  ret             1    4[BANK1 ] unsigned char 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      unsigned char 
  7562 ;; Registers used:
  7563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7569 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Totals:         0       5       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;Total ram usage:       12 bytes
  7574 ;; Hardware stack levels used: 1
  7575 ;; Hardware stack levels required when called: 5
  7576 ;; This function calls:
  7577 ;;		___fladd
  7578 ;;		___fldiv
  7579 ;;		___flmul
  7580 ;;		___fltol
  7581 ;;		___xxtofl
  7582 ;; This function is called by:
  7583 ;;		_main
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text44
  7588   002B28                     __ptext44:
  7589                           	callstack 0
  7590   002B28                     _CCP_PWM_Set_Duty:
  7591                           	callstack 25
  7592   002B28                     
  7593                           ;MCAL_Layer/CCP/hal_ccp.c: 179:     uint16 l_duty_temp = 0;
  7594   002B28  0E00               	movlw	0
  7595   002B2A  0101               	movlb	1	; () banked
  7596   002B2C  6F81               	movwf	(CCP_PWM_Set_Duty@l_duty_temp+1)& (0+255),b
  7597   002B2E  0E00               	movlw	0
  7598   002B30  6F80               	movwf	CCP_PWM_Set_Duty@l_duty_temp& (0+255),b
  7599   002B32                     
  7600                           ; BSR set to: 1
  7601                           ;MCAL_Layer/CCP/hal_ccp.c: 181:     if(((void*)0) == _ccp_obj){
  7602   002B32  0100               	movlb	0	; () banked
  7603   002B34  51EA               	movf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),w,b
  7604   002B36  11EB               	iorwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),w,b
  7605   002B38  A4D8               	btfss	status,2,c
  7606   002B3A  EFA1  F015         	goto	u11431
  7607   002B3E  EFA3  F015         	goto	u11430
  7608   002B42                     u11431:
  7609   002B42  EFA8  F015         	goto	l11070
  7610   002B46                     u11430:
  7611   002B46                     
  7612                           ; BSR set to: 0
  7613                           ;MCAL_Layer/CCP/hal_ccp.c: 182:         ret = (Std_ReturnType)0x00;
  7614   002B46  0E00               	movlw	0
  7615   002B48  0101               	movlb	1	; () banked
  7616   002B4A  6F7F               	movwf	CCP_PWM_Set_Duty@ret& (0+255),b
  7617                           
  7618                           ;MCAL_Layer/CCP/hal_ccp.c: 183:     }
  7619   002B4C  EF62  F016         	goto	l545
  7620   002B50                     l11070:
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;MCAL_Layer/CCP/hal_ccp.c: 187:         l_duty_temp = (uint16)((float)4 * ((float)PR2 + 
      +                          1.0) * ((float)_duty / 100.0));
  7624   002B50  0E00               	movlw	0
  7625   002B52  6E20               	movwf	___flmul@a^0,c
  7626   002B54  0E00               	movlw	0
  7627   002B56  6E21               	movwf	(___flmul@a+1)^0,c
  7628   002B58  0E80               	movlw	128
  7629   002B5A  6E22               	movwf	(___flmul@a+2)^0,c
  7630   002B5C  0E40               	movlw	64
  7631   002B5E  6E23               	movwf	(___flmul@a+3)^0,c
  7632   002B60  0E00               	movlw	0
  7633   002B62  6E52               	movwf	___fladd@a^0,c
  7634   002B64  0E00               	movlw	0
  7635   002B66  6E53               	movwf	(___fladd@a+1)^0,c
  7636   002B68  0E80               	movlw	128
  7637   002B6A  6E54               	movwf	(___fladd@a+2)^0,c
  7638   002B6C  0E3F               	movlw	63
  7639   002B6E  6E55               	movwf	(___fladd@a+3)^0,c
  7640   002B70  50CB               	movf	203,w,c	;volatile
  7641   002B72  6E0E               	movwf	___xxtofl@val^0,c
  7642   002B74  6A0F               	clrf	(___xxtofl@val+1)^0,c
  7643   002B76  6A10               	clrf	(___xxtofl@val+2)^0,c
  7644   002B78  6A11               	clrf	(___xxtofl@val+3)^0,c
  7645   002B7A  0E00               	movlw	0
  7646   002B7C  ECBA  F014         	call	___xxtofl
  7647   002B80  C00E  F04E         	movff	?___xxtofl,___fladd@b
  7648   002B84  C00F  F04F         	movff	?___xxtofl+1,___fladd@b+1
  7649   002B88  C010  F050         	movff	?___xxtofl+2,___fladd@b+2
  7650   002B8C  C011  F051         	movff	?___xxtofl+3,___fladd@b+3
  7651   002B90  EC1E  F008         	call	___fladd	;wreg free
  7652   002B94  C04E  F01C         	movff	?___fladd,___flmul@b
  7653   002B98  C04F  F01D         	movff	?___fladd+1,___flmul@b+1
  7654   002B9C  C050  F01E         	movff	?___fladd+2,___flmul@b+2
  7655   002BA0  C051  F01F         	movff	?___fladd+3,___flmul@b+3
  7656   002BA4  ECB2  F00C         	call	___flmul	;wreg free
  7657   002BA8  C01C  F17B         	movff	?___flmul,_CCP_PWM_Set_Duty$5736
  7658   002BAC  C01D  F17C         	movff	?___flmul+1,_CCP_PWM_Set_Duty$5736+1
  7659   002BB0  C01E  F17D         	movff	?___flmul+2,_CCP_PWM_Set_Duty$5736+2
  7660   002BB4  C01F  F17E         	movff	?___flmul+3,_CCP_PWM_Set_Duty$5736+3
  7661                           
  7662                           ;MCAL_Layer/CCP/hal_ccp.c: 187:         l_duty_temp = (uint16)((float)4 * ((float)PR2 + 
      +                          1.0) * ((float)_duty / 100.0));
  7663   002BB8  0E00               	movlw	0
  7664   002BBA  6E39               	movwf	___fldiv@a^0,c
  7665   002BBC  0E00               	movlw	0
  7666   002BBE  6E3A               	movwf	(___fldiv@a+1)^0,c
  7667   002BC0  0EC8               	movlw	200
  7668   002BC2  6E3B               	movwf	(___fldiv@a+2)^0,c
  7669   002BC4  0E42               	movlw	66
  7670   002BC6  6E3C               	movwf	(___fldiv@a+3)^0,c
  7671   002BC8  0100               	movlb	0	; () banked
  7672   002BCA  51EC               	movf	CCP_PWM_Set_Duty@_duty& (0+255),w,b
  7673   002BCC  6E0E               	movwf	___xxtofl@val^0,c
  7674   002BCE  6A0F               	clrf	(___xxtofl@val+1)^0,c
  7675   002BD0  6A10               	clrf	(___xxtofl@val+2)^0,c
  7676   002BD2  6A11               	clrf	(___xxtofl@val+3)^0,c
  7677   002BD4  0E00               	movlw	0
  7678   002BD6  ECBA  F014         	call	___xxtofl
  7679   002BDA  C00E  F035         	movff	?___xxtofl,___fldiv@b
  7680   002BDE  C00F  F036         	movff	?___xxtofl+1,___fldiv@b+1
  7681   002BE2  C010  F037         	movff	?___xxtofl+2,___fldiv@b+2
  7682   002BE6  C011  F038         	movff	?___xxtofl+3,___fldiv@b+3
  7683   002BEA  ECA1  F010         	call	___fldiv	;wreg free
  7684   002BEE  C035  F020         	movff	?___fldiv,___flmul@a
  7685   002BF2  C036  F021         	movff	?___fldiv+1,___flmul@a+1
  7686   002BF6  C037  F022         	movff	?___fldiv+2,___flmul@a+2
  7687   002BFA  C038  F023         	movff	?___fldiv+3,___flmul@a+3
  7688   002BFE  C17B  F01C         	movff	_CCP_PWM_Set_Duty$5736,___flmul@b
  7689   002C02  C17C  F01D         	movff	_CCP_PWM_Set_Duty$5736+1,___flmul@b+1
  7690   002C06  C17D  F01E         	movff	_CCP_PWM_Set_Duty$5736+2,___flmul@b+2
  7691   002C0A  C17E  F01F         	movff	_CCP_PWM_Set_Duty$5736+3,___flmul@b+3
  7692   002C0E  ECB2  F00C         	call	___flmul	;wreg free
  7693   002C12  C01C  F0E2         	movff	?___flmul,___fltol@f1
  7694   002C16  C01D  F0E3         	movff	?___flmul+1,___fltol@f1+1
  7695   002C1A  C01E  F0E4         	movff	?___flmul+2,___fltol@f1+2
  7696   002C1E  C01F  F0E5         	movff	?___flmul+3,___fltol@f1+3
  7697   002C22  ECA0  F01B         	call	___fltol	;wreg free
  7698   002C26  C0E2  F180         	movff	?___fltol,CCP_PWM_Set_Duty@l_duty_temp
  7699   002C2A  C0E3  F181         	movff	?___fltol+1,CCP_PWM_Set_Duty@l_duty_temp+1
  7700   002C2E                     
  7701                           ;MCAL_Layer/CCP/hal_ccp.c: 189:         if(CCP1_INST == _ccp_obj->ccp_inst){
  7702   002C2E  C0EA  FFD9         	movff	CCP_PWM_Set_Duty@_ccp_obj,fsr2l
  7703   002C32  C0EB  FFDA         	movff	CCP_PWM_Set_Duty@_ccp_obj+1,fsr2h
  7704   002C36  50DF               	movf	indf2,w,c
  7705   002C38  A4D8               	btfss	status,2,c
  7706   002C3A  EF21  F016         	goto	u11441
  7707   002C3E  EF23  F016         	goto	u11440
  7708   002C42                     u11441:
  7709   002C42  EF3C  F016         	goto	l11076
  7710   002C46                     u11440:
  7711   002C46                     
  7712                           ;MCAL_Layer/CCP/hal_ccp.c: 190:             CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0
      +                          003);
  7713   002C46  C180  F0ED         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  7714   002C4A  0E03               	movlw	3
  7715   002C4C  0100               	movlb	0	; () banked
  7716   002C4E  17ED               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7717   002C50  3BED               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7718   002C52  50BD               	movf	189,w,c	;volatile
  7719   002C54  19ED               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7720   002C56  0BCF               	andlw	-49
  7721   002C58  19ED               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7722   002C5A  6EBD               	movwf	189,c	;volatile
  7723                           
  7724                           ;MCAL_Layer/CCP/hal_ccp.c: 191:             CCPR1L = (uint8)(l_duty_temp >> 2);
  7725   002C5C  C180  F0ED         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  7726   002C60  C181  F0EE         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  7727   002C64  90D8               	bcf	status,0,c
  7728   002C66  33EE               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7729   002C68  33ED               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7730   002C6A  90D8               	bcf	status,0,c
  7731   002C6C  33EE               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7732   002C6E  33ED               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7733   002C70  51ED               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7734   002C72  6EBE               	movwf	190,c	;volatile
  7735                           
  7736                           ;MCAL_Layer/CCP/hal_ccp.c: 192:         }
  7737   002C74  EF5F  F016         	goto	l11080
  7738   002C78                     l11076:
  7739   002C78  C0EA  FFD9         	movff	CCP_PWM_Set_Duty@_ccp_obj,fsr2l
  7740   002C7C  C0EB  FFDA         	movff	CCP_PWM_Set_Duty@_ccp_obj+1,fsr2h
  7741   002C80  04DE               	decf	postinc2,w,c
  7742   002C82  A4D8               	btfss	status,2,c
  7743   002C84  EF46  F016         	goto	u11451
  7744   002C88  EF48  F016         	goto	u11450
  7745   002C8C                     u11451:
  7746   002C8C  EF5F  F016         	goto	l11080
  7747   002C90                     u11450:
  7748   002C90                     
  7749                           ;MCAL_Layer/CCP/hal_ccp.c: 194:             CCP2CONbits.DC2B = (uint8)(l_duty_temp & 0x0
      +                          003);
  7750   002C90  C180  F0ED         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  7751   002C94  0E03               	movlw	3
  7752   002C96  0100               	movlb	0	; () banked
  7753   002C98  17ED               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7754   002C9A  3BED               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7755   002C9C  50BA               	movf	186,w,c	;volatile
  7756   002C9E  19ED               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7757   002CA0  0BCF               	andlw	-49
  7758   002CA2  19ED               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7759   002CA4  6EBA               	movwf	186,c	;volatile
  7760                           
  7761                           ;MCAL_Layer/CCP/hal_ccp.c: 195:             CCPR2L = (uint8)(l_duty_temp >> 2);
  7762   002CA6  C180  F0ED         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  7763   002CAA  C181  F0EE         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  7764   002CAE  90D8               	bcf	status,0,c
  7765   002CB0  33EE               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7766   002CB2  33ED               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7767   002CB4  90D8               	bcf	status,0,c
  7768   002CB6  33EE               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7769   002CB8  33ED               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7770   002CBA  51ED               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
  7771   002CBC  6EBB               	movwf	187,c	;volatile
  7772   002CBE                     l11080:
  7773                           
  7774                           ;MCAL_Layer/CCP/hal_ccp.c: 199:         ret = (Std_ReturnType)0x01;
  7775   002CBE  0E01               	movlw	1
  7776   002CC0  0101               	movlb	1	; () banked
  7777   002CC2  6F7F               	movwf	CCP_PWM_Set_Duty@ret& (0+255),b
  7778   002CC4                     l545:
  7779                           
  7780                           ; BSR set to: 1
  7781                           ;MCAL_Layer/CCP/hal_ccp.c: 202:     return ret;
  7782   002CC4  517F               	movf	CCP_PWM_Set_Duty@ret& (0+255),w,b
  7783   002CC6                     
  7784                           ; BSR set to: 1
  7785   002CC6  0012               	return		;funcret
  7786   002CC8                     __end_of_CCP_PWM_Set_Duty:
  7787                           	callstack 0
  7788                           
  7789 ;; *************** function ___xxtofl *****************
  7790 ;; Defined at:
  7791 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  sign            1    wreg     unsigned char 
  7794 ;;  val             4   13[COMRAM] long 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  sign            1   21[COMRAM] unsigned char 
  7797 ;;  arg             4   23[COMRAM] unsigned long 
  7798 ;;  exp             1   22[COMRAM] unsigned char 
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  4   13[COMRAM] unsigned char 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7812 ;;Total ram usage:       14 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; Hardware stack levels required when called: 4
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_CCP_PWM_Set_Duty
  7819 ;;		_CCP_PWM_Mode_Config
  7820 ;;		_main
  7821 ;;		_Ultrasonic_Calculate_Distance
  7822 ;;		_I2C_Master_Mode_Clock_Configurations
  7823 ;;		_EUSART_Baud_Rate_Calculation
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           	psect	text45
  7828   002974                     __ptext45:
  7829                           	callstack 0
  7830   002974                     ___xxtofl:
  7831                           	callstack 23
  7832                           
  7833                           ; BSR set to: 1
  7834                           ;incstack = 0
  7835                           ;___xxtofl@sign stored from wreg
  7836   002974  6E16               	movwf	___xxtofl@sign^0,c
  7837   002976  5016               	movf	___xxtofl@sign^0,w,c
  7838   002978  B4D8               	btfsc	status,2,c
  7839   00297A  EFC1  F014         	goto	u10721
  7840   00297E  EFC3  F014         	goto	u10720
  7841   002982                     u10721:
  7842   002982  EFE5  F014         	goto	l2466
  7843   002986                     u10720:
  7844   002986  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  7845   002988  EFCA  F014         	goto	u10730
  7846   00298C  EFC8  F014         	goto	u10731
  7847   002990                     u10731:
  7848   002990  EFE5  F014         	goto	l2466
  7849   002994                     u10730:
  7850   002994  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  7851   002998  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  7852   00299C  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  7853   0029A0  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  7854   0029A4  1E12               	comf	??___xxtofl^0,f,c
  7855   0029A6  1E13               	comf	(??___xxtofl+1)^0,f,c
  7856   0029A8  1E14               	comf	(??___xxtofl+2)^0,f,c
  7857   0029AA  1E15               	comf	(??___xxtofl+3)^0,f,c
  7858   0029AC  2A12               	incf	??___xxtofl^0,f,c
  7859   0029AE  0E00               	movlw	0
  7860   0029B0  2213               	addwfc	(??___xxtofl+1)^0,f,c
  7861   0029B2  2214               	addwfc	(??___xxtofl+2)^0,f,c
  7862   0029B4  2215               	addwfc	(??___xxtofl+3)^0,f,c
  7863   0029B6  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  7864   0029BA  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  7865   0029BE  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  7866   0029C2  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  7867   0029C6  EFED  F014         	goto	l10324
  7868   0029CA                     l2466:
  7869   0029CA  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  7870   0029CE  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7871   0029D2  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7872   0029D6  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7873   0029DA                     l10324:
  7874   0029DA  500E               	movf	___xxtofl@val^0,w,c
  7875   0029DC  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  7876   0029DE  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  7877   0029E0  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  7878   0029E2  A4D8               	btfss	status,2,c
  7879   0029E4  EFF6  F014         	goto	u10741
  7880   0029E8  EFF8  F014         	goto	u10740
  7881   0029EC                     u10741:
  7882   0029EC  EF02  F015         	goto	l10330
  7883   0029F0                     u10740:
  7884   0029F0  0E00               	movlw	0
  7885   0029F2  6E0E               	movwf	?___xxtofl^0,c
  7886   0029F4  0E00               	movlw	0
  7887   0029F6  6E0F               	movwf	(?___xxtofl+1)^0,c
  7888   0029F8  0E00               	movlw	0
  7889   0029FA  6E10               	movwf	(?___xxtofl+2)^0,c
  7890   0029FC  0E00               	movlw	0
  7891   0029FE  6E11               	movwf	(?___xxtofl+3)^0,c
  7892   002A00  EF93  F015         	goto	l2469
  7893   002A04                     l10330:
  7894   002A04  0E96               	movlw	150
  7895   002A06  6E17               	movwf	___xxtofl@exp^0,c
  7896   002A08  EF0C  F015         	goto	l10334
  7897   002A0C                     l10332:
  7898   002A0C  2A17               	incf	___xxtofl@exp^0,f,c
  7899   002A0E  90D8               	bcf	status,0,c
  7900   002A10  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  7901   002A12  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  7902   002A14  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  7903   002A16  3218               	rrcf	___xxtofl@arg^0,f,c
  7904   002A18                     l10334:
  7905   002A18  0E00               	movlw	0
  7906   002A1A  1418               	andwf	___xxtofl@arg^0,w,c
  7907   002A1C  6E12               	movwf	??___xxtofl^0,c
  7908   002A1E  0E00               	movlw	0
  7909   002A20  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  7910   002A22  6E13               	movwf	(??___xxtofl+1)^0,c
  7911   002A24  0E00               	movlw	0
  7912   002A26  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  7913   002A28  6E14               	movwf	(??___xxtofl+2)^0,c
  7914   002A2A  0EFE               	movlw	254
  7915   002A2C  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  7916   002A2E  6E15               	movwf	(??___xxtofl+3)^0,c
  7917   002A30  5012               	movf	??___xxtofl^0,w,c
  7918   002A32  1013               	iorwf	(??___xxtofl+1)^0,w,c
  7919   002A34  1014               	iorwf	(??___xxtofl+2)^0,w,c
  7920   002A36  1015               	iorwf	(??___xxtofl+3)^0,w,c
  7921   002A38  A4D8               	btfss	status,2,c
  7922   002A3A  EF21  F015         	goto	u10751
  7923   002A3E  EF23  F015         	goto	u10750
  7924   002A42                     u10751:
  7925   002A42  EF06  F015         	goto	l10332
  7926   002A46                     u10750:
  7927   002A46  EF31  F015         	goto	l2473
  7928   002A4A                     l10336:
  7929   002A4A  2A17               	incf	___xxtofl@exp^0,f,c
  7930   002A4C  0E01               	movlw	1
  7931   002A4E  2618               	addwf	___xxtofl@arg^0,f,c
  7932   002A50  0E00               	movlw	0
  7933   002A52  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  7934   002A54  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  7935   002A56  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  7936   002A58  90D8               	bcf	status,0,c
  7937   002A5A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  7938   002A5C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  7939   002A5E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  7940   002A60  3218               	rrcf	___xxtofl@arg^0,f,c
  7941   002A62                     l2473:
  7942   002A62  0E00               	movlw	0
  7943   002A64  1418               	andwf	___xxtofl@arg^0,w,c
  7944   002A66  6E12               	movwf	??___xxtofl^0,c
  7945   002A68  0E00               	movlw	0
  7946   002A6A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  7947   002A6C  6E13               	movwf	(??___xxtofl+1)^0,c
  7948   002A6E  0E00               	movlw	0
  7949   002A70  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  7950   002A72  6E14               	movwf	(??___xxtofl+2)^0,c
  7951   002A74  0EFF               	movlw	255
  7952   002A76  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  7953   002A78  6E15               	movwf	(??___xxtofl+3)^0,c
  7954   002A7A  5012               	movf	??___xxtofl^0,w,c
  7955   002A7C  1013               	iorwf	(??___xxtofl+1)^0,w,c
  7956   002A7E  1014               	iorwf	(??___xxtofl+2)^0,w,c
  7957   002A80  1015               	iorwf	(??___xxtofl+3)^0,w,c
  7958   002A82  A4D8               	btfss	status,2,c
  7959   002A84  EF46  F015         	goto	u10761
  7960   002A88  EF48  F015         	goto	u10760
  7961   002A8C                     u10761:
  7962   002A8C  EF25  F015         	goto	l10336
  7963   002A90                     u10760:
  7964   002A90  EF50  F015         	goto	l10344
  7965   002A94                     l10342:
  7966   002A94  0617               	decf	___xxtofl@exp^0,f,c
  7967   002A96  90D8               	bcf	status,0,c
  7968   002A98  3618               	rlcf	___xxtofl@arg^0,f,c
  7969   002A9A  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  7970   002A9C  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  7971   002A9E  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  7972   002AA0                     l10344:
  7973   002AA0  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  7974   002AA2  EF55  F015         	goto	u10771
  7975   002AA6  EF57  F015         	goto	u10770
  7976   002AAA                     u10771:
  7977   002AAA  EF5F  F015         	goto	l2480
  7978   002AAE                     u10770:
  7979   002AAE  0E02               	movlw	2
  7980   002AB0  6017               	cpfslt	___xxtofl@exp^0,c
  7981   002AB2  EF5D  F015         	goto	u10781
  7982   002AB6  EF5F  F015         	goto	u10780
  7983   002ABA                     u10781:
  7984   002ABA  EF4A  F015         	goto	l10342
  7985   002ABE                     u10780:
  7986   002ABE                     l2480:
  7987   002ABE  B017               	btfsc	___xxtofl@exp^0,0,c
  7988   002AC0  EF64  F015         	goto	u10791
  7989   002AC4  EF66  F015         	goto	u10790
  7990   002AC8                     u10791:
  7991   002AC8  EF67  F015         	goto	l10350
  7992   002ACC                     u10790:
  7993   002ACC  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  7994   002ACE                     l10350:
  7995   002ACE  90D8               	bcf	status,0,c
  7996   002AD0  3217               	rrcf	___xxtofl@exp^0,f,c
  7997   002AD2  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  7998   002AD6  6A13               	clrf	(??___xxtofl+1)^0,c
  7999   002AD8  6A14               	clrf	(??___xxtofl+2)^0,c
  8000   002ADA  6A15               	clrf	(??___xxtofl+3)^0,c
  8001   002ADC  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  8002   002AE0  6A14               	clrf	(??___xxtofl+2)^0,c
  8003   002AE2  6A13               	clrf	(??___xxtofl+1)^0,c
  8004   002AE4  6A12               	clrf	??___xxtofl^0,c
  8005   002AE6  5012               	movf	??___xxtofl^0,w,c
  8006   002AE8  1218               	iorwf	___xxtofl@arg^0,f,c
  8007   002AEA  5013               	movf	(??___xxtofl+1)^0,w,c
  8008   002AEC  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  8009   002AEE  5014               	movf	(??___xxtofl+2)^0,w,c
  8010   002AF0  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  8011   002AF2  5015               	movf	(??___xxtofl+3)^0,w,c
  8012   002AF4  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  8013   002AF6  5016               	movf	___xxtofl@sign^0,w,c
  8014   002AF8  B4D8               	btfsc	status,2,c
  8015   002AFA  EF81  F015         	goto	u10801
  8016   002AFE  EF83  F015         	goto	u10800
  8017   002B02                     u10801:
  8018   002B02  EF8B  F015         	goto	l10360
  8019   002B06                     u10800:
  8020   002B06  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  8021   002B08  EF8A  F015         	goto	u10810
  8022   002B0C  EF88  F015         	goto	u10811
  8023   002B10                     u10811:
  8024   002B10  EF8B  F015         	goto	l10360
  8025   002B14                     u10810:
  8026   002B14  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  8027   002B16                     l10360:
  8028   002B16  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  8029   002B1A  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  8030   002B1E  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  8031   002B22  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  8032   002B26                     l2469:
  8033   002B26  0012               	return		;funcret
  8034   002B28                     __end_of___xxtofl:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function ___fltol *****************
  8038 ;; Defined at:
  8039 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  f1              4   30[BANK0 ] unsigned char 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  exp1            1   98[COMRAM] unsigned char 
  8044 ;;  sign1           1   97[COMRAM] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  4   30[BANK0 ] long 
  8047 ;; Registers used:
  8048 ;;		wreg, status,2, status,0
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8054 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8058 ;;Total ram usage:       10 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 4
  8061 ;; This function calls:
  8062 ;;		Nothing
  8063 ;; This function is called by:
  8064 ;;		_CCP_PWM_Set_Duty
  8065 ;;		_CCP_PWM_Mode_Config
  8066 ;;		_main
  8067 ;;		_Ultrasonic_Calculate_Distance
  8068 ;;		_I2C_Master_Mode_Clock_Configurations
  8069 ;;		_EUSART_Baud_Rate_Calculation
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text46
  8074   003740                     __ptext46:
  8075                           	callstack 0
  8076   003740                     ___fltol:
  8077                           	callstack 23
  8078   003740  0100               	movlb	0	; () banked
  8079   003742  35E4               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8080   003744  35E5               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8081   003746  6E63               	movwf	___fltol@exp1^0,c
  8082   003748  5063               	movf	___fltol@exp1^0,w,c
  8083   00374A  A4D8               	btfss	status,2,c
  8084   00374C  EFAA  F01B         	goto	u10651
  8085   003750  EFAC  F01B         	goto	u10650
  8086   003754                     u10651:
  8087   003754  EFB6  F01B         	goto	l10280
  8088   003758                     u10650:
  8089   003758                     l10276:
  8090                           
  8091                           ; BSR set to: 0
  8092   003758  0E00               	movlw	0
  8093   00375A  6FE2               	movwf	?___fltol& (0+255),b
  8094   00375C  0E00               	movlw	0
  8095   00375E  6FE3               	movwf	(?___fltol+1)& (0+255),b
  8096   003760  0E00               	movlw	0
  8097   003762  6FE4               	movwf	(?___fltol+2)& (0+255),b
  8098   003764  0E00               	movlw	0
  8099   003766  6FE5               	movwf	(?___fltol+3)& (0+255),b
  8100   003768  EF23  F01C         	goto	l2108
  8101   00376C                     l10280:
  8102                           
  8103                           ; BSR set to: 0
  8104   00376C  C0E2  F0E6         	movff	___fltol@f1,??___fltol
  8105   003770  C0E3  F0E7         	movff	___fltol@f1+1,??___fltol+1
  8106   003774  C0E4  F0E8         	movff	___fltol@f1+2,??___fltol+2
  8107   003778  C0E5  F0E9         	movff	___fltol@f1+3,??___fltol+3
  8108   00377C  0E20               	movlw	32
  8109   00377E  EFC6  F01B         	goto	u10660
  8110   003782                     u10665:
  8111   003782  90D8               	bcf	status,0,c
  8112   003784  33E9               	rrcf	(??___fltol+3)& (0+255),f,b
  8113   003786  33E8               	rrcf	(??___fltol+2)& (0+255),f,b
  8114   003788  33E7               	rrcf	(??___fltol+1)& (0+255),f,b
  8115   00378A  33E6               	rrcf	??___fltol& (0+255),f,b
  8116   00378C                     u10660:
  8117   00378C  2EE8               	decfsz	wreg,f,c
  8118   00378E  EFC1  F01B         	goto	u10665
  8119   003792  51E6               	movf	??___fltol& (0+255),w,b
  8120   003794  6E62               	movwf	___fltol@sign1^0,c
  8121   003796                     
  8122                           ; BSR set to: 0
  8123   003796  8FE4               	bsf	(___fltol@f1+2)& (0+255),7,b
  8124   003798                     
  8125                           ; BSR set to: 0
  8126   003798  0EFF               	movlw	255
  8127   00379A  17E2               	andwf	___fltol@f1& (0+255),f,b
  8128   00379C  0EFF               	movlw	255
  8129   00379E  17E3               	andwf	(___fltol@f1+1)& (0+255),f,b
  8130   0037A0  0EFF               	movlw	255
  8131   0037A2  17E4               	andwf	(___fltol@f1+2)& (0+255),f,b
  8132   0037A4  0E00               	movlw	0
  8133   0037A6  17E5               	andwf	(___fltol@f1+3)& (0+255),f,b
  8134   0037A8                     
  8135                           ; BSR set to: 0
  8136   0037A8  0E96               	movlw	150
  8137   0037AA  5E63               	subwf	___fltol@exp1^0,f,c
  8138   0037AC                     
  8139                           ; BSR set to: 0
  8140   0037AC  BE63               	btfsc	___fltol@exp1^0,7,c
  8141   0037AE  EFDD  F01B         	goto	u10670
  8142   0037B2  EFDB  F01B         	goto	u10671
  8143   0037B6                     u10671:
  8144   0037B6  EFF3  F01B         	goto	l10300
  8145   0037BA                     u10670:
  8146   0037BA                     
  8147                           ; BSR set to: 0
  8148   0037BA  5063               	movf	___fltol@exp1^0,w,c
  8149   0037BC  0A80               	xorlw	128
  8150   0037BE  0F97               	addlw	151
  8151   0037C0  B0D8               	btfsc	status,0,c
  8152   0037C2  EFE5  F01B         	goto	u10681
  8153   0037C6  EFE7  F01B         	goto	u10680
  8154   0037CA                     u10681:
  8155   0037CA  EFE9  F01B         	goto	l10296
  8156   0037CE                     u10680:
  8157   0037CE  EFAC  F01B         	goto	l10276
  8158   0037D2                     l10296:
  8159                           
  8160                           ; BSR set to: 0
  8161   0037D2  90D8               	bcf	status,0,c
  8162   0037D4  33E5               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8163   0037D6  33E4               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8164   0037D8  33E3               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8165   0037DA  33E2               	rrcf	___fltol@f1& (0+255),f,b
  8166   0037DC                     
  8167                           ; BSR set to: 0
  8168   0037DC  3E63               	incfsz	___fltol@exp1^0,f,c
  8169   0037DE  EFE9  F01B         	goto	l10296
  8170   0037E2  EF0B  F01C         	goto	l10310
  8171   0037E6                     l10300:
  8172                           
  8173                           ; BSR set to: 0
  8174   0037E6  0E1F               	movlw	31
  8175   0037E8  6463               	cpfsgt	___fltol@exp1^0,c
  8176   0037EA  EFF9  F01B         	goto	u10691
  8177   0037EE  EFFB  F01B         	goto	u10690
  8178   0037F2                     u10691:
  8179   0037F2  EF03  F01C         	goto	l10308
  8180   0037F6                     u10690:
  8181   0037F6  EFAC  F01B         	goto	l10276
  8182   0037FA                     l10306:
  8183                           
  8184                           ; BSR set to: 0
  8185   0037FA  90D8               	bcf	status,0,c
  8186   0037FC  37E2               	rlcf	___fltol@f1& (0+255),f,b
  8187   0037FE  37E3               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8188   003800  37E4               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8189   003802  37E5               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8190   003804  0663               	decf	___fltol@exp1^0,f,c
  8191   003806                     l10308:
  8192                           
  8193                           ; BSR set to: 0
  8194   003806  5063               	movf	___fltol@exp1^0,w,c
  8195   003808  A4D8               	btfss	status,2,c
  8196   00380A  EF09  F01C         	goto	u10701
  8197   00380E  EF0B  F01C         	goto	u10700
  8198   003812                     u10701:
  8199   003812  EFFD  F01B         	goto	l10306
  8200   003816                     u10700:
  8201   003816                     l10310:
  8202                           
  8203                           ; BSR set to: 0
  8204   003816  5062               	movf	___fltol@sign1^0,w,c
  8205   003818  B4D8               	btfsc	status,2,c
  8206   00381A  EF11  F01C         	goto	u10711
  8207   00381E  EF13  F01C         	goto	u10710
  8208   003822                     u10711:
  8209   003822  EF1B  F01C         	goto	l10314
  8210   003826                     u10710:
  8211   003826                     
  8212                           ; BSR set to: 0
  8213   003826  1FE5               	comf	(___fltol@f1+3)& (0+255),f,b
  8214   003828  1FE4               	comf	(___fltol@f1+2)& (0+255),f,b
  8215   00382A  1FE3               	comf	(___fltol@f1+1)& (0+255),f,b
  8216   00382C  6DE2               	negf	___fltol@f1& (0+255),b
  8217   00382E  0E00               	movlw	0
  8218   003830  23E3               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8219   003832  23E4               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8220   003834  23E5               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8221   003836                     l10314:
  8222                           
  8223                           ; BSR set to: 0
  8224   003836  C0E2  F0E2         	movff	___fltol@f1,?___fltol
  8225   00383A  C0E3  F0E3         	movff	___fltol@f1+1,?___fltol+1
  8226   00383E  C0E4  F0E4         	movff	___fltol@f1+2,?___fltol+2
  8227   003842  C0E5  F0E5         	movff	___fltol@f1+3,?___fltol+3
  8228   003846                     l2108:
  8229                           
  8230                           ; BSR set to: 0
  8231   003846  0012               	return		;funcret
  8232   003848                     __end_of___fltol:
  8233                           	callstack 0
  8234                           
  8235 ;; *************** function ___flmul *****************
  8236 ;; Defined at:
  8237 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  8238 ;; Parameters:    Size  Location     Type
  8239 ;;  b               4   27[COMRAM] long 
  8240 ;;  a               4   31[COMRAM] long 
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;  prod            4   46[COMRAM] struct .
  8243 ;;  grs             4   41[COMRAM] unsigned long 
  8244 ;;  temp            2   50[COMRAM] struct .
  8245 ;;  bexp            1   45[COMRAM] unsigned char 
  8246 ;;  aexp            1   40[COMRAM] unsigned char 
  8247 ;;  sign            1   39[COMRAM] unsigned char 
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  4   27[COMRAM] unsigned char 
  8250 ;; Registers used:
  8251 ;;		wreg, status,2, status,0, prodl, prodh
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8257 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8258 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8259 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8260 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8261 ;;Total ram usage:       25 bytes
  8262 ;; Hardware stack levels used: 1
  8263 ;; Hardware stack levels required when called: 4
  8264 ;; This function calls:
  8265 ;;		Nothing
  8266 ;; This function is called by:
  8267 ;;		_CCP_PWM_Set_Duty
  8268 ;;		_CCP_PWM_Mode_Config
  8269 ;;		_main
  8270 ;;		_roundf
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text47
  8275   001964                     __ptext47:
  8276                           	callstack 0
  8277   001964                     ___flmul:
  8278                           	callstack 25
  8279   001964  501F               	movf	(___flmul@b+3)^0,w,c
  8280   001966  0B80               	andlw	128
  8281   001968  6E28               	movwf	___flmul@sign^0,c
  8282   00196A  501F               	movf	(___flmul@b+3)^0,w,c
  8283   00196C  241F               	addwf	(___flmul@b+3)^0,w,c
  8284   00196E  6E2E               	movwf	___flmul@bexp^0,c
  8285   001970  AE1E               	btfss	(___flmul@b+2)^0,7,c
  8286   001972  EFBD  F00C         	goto	u10461
  8287   001976  EFBF  F00C         	goto	u10460
  8288   00197A                     u10461:
  8289   00197A  EFC0  F00C         	goto	l10150
  8290   00197E                     u10460:
  8291   00197E  802E               	bsf	___flmul@bexp^0,0,c
  8292   001980                     l10150:
  8293   001980  502E               	movf	___flmul@bexp^0,w,c
  8294   001982  B4D8               	btfsc	status,2,c
  8295   001984  EFC6  F00C         	goto	u10471
  8296   001988  EFC8  F00C         	goto	u10470
  8297   00198C                     u10471:
  8298   00198C  EFDB  F00C         	goto	l10158
  8299   001990                     u10470:
  8300   001990  282E               	incf	___flmul@bexp^0,w,c
  8301   001992  A4D8               	btfss	status,2,c
  8302   001994  EFCE  F00C         	goto	u10481
  8303   001998  EFD0  F00C         	goto	u10480
  8304   00199C                     u10481:
  8305   00199C  EFD8  F00C         	goto	l10156
  8306   0019A0                     u10480:
  8307   0019A0  0E00               	movlw	0
  8308   0019A2  6E1C               	movwf	___flmul@b^0,c
  8309   0019A4  0E00               	movlw	0
  8310   0019A6  6E1D               	movwf	(___flmul@b+1)^0,c
  8311   0019A8  0E00               	movlw	0
  8312   0019AA  6E1E               	movwf	(___flmul@b+2)^0,c
  8313   0019AC  0E00               	movlw	0
  8314   0019AE  6E1F               	movwf	(___flmul@b+3)^0,c
  8315   0019B0                     l10156:
  8316   0019B0  8E1E               	bsf	(___flmul@b+2)^0,7,c
  8317   0019B2  EFE3  F00C         	goto	l10160
  8318   0019B6                     l10158:
  8319   0019B6  0E00               	movlw	0
  8320   0019B8  6E1C               	movwf	___flmul@b^0,c
  8321   0019BA  0E00               	movlw	0
  8322   0019BC  6E1D               	movwf	(___flmul@b+1)^0,c
  8323   0019BE  0E00               	movlw	0
  8324   0019C0  6E1E               	movwf	(___flmul@b+2)^0,c
  8325   0019C2  0E00               	movlw	0
  8326   0019C4  6E1F               	movwf	(___flmul@b+3)^0,c
  8327   0019C6                     l10160:
  8328   0019C6  5023               	movf	(___flmul@a+3)^0,w,c
  8329   0019C8  0B80               	andlw	128
  8330   0019CA  1A28               	xorwf	___flmul@sign^0,f,c
  8331   0019CC  5023               	movf	(___flmul@a+3)^0,w,c
  8332   0019CE  2423               	addwf	(___flmul@a+3)^0,w,c
  8333   0019D0  6E29               	movwf	___flmul@aexp^0,c
  8334   0019D2  AE22               	btfss	(___flmul@a+2)^0,7,c
  8335   0019D4  EFEE  F00C         	goto	u10491
  8336   0019D8  EFF0  F00C         	goto	u10490
  8337   0019DC                     u10491:
  8338   0019DC  EFF1  F00C         	goto	l10168
  8339   0019E0                     u10490:
  8340   0019E0  8029               	bsf	___flmul@aexp^0,0,c
  8341   0019E2                     l10168:
  8342   0019E2  5029               	movf	___flmul@aexp^0,w,c
  8343   0019E4  B4D8               	btfsc	status,2,c
  8344   0019E6  EFF7  F00C         	goto	u10501
  8345   0019EA  EFF9  F00C         	goto	u10500
  8346   0019EE                     u10501:
  8347   0019EE  EF0C  F00D         	goto	l10176
  8348   0019F2                     u10500:
  8349   0019F2  2829               	incf	___flmul@aexp^0,w,c
  8350   0019F4  A4D8               	btfss	status,2,c
  8351   0019F6  EFFF  F00C         	goto	u10511
  8352   0019FA  EF01  F00D         	goto	u10510
  8353   0019FE                     u10511:
  8354   0019FE  EF09  F00D         	goto	l10174
  8355   001A02                     u10510:
  8356   001A02  0E00               	movlw	0
  8357   001A04  6E20               	movwf	___flmul@a^0,c
  8358   001A06  0E00               	movlw	0
  8359   001A08  6E21               	movwf	(___flmul@a+1)^0,c
  8360   001A0A  0E00               	movlw	0
  8361   001A0C  6E22               	movwf	(___flmul@a+2)^0,c
  8362   001A0E  0E00               	movlw	0
  8363   001A10  6E23               	movwf	(___flmul@a+3)^0,c
  8364   001A12                     l10174:
  8365   001A12  8E22               	bsf	(___flmul@a+2)^0,7,c
  8366   001A14  EF14  F00D         	goto	l2425
  8367   001A18                     l10176:
  8368   001A18  0E00               	movlw	0
  8369   001A1A  6E20               	movwf	___flmul@a^0,c
  8370   001A1C  0E00               	movlw	0
  8371   001A1E  6E21               	movwf	(___flmul@a+1)^0,c
  8372   001A20  0E00               	movlw	0
  8373   001A22  6E22               	movwf	(___flmul@a+2)^0,c
  8374   001A24  0E00               	movlw	0
  8375   001A26  6E23               	movwf	(___flmul@a+3)^0,c
  8376   001A28                     l2425:
  8377   001A28  5029               	movf	___flmul@aexp^0,w,c
  8378   001A2A  B4D8               	btfsc	status,2,c
  8379   001A2C  EF1A  F00D         	goto	u10521
  8380   001A30  EF1C  F00D         	goto	u10520
  8381   001A34                     u10521:
  8382   001A34  EF24  F00D         	goto	l10180
  8383   001A38                     u10520:
  8384   001A38  502E               	movf	___flmul@bexp^0,w,c
  8385   001A3A  A4D8               	btfss	status,2,c
  8386   001A3C  EF22  F00D         	goto	u10531
  8387   001A40  EF24  F00D         	goto	u10530
  8388   001A44                     u10531:
  8389   001A44  EF2E  F00D         	goto	l10184
  8390   001A48                     u10530:
  8391   001A48                     l10180:
  8392   001A48  0E00               	movlw	0
  8393   001A4A  6E1C               	movwf	?___flmul^0,c
  8394   001A4C  0E00               	movlw	0
  8395   001A4E  6E1D               	movwf	(?___flmul+1)^0,c
  8396   001A50  0E00               	movlw	0
  8397   001A52  6E1E               	movwf	(?___flmul+2)^0,c
  8398   001A54  0E00               	movlw	0
  8399   001A56  6E1F               	movwf	(?___flmul+3)^0,c
  8400   001A58  EFC6  F00E         	goto	l2429
  8401   001A5C                     l10184:
  8402   001A5C  5022               	movf	(___flmul@a+2)^0,w,c
  8403   001A5E  021C               	mulwf	___flmul@b^0,c
  8404   001A60  CFF3 F033          	movff	prodl,___flmul@temp
  8405   001A64  CFF4 F034          	movff	prodh,___flmul@temp+1
  8406   001A68  5033               	movf	___flmul@temp^0,w,c
  8407   001A6A  6E2A               	movwf	___flmul@grs^0,c
  8408   001A6C  6A2B               	clrf	(___flmul@grs+1)^0,c
  8409   001A6E  6A2C               	clrf	(___flmul@grs+2)^0,c
  8410   001A70  6A2D               	clrf	(___flmul@grs+3)^0,c
  8411   001A72  5034               	movf	(___flmul@temp+1)^0,w,c
  8412   001A74  6E2F               	movwf	___flmul@prod^0,c
  8413   001A76  6A30               	clrf	(___flmul@prod+1)^0,c
  8414   001A78  6A31               	clrf	(___flmul@prod+2)^0,c
  8415   001A7A  6A32               	clrf	(___flmul@prod+3)^0,c
  8416   001A7C  5021               	movf	(___flmul@a+1)^0,w,c
  8417   001A7E  021D               	mulwf	(___flmul@b+1)^0,c
  8418   001A80  CFF3 F033          	movff	prodl,___flmul@temp
  8419   001A84  CFF4 F034          	movff	prodh,___flmul@temp+1
  8420   001A88  5033               	movf	___flmul@temp^0,w,c
  8421   001A8A  262A               	addwf	___flmul@grs^0,f,c
  8422   001A8C  0E00               	movlw	0
  8423   001A8E  222B               	addwfc	(___flmul@grs+1)^0,f,c
  8424   001A90  222C               	addwfc	(___flmul@grs+2)^0,f,c
  8425   001A92  222D               	addwfc	(___flmul@grs+3)^0,f,c
  8426   001A94  5034               	movf	(___flmul@temp+1)^0,w,c
  8427   001A96  262F               	addwf	___flmul@prod^0,f,c
  8428   001A98  0E00               	movlw	0
  8429   001A9A  2230               	addwfc	(___flmul@prod+1)^0,f,c
  8430   001A9C  2231               	addwfc	(___flmul@prod+2)^0,f,c
  8431   001A9E  2232               	addwfc	(___flmul@prod+3)^0,f,c
  8432   001AA0  5020               	movf	___flmul@a^0,w,c
  8433   001AA2  021E               	mulwf	(___flmul@b+2)^0,c
  8434   001AA4  CFF3 F033          	movff	prodl,___flmul@temp
  8435   001AA8  CFF4 F034          	movff	prodh,___flmul@temp+1
  8436   001AAC  5033               	movf	___flmul@temp^0,w,c
  8437   001AAE  262A               	addwf	___flmul@grs^0,f,c
  8438   001AB0  0E00               	movlw	0
  8439   001AB2  222B               	addwfc	(___flmul@grs+1)^0,f,c
  8440   001AB4  222C               	addwfc	(___flmul@grs+2)^0,f,c
  8441   001AB6  222D               	addwfc	(___flmul@grs+3)^0,f,c
  8442   001AB8  5034               	movf	(___flmul@temp+1)^0,w,c
  8443   001ABA  262F               	addwf	___flmul@prod^0,f,c
  8444   001ABC  0E00               	movlw	0
  8445   001ABE  2230               	addwfc	(___flmul@prod+1)^0,f,c
  8446   001AC0  2231               	addwfc	(___flmul@prod+2)^0,f,c
  8447   001AC2  2232               	addwfc	(___flmul@prod+3)^0,f,c
  8448   001AC4  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  8449   001AC8  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  8450   001ACC  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  8451   001AD0  6A2A               	clrf	___flmul@grs^0,c
  8452   001AD2  5020               	movf	___flmul@a^0,w,c
  8453   001AD4  021D               	mulwf	(___flmul@b+1)^0,c
  8454   001AD6  CFF3 F033          	movff	prodl,___flmul@temp
  8455   001ADA  CFF4 F034          	movff	prodh,___flmul@temp+1
  8456   001ADE  5033               	movf	___flmul@temp^0,w,c
  8457   001AE0  262A               	addwf	___flmul@grs^0,f,c
  8458   001AE2  5034               	movf	(___flmul@temp+1)^0,w,c
  8459   001AE4  222B               	addwfc	(___flmul@grs+1)^0,f,c
  8460   001AE6  0E00               	movlw	0
  8461   001AE8  222C               	addwfc	(___flmul@grs+2)^0,f,c
  8462   001AEA  0E00               	movlw	0
  8463   001AEC  222D               	addwfc	(___flmul@grs+3)^0,f,c
  8464   001AEE  5021               	movf	(___flmul@a+1)^0,w,c
  8465   001AF0  021C               	mulwf	___flmul@b^0,c
  8466   001AF2  CFF3 F033          	movff	prodl,___flmul@temp
  8467   001AF6  CFF4 F034          	movff	prodh,___flmul@temp+1
  8468   001AFA  5033               	movf	___flmul@temp^0,w,c
  8469   001AFC  262A               	addwf	___flmul@grs^0,f,c
  8470   001AFE  5034               	movf	(___flmul@temp+1)^0,w,c
  8471   001B00  222B               	addwfc	(___flmul@grs+1)^0,f,c
  8472   001B02  0E00               	movlw	0
  8473   001B04  222C               	addwfc	(___flmul@grs+2)^0,f,c
  8474   001B06  0E00               	movlw	0
  8475   001B08  222D               	addwfc	(___flmul@grs+3)^0,f,c
  8476   001B0A  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  8477   001B0E  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  8478   001B12  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  8479   001B16  6A2A               	clrf	___flmul@grs^0,c
  8480   001B18  5020               	movf	___flmul@a^0,w,c
  8481   001B1A  021C               	mulwf	___flmul@b^0,c
  8482   001B1C  CFF3 F033          	movff	prodl,___flmul@temp
  8483   001B20  CFF4 F034          	movff	prodh,___flmul@temp+1
  8484   001B24  5033               	movf	___flmul@temp^0,w,c
  8485   001B26  262A               	addwf	___flmul@grs^0,f,c
  8486   001B28  5034               	movf	(___flmul@temp+1)^0,w,c
  8487   001B2A  222B               	addwfc	(___flmul@grs+1)^0,f,c
  8488   001B2C  0E00               	movlw	0
  8489   001B2E  222C               	addwfc	(___flmul@grs+2)^0,f,c
  8490   001B30  0E00               	movlw	0
  8491   001B32  222D               	addwfc	(___flmul@grs+3)^0,f,c
  8492   001B34  5022               	movf	(___flmul@a+2)^0,w,c
  8493   001B36  021D               	mulwf	(___flmul@b+1)^0,c
  8494   001B38  CFF3 F033          	movff	prodl,___flmul@temp
  8495   001B3C  CFF4 F034          	movff	prodh,___flmul@temp+1
  8496   001B40  5033               	movf	___flmul@temp^0,w,c
  8497   001B42  262F               	addwf	___flmul@prod^0,f,c
  8498   001B44  5034               	movf	(___flmul@temp+1)^0,w,c
  8499   001B46  2230               	addwfc	(___flmul@prod+1)^0,f,c
  8500   001B48  0E00               	movlw	0
  8501   001B4A  2231               	addwfc	(___flmul@prod+2)^0,f,c
  8502   001B4C  0E00               	movlw	0
  8503   001B4E  2232               	addwfc	(___flmul@prod+3)^0,f,c
  8504   001B50  5021               	movf	(___flmul@a+1)^0,w,c
  8505   001B52  021E               	mulwf	(___flmul@b+2)^0,c
  8506   001B54  CFF3 F033          	movff	prodl,___flmul@temp
  8507   001B58  CFF4 F034          	movff	prodh,___flmul@temp+1
  8508   001B5C  5033               	movf	___flmul@temp^0,w,c
  8509   001B5E  262F               	addwf	___flmul@prod^0,f,c
  8510   001B60  5034               	movf	(___flmul@temp+1)^0,w,c
  8511   001B62  2230               	addwfc	(___flmul@prod+1)^0,f,c
  8512   001B64  0E00               	movlw	0
  8513   001B66  2231               	addwfc	(___flmul@prod+2)^0,f,c
  8514   001B68  0E00               	movlw	0
  8515   001B6A  2232               	addwfc	(___flmul@prod+3)^0,f,c
  8516   001B6C  5022               	movf	(___flmul@a+2)^0,w,c
  8517   001B6E  021E               	mulwf	(___flmul@b+2)^0,c
  8518   001B70  CFF3 F033          	movff	prodl,___flmul@temp
  8519   001B74  CFF4 F034          	movff	prodh,___flmul@temp+1
  8520   001B78  5033               	movf	___flmul@temp^0,w,c
  8521   001B7A  6E24               	movwf	??___flmul^0,c
  8522   001B7C  5034               	movf	(___flmul@temp+1)^0,w,c
  8523   001B7E  6E25               	movwf	(??___flmul+1)^0,c
  8524   001B80  6A26               	clrf	(??___flmul+2)^0,c
  8525   001B82  6A27               	clrf	(??___flmul+3)^0,c
  8526   001B84  C026  F027         	movff	??___flmul+2,??___flmul+3
  8527   001B88  C025  F026         	movff	??___flmul+1,??___flmul+2
  8528   001B8C  C024  F025         	movff	??___flmul,??___flmul+1
  8529   001B90  6A24               	clrf	??___flmul^0,c
  8530   001B92  5024               	movf	??___flmul^0,w,c
  8531   001B94  262F               	addwf	___flmul@prod^0,f,c
  8532   001B96  5025               	movf	(??___flmul+1)^0,w,c
  8533   001B98  2230               	addwfc	(___flmul@prod+1)^0,f,c
  8534   001B9A  5026               	movf	(??___flmul+2)^0,w,c
  8535   001B9C  2231               	addwfc	(___flmul@prod+2)^0,f,c
  8536   001B9E  5027               	movf	(??___flmul+3)^0,w,c
  8537   001BA0  2232               	addwfc	(___flmul@prod+3)^0,f,c
  8538   001BA2  C02A  F024         	movff	___flmul@grs,??___flmul
  8539   001BA6  C02B  F025         	movff	___flmul@grs+1,??___flmul+1
  8540   001BAA  C02C  F026         	movff	___flmul@grs+2,??___flmul+2
  8541   001BAE  C02D  F027         	movff	___flmul@grs+3,??___flmul+3
  8542   001BB2  0E19               	movlw	25
  8543   001BB4  EFE1  F00D         	goto	u10540
  8544   001BB8                     u10545:
  8545   001BB8  90D8               	bcf	status,0,c
  8546   001BBA  3227               	rrcf	(??___flmul+3)^0,f,c
  8547   001BBC  3226               	rrcf	(??___flmul+2)^0,f,c
  8548   001BBE  3225               	rrcf	(??___flmul+1)^0,f,c
  8549   001BC0  3224               	rrcf	??___flmul^0,f,c
  8550   001BC2                     u10540:
  8551   001BC2  2EE8               	decfsz	wreg,f,c
  8552   001BC4  EFDC  F00D         	goto	u10545
  8553   001BC8  5024               	movf	??___flmul^0,w,c
  8554   001BCA  262F               	addwf	___flmul@prod^0,f,c
  8555   001BCC  5025               	movf	(??___flmul+1)^0,w,c
  8556   001BCE  2230               	addwfc	(___flmul@prod+1)^0,f,c
  8557   001BD0  5026               	movf	(??___flmul+2)^0,w,c
  8558   001BD2  2231               	addwfc	(___flmul@prod+2)^0,f,c
  8559   001BD4  5027               	movf	(??___flmul+3)^0,w,c
  8560   001BD6  2232               	addwfc	(___flmul@prod+3)^0,f,c
  8561   001BD8  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  8562   001BDC  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  8563   001BE0  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  8564   001BE4  6A2A               	clrf	___flmul@grs^0,c
  8565   001BE6  5029               	movf	___flmul@aexp^0,w,c
  8566   001BE8  C02E  F024         	movff	___flmul@bexp,??___flmul
  8567   001BEC  6A25               	clrf	(??___flmul+1)^0,c
  8568   001BEE  2624               	addwf	??___flmul^0,f,c
  8569   001BF0  0E00               	movlw	0
  8570   001BF2  2225               	addwfc	(??___flmul+1)^0,f,c
  8571   001BF4  0E82               	movlw	130
  8572   001BF6  2424               	addwf	??___flmul^0,w,c
  8573   001BF8  6E33               	movwf	___flmul@temp^0,c
  8574   001BFA  0EFF               	movlw	255
  8575   001BFC  2025               	addwfc	(??___flmul+1)^0,w,c
  8576   001BFE  6E34               	movwf	(___flmul@temp+1)^0,c
  8577   001C00  EF17  F00E         	goto	l10232
  8578   001C04                     l10226:
  8579   001C04  90D8               	bcf	status,0,c
  8580   001C06  362F               	rlcf	___flmul@prod^0,f,c
  8581   001C08  3630               	rlcf	(___flmul@prod+1)^0,f,c
  8582   001C0A  3631               	rlcf	(___flmul@prod+2)^0,f,c
  8583   001C0C  3632               	rlcf	(___flmul@prod+3)^0,f,c
  8584   001C0E  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  8585   001C10  EF0C  F00E         	goto	u10551
  8586   001C14  EF0E  F00E         	goto	u10550
  8587   001C18                     u10551:
  8588   001C18  EF0F  F00E         	goto	l2432
  8589   001C1C                     u10550:
  8590   001C1C  802F               	bsf	___flmul@prod^0,0,c
  8591   001C1E                     l2432:
  8592   001C1E  90D8               	bcf	status,0,c
  8593   001C20  362A               	rlcf	___flmul@grs^0,f,c
  8594   001C22  362B               	rlcf	(___flmul@grs+1)^0,f,c
  8595   001C24  362C               	rlcf	(___flmul@grs+2)^0,f,c
  8596   001C26  362D               	rlcf	(___flmul@grs+3)^0,f,c
  8597   001C28  0633               	decf	___flmul@temp^0,f,c
  8598   001C2A  A0D8               	btfss	status,0,c
  8599   001C2C  0634               	decf	(___flmul@temp+1)^0,f,c
  8600   001C2E                     l10232:
  8601   001C2E  AE31               	btfss	(___flmul@prod+2)^0,7,c
  8602   001C30  EF1C  F00E         	goto	u10561
  8603   001C34  EF1E  F00E         	goto	u10560
  8604   001C38                     u10561:
  8605   001C38  EF02  F00E         	goto	l10226
  8606   001C3C                     u10560:
  8607   001C3C  0E00               	movlw	0
  8608   001C3E  6E29               	movwf	___flmul@aexp^0,c
  8609   001C40  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  8610   001C42  EF25  F00E         	goto	u10571
  8611   001C46  EF27  F00E         	goto	u10570
  8612   001C4A                     u10571:
  8613   001C4A  EF4B  F00E         	goto	l2434
  8614   001C4E                     u10570:
  8615   001C4E  0EFF               	movlw	255
  8616   001C50  142A               	andwf	___flmul@grs^0,w,c
  8617   001C52  6E24               	movwf	??___flmul^0,c
  8618   001C54  0EFF               	movlw	255
  8619   001C56  142B               	andwf	(___flmul@grs+1)^0,w,c
  8620   001C58  6E25               	movwf	(??___flmul+1)^0,c
  8621   001C5A  0EFF               	movlw	255
  8622   001C5C  142C               	andwf	(___flmul@grs+2)^0,w,c
  8623   001C5E  6E26               	movwf	(??___flmul+2)^0,c
  8624   001C60  0E7F               	movlw	127
  8625   001C62  142D               	andwf	(___flmul@grs+3)^0,w,c
  8626   001C64  6E27               	movwf	(??___flmul+3)^0,c
  8627   001C66  5024               	movf	??___flmul^0,w,c
  8628   001C68  1025               	iorwf	(??___flmul+1)^0,w,c
  8629   001C6A  1026               	iorwf	(??___flmul+2)^0,w,c
  8630   001C6C  1027               	iorwf	(??___flmul+3)^0,w,c
  8631   001C6E  B4D8               	btfsc	status,2,c
  8632   001C70  EF3C  F00E         	goto	u10581
  8633   001C74  EF3E  F00E         	goto	u10580
  8634   001C78                     u10581:
  8635   001C78  EF42  F00E         	goto	l2435
  8636   001C7C                     u10580:
  8637   001C7C                     l10240:
  8638   001C7C  0E01               	movlw	1
  8639   001C7E  6E29               	movwf	___flmul@aexp^0,c
  8640   001C80  EF4B  F00E         	goto	l2434
  8641   001C84                     l2435:
  8642   001C84  A02F               	btfss	___flmul@prod^0,0,c
  8643   001C86  EF47  F00E         	goto	u10591
  8644   001C8A  EF49  F00E         	goto	u10590
  8645   001C8E                     u10591:
  8646   001C8E  EF4B  F00E         	goto	l2434
  8647   001C92                     u10590:
  8648   001C92  EF3E  F00E         	goto	l10240
  8649   001C96                     l2434:
  8650   001C96  5029               	movf	___flmul@aexp^0,w,c
  8651   001C98  B4D8               	btfsc	status,2,c
  8652   001C9A  EF51  F00E         	goto	u10601
  8653   001C9E  EF53  F00E         	goto	u10600
  8654   001CA2                     u10601:
  8655   001CA2  EF77  F00E         	goto	l10252
  8656   001CA6                     u10600:
  8657   001CA6  0E01               	movlw	1
  8658   001CA8  262F               	addwf	___flmul@prod^0,f,c
  8659   001CAA  0E00               	movlw	0
  8660   001CAC  2230               	addwfc	(___flmul@prod+1)^0,f,c
  8661   001CAE  2231               	addwfc	(___flmul@prod+2)^0,f,c
  8662   001CB0  2232               	addwfc	(___flmul@prod+3)^0,f,c
  8663   001CB2  A032               	btfss	(___flmul@prod+3)^0,0,c
  8664   001CB4  EF5E  F00E         	goto	u10611
  8665   001CB8  EF60  F00E         	goto	u10610
  8666   001CBC                     u10611:
  8667   001CBC  EF77  F00E         	goto	l10252
  8668   001CC0                     u10610:
  8669   001CC0  C02F  F024         	movff	___flmul@prod,??___flmul
  8670   001CC4  C030  F025         	movff	___flmul@prod+1,??___flmul+1
  8671   001CC8  C031  F026         	movff	___flmul@prod+2,??___flmul+2
  8672   001CCC  C032  F027         	movff	___flmul@prod+3,??___flmul+3
  8673   001CD0  3427               	rlcf	(??___flmul+3)^0,w,c
  8674   001CD2  3227               	rrcf	(??___flmul+3)^0,f,c
  8675   001CD4  3226               	rrcf	(??___flmul+2)^0,f,c
  8676   001CD6  3225               	rrcf	(??___flmul+1)^0,f,c
  8677   001CD8  3224               	rrcf	??___flmul^0,f,c
  8678   001CDA  C024  F02F         	movff	??___flmul,___flmul@prod
  8679   001CDE  C025  F030         	movff	??___flmul+1,___flmul@prod+1
  8680   001CE2  C026  F031         	movff	??___flmul+2,___flmul@prod+2
  8681   001CE6  C027  F032         	movff	??___flmul+3,___flmul@prod+3
  8682   001CEA  4A33               	infsnz	___flmul@temp^0,f,c
  8683   001CEC  2A34               	incf	(___flmul@temp+1)^0,f,c
  8684   001CEE                     l10252:
  8685   001CEE  BE34               	btfsc	(___flmul@temp+1)^0,7,c
  8686   001CF0  EF82  F00E         	goto	u10621
  8687   001CF4  5034               	movf	(___flmul@temp+1)^0,w,c
  8688   001CF6  E108               	bnz	u10620
  8689   001CF8  2833               	incf	___flmul@temp^0,w,c
  8690   001CFA  A0D8               	btfss	status,0,c
  8691   001CFC  EF82  F00E         	goto	u10621
  8692   001D00  EF84  F00E         	goto	u10620
  8693   001D04                     u10621:
  8694   001D04  EF8E  F00E         	goto	l10256
  8695   001D08                     u10620:
  8696   001D08  0E00               	movlw	0
  8697   001D0A  6E2F               	movwf	___flmul@prod^0,c
  8698   001D0C  0E00               	movlw	0
  8699   001D0E  6E30               	movwf	(___flmul@prod+1)^0,c
  8700   001D10  0E80               	movlw	128
  8701   001D12  6E31               	movwf	(___flmul@prod+2)^0,c
  8702   001D14  0E7F               	movlw	127
  8703   001D16  6E32               	movwf	(___flmul@prod+3)^0,c
  8704   001D18  EFBC  F00E         	goto	l10268
  8705   001D1C                     l10256:
  8706   001D1C  BE34               	btfsc	(___flmul@temp+1)^0,7,c
  8707   001D1E  EF9B  F00E         	goto	u10630
  8708   001D22  5034               	movf	(___flmul@temp+1)^0,w,c
  8709   001D24  E106               	bnz	u10631
  8710   001D26  0433               	decf	___flmul@temp^0,w,c
  8711   001D28  B0D8               	btfsc	status,0,c
  8712   001D2A  EF99  F00E         	goto	u10631
  8713   001D2E  EF9B  F00E         	goto	u10630
  8714   001D32                     u10631:
  8715   001D32  EFA7  F00E         	goto	l2442
  8716   001D36                     u10630:
  8717   001D36  0E00               	movlw	0
  8718   001D38  6E2F               	movwf	___flmul@prod^0,c
  8719   001D3A  0E00               	movlw	0
  8720   001D3C  6E30               	movwf	(___flmul@prod+1)^0,c
  8721   001D3E  0E00               	movlw	0
  8722   001D40  6E31               	movwf	(___flmul@prod+2)^0,c
  8723   001D42  0E00               	movlw	0
  8724   001D44  6E32               	movwf	(___flmul@prod+3)^0,c
  8725   001D46  0E00               	movlw	0
  8726   001D48  6E28               	movwf	___flmul@sign^0,c
  8727   001D4A  EFBC  F00E         	goto	l10268
  8728   001D4E                     l2442:
  8729   001D4E  C033  F02E         	movff	___flmul@temp,___flmul@bexp
  8730   001D52  0EFF               	movlw	255
  8731   001D54  162F               	andwf	___flmul@prod^0,f,c
  8732   001D56  0EFF               	movlw	255
  8733   001D58  1630               	andwf	(___flmul@prod+1)^0,f,c
  8734   001D5A  0E7F               	movlw	127
  8735   001D5C  1631               	andwf	(___flmul@prod+2)^0,f,c
  8736   001D5E  0E00               	movlw	0
  8737   001D60  1632               	andwf	(___flmul@prod+3)^0,f,c
  8738   001D62  A02E               	btfss	___flmul@bexp^0,0,c
  8739   001D64  EFB6  F00E         	goto	u10641
  8740   001D68  EFB8  F00E         	goto	u10640
  8741   001D6C                     u10641:
  8742   001D6C  EFB9  F00E         	goto	l10266
  8743   001D70                     u10640:
  8744   001D70  8E31               	bsf	(___flmul@prod+2)^0,7,c
  8745   001D72                     l10266:
  8746   001D72  90D8               	bcf	status,0,c
  8747   001D74  302E               	rrcf	___flmul@bexp^0,w,c
  8748   001D76  6E32               	movwf	(___flmul@prod+3)^0,c
  8749   001D78                     l10268:
  8750   001D78  5028               	movf	___flmul@sign^0,w,c
  8751   001D7A  1232               	iorwf	(___flmul@prod+3)^0,f,c
  8752   001D7C  C02F  F01C         	movff	___flmul@prod,?___flmul
  8753   001D80  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
  8754   001D84  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
  8755   001D88  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
  8756   001D8C                     l2429:
  8757   001D8C  0012               	return		;funcret
  8758   001D8E                     __end_of___flmul:
  8759                           	callstack 0
  8760                           
  8761 ;; *************** function ___fldiv *****************
  8762 ;; Defined at:
  8763 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  b               4   52[COMRAM] unsigned char 
  8766 ;;  a               4   56[COMRAM] unsigned char 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  grs             4   71[COMRAM] unsigned long 
  8769 ;;  rem             4   64[COMRAM] unsigned long 
  8770 ;;  new_exp         2   69[COMRAM] short 
  8771 ;;  aexp            1   76[COMRAM] unsigned char 
  8772 ;;  bexp            1   75[COMRAM] unsigned char 
  8773 ;;  sign            1   68[COMRAM] unsigned char 
  8774 ;; Return value:  Size  Location     Type
  8775 ;;                  4   52[COMRAM] unsigned char 
  8776 ;; Registers used:
  8777 ;;		wreg, status,2, status,0
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8783 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8784 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8785 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8786 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;Total ram usage:       25 bytes
  8788 ;; Hardware stack levels used: 1
  8789 ;; Hardware stack levels required when called: 4
  8790 ;; This function calls:
  8791 ;;		Nothing
  8792 ;; This function is called by:
  8793 ;;		_CCP_PWM_Set_Duty
  8794 ;;		_CCP_PWM_Mode_Config
  8795 ;;		_main
  8796 ;;		_Ultrasonic_Calculate_Distance
  8797 ;;		_I2C_Master_Mode_Clock_Configurations
  8798 ;;		_EUSART_Baud_Rate_Calculation
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text48
  8803   002142                     __ptext48:
  8804                           	callstack 0
  8805   002142                     ___fldiv:
  8806                           	callstack 23
  8807   002142  5038               	movf	(___fldiv@b+3)^0,w,c
  8808   002144  0B80               	andlw	128
  8809   002146  6E45               	movwf	___fldiv@sign^0,c
  8810   002148  5038               	movf	(___fldiv@b+3)^0,w,c
  8811   00214A  2438               	addwf	(___fldiv@b+3)^0,w,c
  8812   00214C  6E4C               	movwf	___fldiv@bexp^0,c
  8813   00214E  AE37               	btfss	(___fldiv@b+2)^0,7,c
  8814   002150  EFAC  F010         	goto	u10231
  8815   002154  EFAE  F010         	goto	u10230
  8816   002158                     u10231:
  8817   002158  EFAF  F010         	goto	l10012
  8818   00215C                     u10230:
  8819   00215C  804C               	bsf	___fldiv@bexp^0,0,c
  8820   00215E                     l10012:
  8821   00215E  504C               	movf	___fldiv@bexp^0,w,c
  8822   002160  B4D8               	btfsc	status,2,c
  8823   002162  EFB5  F010         	goto	u10241
  8824   002166  EFB7  F010         	goto	u10240
  8825   00216A                     u10241:
  8826   00216A  EFCC  F010         	goto	l10022
  8827   00216E                     u10240:
  8828   00216E  284C               	incf	___fldiv@bexp^0,w,c
  8829   002170  A4D8               	btfss	status,2,c
  8830   002172  EFBD  F010         	goto	u10251
  8831   002176  EFBF  F010         	goto	u10250
  8832   00217A                     u10251:
  8833   00217A  EFC7  F010         	goto	l10018
  8834   00217E                     u10250:
  8835   00217E  0E00               	movlw	0
  8836   002180  6E35               	movwf	___fldiv@b^0,c
  8837   002182  0E00               	movlw	0
  8838   002184  6E36               	movwf	(___fldiv@b+1)^0,c
  8839   002186  0E00               	movlw	0
  8840   002188  6E37               	movwf	(___fldiv@b+2)^0,c
  8841   00218A  0E00               	movlw	0
  8842   00218C  6E38               	movwf	(___fldiv@b+3)^0,c
  8843   00218E                     l10018:
  8844   00218E  8E37               	bsf	(___fldiv@b+2)^0,7,c
  8845   002190  0E00               	movlw	0
  8846   002192  6E38               	movwf	(___fldiv@b+3)^0,c
  8847   002194  EFD4  F010         	goto	l10024
  8848   002198                     l10022:
  8849   002198  0E00               	movlw	0
  8850   00219A  6E35               	movwf	___fldiv@b^0,c
  8851   00219C  0E00               	movlw	0
  8852   00219E  6E36               	movwf	(___fldiv@b+1)^0,c
  8853   0021A0  0E00               	movlw	0
  8854   0021A2  6E37               	movwf	(___fldiv@b+2)^0,c
  8855   0021A4  0E00               	movlw	0
  8856   0021A6  6E38               	movwf	(___fldiv@b+3)^0,c
  8857   0021A8                     l10024:
  8858   0021A8  503C               	movf	(___fldiv@a+3)^0,w,c
  8859   0021AA  0B80               	andlw	128
  8860   0021AC  1A45               	xorwf	___fldiv@sign^0,f,c
  8861   0021AE  503C               	movf	(___fldiv@a+3)^0,w,c
  8862   0021B0  243C               	addwf	(___fldiv@a+3)^0,w,c
  8863   0021B2  6E4D               	movwf	___fldiv@aexp^0,c
  8864   0021B4  AE3B               	btfss	(___fldiv@a+2)^0,7,c
  8865   0021B6  EFDF  F010         	goto	u10261
  8866   0021BA  EFE1  F010         	goto	u10260
  8867   0021BE                     u10261:
  8868   0021BE  EFE2  F010         	goto	l10032
  8869   0021C2                     u10260:
  8870   0021C2  804D               	bsf	___fldiv@aexp^0,0,c
  8871   0021C4                     l10032:
  8872   0021C4  504D               	movf	___fldiv@aexp^0,w,c
  8873   0021C6  B4D8               	btfsc	status,2,c
  8874   0021C8  EFE8  F010         	goto	u10271
  8875   0021CC  EFEA  F010         	goto	u10270
  8876   0021D0                     u10271:
  8877   0021D0  EFFF  F010         	goto	l10042
  8878   0021D4                     u10270:
  8879   0021D4  284D               	incf	___fldiv@aexp^0,w,c
  8880   0021D6  A4D8               	btfss	status,2,c
  8881   0021D8  EFF0  F010         	goto	u10281
  8882   0021DC  EFF2  F010         	goto	u10280
  8883   0021E0                     u10281:
  8884   0021E0  EFFA  F010         	goto	l10038
  8885   0021E4                     u10280:
  8886   0021E4  0E00               	movlw	0
  8887   0021E6  6E39               	movwf	___fldiv@a^0,c
  8888   0021E8  0E00               	movlw	0
  8889   0021EA  6E3A               	movwf	(___fldiv@a+1)^0,c
  8890   0021EC  0E00               	movlw	0
  8891   0021EE  6E3B               	movwf	(___fldiv@a+2)^0,c
  8892   0021F0  0E00               	movlw	0
  8893   0021F2  6E3C               	movwf	(___fldiv@a+3)^0,c
  8894   0021F4                     l10038:
  8895   0021F4  8E3B               	bsf	(___fldiv@a+2)^0,7,c
  8896   0021F6  0E00               	movlw	0
  8897   0021F8  6E3C               	movwf	(___fldiv@a+3)^0,c
  8898   0021FA  EF07  F011         	goto	l10044
  8899   0021FE                     l10042:
  8900   0021FE  0E00               	movlw	0
  8901   002200  6E39               	movwf	___fldiv@a^0,c
  8902   002202  0E00               	movlw	0
  8903   002204  6E3A               	movwf	(___fldiv@a+1)^0,c
  8904   002206  0E00               	movlw	0
  8905   002208  6E3B               	movwf	(___fldiv@a+2)^0,c
  8906   00220A  0E00               	movlw	0
  8907   00220C  6E3C               	movwf	(___fldiv@a+3)^0,c
  8908   00220E                     l10044:
  8909   00220E  5039               	movf	___fldiv@a^0,w,c
  8910   002210  103A               	iorwf	(___fldiv@a+1)^0,w,c
  8911   002212  103B               	iorwf	(___fldiv@a+2)^0,w,c
  8912   002214  103C               	iorwf	(___fldiv@a+3)^0,w,c
  8913   002216  A4D8               	btfss	status,2,c
  8914   002218  EF10  F011         	goto	u10291
  8915   00221C  EF12  F011         	goto	u10290
  8916   002220                     u10291:
  8917   002220  EF2A  F011         	goto	l10056
  8918   002224                     u10290:
  8919   002224  0E00               	movlw	0
  8920   002226  6E35               	movwf	___fldiv@b^0,c
  8921   002228  0E00               	movlw	0
  8922   00222A  6E36               	movwf	(___fldiv@b+1)^0,c
  8923   00222C  0E00               	movlw	0
  8924   00222E  6E37               	movwf	(___fldiv@b+2)^0,c
  8925   002230  0E00               	movlw	0
  8926   002232  6E38               	movwf	(___fldiv@b+3)^0,c
  8927   002234  0E80               	movlw	128
  8928   002236  1237               	iorwf	(___fldiv@b+2)^0,f,c
  8929   002238  0E7F               	movlw	127
  8930   00223A  1238               	iorwf	(___fldiv@b+3)^0,f,c
  8931   00223C                     l10050:
  8932   00223C  5045               	movf	___fldiv@sign^0,w,c
  8933   00223E  1238               	iorwf	(___fldiv@b+3)^0,f,c
  8934   002240  C035  F035         	movff	___fldiv@b,?___fldiv
  8935   002244  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
  8936   002248  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
  8937   00224C  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
  8938   002250  EF6D  F012         	goto	l2393
  8939   002254                     l10056:
  8940   002254  504C               	movf	___fldiv@bexp^0,w,c
  8941   002256  A4D8               	btfss	status,2,c
  8942   002258  EF30  F011         	goto	u10301
  8943   00225C  EF32  F011         	goto	u10300
  8944   002260                     u10301:
  8945   002260  EF3C  F011         	goto	l10064
  8946   002264                     u10300:
  8947   002264  0E00               	movlw	0
  8948   002266  6E35               	movwf	?___fldiv^0,c
  8949   002268  0E00               	movlw	0
  8950   00226A  6E36               	movwf	(?___fldiv+1)^0,c
  8951   00226C  0E00               	movlw	0
  8952   00226E  6E37               	movwf	(?___fldiv+2)^0,c
  8953   002270  0E00               	movlw	0
  8954   002272  6E38               	movwf	(?___fldiv+3)^0,c
  8955   002274  EF6D  F012         	goto	l2393
  8956   002278                     l10064:
  8957   002278  504D               	movf	___fldiv@aexp^0,w,c
  8958   00227A  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
  8959   00227E  6A3E               	clrf	(??___fldiv+1)^0,c
  8960   002280  5E3D               	subwf	??___fldiv^0,f,c
  8961   002282  0E00               	movlw	0
  8962   002284  5A3E               	subwfb	(??___fldiv+1)^0,f,c
  8963   002286  0E7F               	movlw	127
  8964   002288  243D               	addwf	??___fldiv^0,w,c
  8965   00228A  6E46               	movwf	___fldiv@new_exp^0,c
  8966   00228C  0E00               	movlw	0
  8967   00228E  203E               	addwfc	(??___fldiv+1)^0,w,c
  8968   002290  6E47               	movwf	(___fldiv@new_exp+1)^0,c
  8969   002292  C035  F041         	movff	___fldiv@b,___fldiv@rem
  8970   002296  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
  8971   00229A  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
  8972   00229E  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
  8973   0022A2  0E00               	movlw	0
  8974   0022A4  6E35               	movwf	___fldiv@b^0,c
  8975   0022A6  0E00               	movlw	0
  8976   0022A8  6E36               	movwf	(___fldiv@b+1)^0,c
  8977   0022AA  0E00               	movlw	0
  8978   0022AC  6E37               	movwf	(___fldiv@b+2)^0,c
  8979   0022AE  0E00               	movlw	0
  8980   0022B0  6E38               	movwf	(___fldiv@b+3)^0,c
  8981   0022B2  0E00               	movlw	0
  8982   0022B4  6E48               	movwf	___fldiv@grs^0,c
  8983   0022B6  0E00               	movlw	0
  8984   0022B8  6E49               	movwf	(___fldiv@grs+1)^0,c
  8985   0022BA  0E00               	movlw	0
  8986   0022BC  6E4A               	movwf	(___fldiv@grs+2)^0,c
  8987   0022BE  0E00               	movlw	0
  8988   0022C0  6E4B               	movwf	(___fldiv@grs+3)^0,c
  8989   0022C2  0E00               	movlw	0
  8990   0022C4  6E4D               	movwf	___fldiv@aexp^0,c
  8991   0022C6  EF9D  F011         	goto	l2395
  8992   0022CA                     l10074:
  8993   0022CA  504D               	movf	___fldiv@aexp^0,w,c
  8994   0022CC  B4D8               	btfsc	status,2,c
  8995   0022CE  EF6B  F011         	goto	u10311
  8996   0022D2  EF6D  F011         	goto	u10310
  8997   0022D6                     u10311:
  8998   0022D6  EF84  F011         	goto	l10082
  8999   0022DA                     u10310:
  9000   0022DA  90D8               	bcf	status,0,c
  9001   0022DC  3641               	rlcf	___fldiv@rem^0,f,c
  9002   0022DE  3642               	rlcf	(___fldiv@rem+1)^0,f,c
  9003   0022E0  3643               	rlcf	(___fldiv@rem+2)^0,f,c
  9004   0022E2  3644               	rlcf	(___fldiv@rem+3)^0,f,c
  9005   0022E4  90D8               	bcf	status,0,c
  9006   0022E6  3635               	rlcf	___fldiv@b^0,f,c
  9007   0022E8  3636               	rlcf	(___fldiv@b+1)^0,f,c
  9008   0022EA  3637               	rlcf	(___fldiv@b+2)^0,f,c
  9009   0022EC  3638               	rlcf	(___fldiv@b+3)^0,f,c
  9010   0022EE  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
  9011   0022F0  EF7C  F011         	goto	u10321
  9012   0022F4  EF7E  F011         	goto	u10320
  9013   0022F8                     u10321:
  9014   0022F8  EF7F  F011         	goto	l2398
  9015   0022FC                     u10320:
  9016   0022FC  8035               	bsf	___fldiv@b^0,0,c
  9017   0022FE                     l2398:
  9018   0022FE  90D8               	bcf	status,0,c
  9019   002300  3648               	rlcf	___fldiv@grs^0,f,c
  9020   002302  3649               	rlcf	(___fldiv@grs+1)^0,f,c
  9021   002304  364A               	rlcf	(___fldiv@grs+2)^0,f,c
  9022   002306  364B               	rlcf	(___fldiv@grs+3)^0,f,c
  9023   002308                     l10082:
  9024   002308  5039               	movf	___fldiv@a^0,w,c
  9025   00230A  5C41               	subwf	___fldiv@rem^0,w,c
  9026   00230C  503A               	movf	(___fldiv@a+1)^0,w,c
  9027   00230E  5842               	subwfb	(___fldiv@rem+1)^0,w,c
  9028   002310  503B               	movf	(___fldiv@a+2)^0,w,c
  9029   002312  5843               	subwfb	(___fldiv@rem+2)^0,w,c
  9030   002314  503C               	movf	(___fldiv@a+3)^0,w,c
  9031   002316  5844               	subwfb	(___fldiv@rem+3)^0,w,c
  9032   002318  A0D8               	btfss	status,0,c
  9033   00231A  EF91  F011         	goto	u10331
  9034   00231E  EF93  F011         	goto	u10330
  9035   002322                     u10331:
  9036   002322  EF9C  F011         	goto	l10088
  9037   002326                     u10330:
  9038   002326  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
  9039   002328  5039               	movf	___fldiv@a^0,w,c
  9040   00232A  5E41               	subwf	___fldiv@rem^0,f,c
  9041   00232C  503A               	movf	(___fldiv@a+1)^0,w,c
  9042   00232E  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
  9043   002330  503B               	movf	(___fldiv@a+2)^0,w,c
  9044   002332  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
  9045   002334  503C               	movf	(___fldiv@a+3)^0,w,c
  9046   002336  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
  9047   002338                     l10088:
  9048   002338  2A4D               	incf	___fldiv@aexp^0,f,c
  9049   00233A                     l2395:
  9050   00233A  0E19               	movlw	25
  9051   00233C  644D               	cpfsgt	___fldiv@aexp^0,c
  9052   00233E  EFA3  F011         	goto	u10341
  9053   002342  EFA5  F011         	goto	u10340
  9054   002346                     u10341:
  9055   002346  EF65  F011         	goto	l10074
  9056   00234A                     u10340:
  9057   00234A  5041               	movf	___fldiv@rem^0,w,c
  9058   00234C  1042               	iorwf	(___fldiv@rem+1)^0,w,c
  9059   00234E  1043               	iorwf	(___fldiv@rem+2)^0,w,c
  9060   002350  1044               	iorwf	(___fldiv@rem+3)^0,w,c
  9061   002352  B4D8               	btfsc	status,2,c
  9062   002354  EFAE  F011         	goto	u10351
  9063   002358  EFB0  F011         	goto	u10350
  9064   00235C                     u10351:
  9065   00235C  EFC8  F011         	goto	l10100
  9066   002360                     u10350:
  9067   002360  8048               	bsf	___fldiv@grs^0,0,c
  9068   002362  EFC8  F011         	goto	l10100
  9069   002366                     l10094:
  9070   002366  90D8               	bcf	status,0,c
  9071   002368  3635               	rlcf	___fldiv@b^0,f,c
  9072   00236A  3636               	rlcf	(___fldiv@b+1)^0,f,c
  9073   00236C  3637               	rlcf	(___fldiv@b+2)^0,f,c
  9074   00236E  3638               	rlcf	(___fldiv@b+3)^0,f,c
  9075   002370  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
  9076   002372  EFBD  F011         	goto	u10361
  9077   002376  EFBF  F011         	goto	u10360
  9078   00237A                     u10361:
  9079   00237A  EFC0  F011         	goto	l2404
  9080   00237E                     u10360:
  9081   00237E  8035               	bsf	___fldiv@b^0,0,c
  9082   002380                     l2404:
  9083   002380  90D8               	bcf	status,0,c
  9084   002382  3648               	rlcf	___fldiv@grs^0,f,c
  9085   002384  3649               	rlcf	(___fldiv@grs+1)^0,f,c
  9086   002386  364A               	rlcf	(___fldiv@grs+2)^0,f,c
  9087   002388  364B               	rlcf	(___fldiv@grs+3)^0,f,c
  9088   00238A  0646               	decf	___fldiv@new_exp^0,f,c
  9089   00238C  A0D8               	btfss	status,0,c
  9090   00238E  0647               	decf	(___fldiv@new_exp+1)^0,f,c
  9091   002390                     l10100:
  9092   002390  AE37               	btfss	(___fldiv@b+2)^0,7,c
  9093   002392  EFCD  F011         	goto	u10371
  9094   002396  EFCF  F011         	goto	u10370
  9095   00239A                     u10371:
  9096   00239A  EFB3  F011         	goto	l10094
  9097   00239E                     u10370:
  9098   00239E  0E00               	movlw	0
  9099   0023A0  6E4D               	movwf	___fldiv@aexp^0,c
  9100   0023A2  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
  9101   0023A4  EFD6  F011         	goto	u10381
  9102   0023A8  EFD8  F011         	goto	u10380
  9103   0023AC                     u10381:
  9104   0023AC  EFFC  F011         	goto	l2406
  9105   0023B0                     u10380:
  9106   0023B0  0EFF               	movlw	255
  9107   0023B2  1448               	andwf	___fldiv@grs^0,w,c
  9108   0023B4  6E3D               	movwf	??___fldiv^0,c
  9109   0023B6  0EFF               	movlw	255
  9110   0023B8  1449               	andwf	(___fldiv@grs+1)^0,w,c
  9111   0023BA  6E3E               	movwf	(??___fldiv+1)^0,c
  9112   0023BC  0EFF               	movlw	255
  9113   0023BE  144A               	andwf	(___fldiv@grs+2)^0,w,c
  9114   0023C0  6E3F               	movwf	(??___fldiv+2)^0,c
  9115   0023C2  0E7F               	movlw	127
  9116   0023C4  144B               	andwf	(___fldiv@grs+3)^0,w,c
  9117   0023C6  6E40               	movwf	(??___fldiv+3)^0,c
  9118   0023C8  503D               	movf	??___fldiv^0,w,c
  9119   0023CA  103E               	iorwf	(??___fldiv+1)^0,w,c
  9120   0023CC  103F               	iorwf	(??___fldiv+2)^0,w,c
  9121   0023CE  1040               	iorwf	(??___fldiv+3)^0,w,c
  9122   0023D0  B4D8               	btfsc	status,2,c
  9123   0023D2  EFED  F011         	goto	u10391
  9124   0023D6  EFEF  F011         	goto	u10390
  9125   0023DA                     u10391:
  9126   0023DA  EFF3  F011         	goto	l2407
  9127   0023DE                     u10390:
  9128   0023DE                     l10108:
  9129   0023DE  0E01               	movlw	1
  9130   0023E0  6E4D               	movwf	___fldiv@aexp^0,c
  9131   0023E2  EFFC  F011         	goto	l2406
  9132   0023E6                     l2407:
  9133   0023E6  A035               	btfss	___fldiv@b^0,0,c
  9134   0023E8  EFF8  F011         	goto	u10401
  9135   0023EC  EFFA  F011         	goto	u10400
  9136   0023F0                     u10401:
  9137   0023F0  EFFC  F011         	goto	l2406
  9138   0023F4                     u10400:
  9139   0023F4  EFEF  F011         	goto	l10108
  9140   0023F8                     l2406:
  9141   0023F8  504D               	movf	___fldiv@aexp^0,w,c
  9142   0023FA  B4D8               	btfsc	status,2,c
  9143   0023FC  EF02  F012         	goto	u10411
  9144   002400  EF04  F012         	goto	u10410
  9145   002404                     u10411:
  9146   002404  EF28  F012         	goto	l10120
  9147   002408                     u10410:
  9148   002408  0E01               	movlw	1
  9149   00240A  2635               	addwf	___fldiv@b^0,f,c
  9150   00240C  0E00               	movlw	0
  9151   00240E  2236               	addwfc	(___fldiv@b+1)^0,f,c
  9152   002410  2237               	addwfc	(___fldiv@b+2)^0,f,c
  9153   002412  2238               	addwfc	(___fldiv@b+3)^0,f,c
  9154   002414  A038               	btfss	(___fldiv@b+3)^0,0,c
  9155   002416  EF0F  F012         	goto	u10421
  9156   00241A  EF11  F012         	goto	u10420
  9157   00241E                     u10421:
  9158   00241E  EF28  F012         	goto	l10120
  9159   002422                     u10420:
  9160   002422  C035  F03D         	movff	___fldiv@b,??___fldiv
  9161   002426  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
  9162   00242A  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
  9163   00242E  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
  9164   002432  3440               	rlcf	(??___fldiv+3)^0,w,c
  9165   002434  3240               	rrcf	(??___fldiv+3)^0,f,c
  9166   002436  323F               	rrcf	(??___fldiv+2)^0,f,c
  9167   002438  323E               	rrcf	(??___fldiv+1)^0,f,c
  9168   00243A  323D               	rrcf	??___fldiv^0,f,c
  9169   00243C  C03D  F035         	movff	??___fldiv,___fldiv@b
  9170   002440  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
  9171   002444  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
  9172   002448  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
  9173   00244C  4A46               	infsnz	___fldiv@new_exp^0,f,c
  9174   00244E  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
  9175   002450                     l10120:
  9176   002450  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9177   002452  EF33  F012         	goto	u10431
  9178   002456  5047               	movf	(___fldiv@new_exp+1)^0,w,c
  9179   002458  E108               	bnz	u10430
  9180   00245A  2846               	incf	___fldiv@new_exp^0,w,c
  9181   00245C  A0D8               	btfss	status,0,c
  9182   00245E  EF33  F012         	goto	u10431
  9183   002462  EF35  F012         	goto	u10430
  9184   002466                     u10431:
  9185   002466  EF40  F012         	goto	l10124
  9186   00246A                     u10430:
  9187   00246A  0E00               	movlw	0
  9188   00246C  6E47               	movwf	(___fldiv@new_exp+1)^0,c
  9189   00246E  6846               	setf	___fldiv@new_exp^0,c
  9190   002470  0E00               	movlw	0
  9191   002472  6E35               	movwf	___fldiv@b^0,c
  9192   002474  0E00               	movlw	0
  9193   002476  6E36               	movwf	(___fldiv@b+1)^0,c
  9194   002478  0E00               	movlw	0
  9195   00247A  6E37               	movwf	(___fldiv@b+2)^0,c
  9196   00247C  0E00               	movlw	0
  9197   00247E  6E38               	movwf	(___fldiv@b+3)^0,c
  9198   002480                     l10124:
  9199   002480  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9200   002482  EF4D  F012         	goto	u10440
  9201   002486  5047               	movf	(___fldiv@new_exp+1)^0,w,c
  9202   002488  E106               	bnz	u10441
  9203   00248A  0446               	decf	___fldiv@new_exp^0,w,c
  9204   00248C  B0D8               	btfsc	status,0,c
  9205   00248E  EF4B  F012         	goto	u10441
  9206   002492  EF4D  F012         	goto	u10440
  9207   002496                     u10441:
  9208   002496  EF5B  F012         	goto	l10128
  9209   00249A                     u10440:
  9210   00249A  0E00               	movlw	0
  9211   00249C  6E47               	movwf	(___fldiv@new_exp+1)^0,c
  9212   00249E  0E00               	movlw	0
  9213   0024A0  6E46               	movwf	___fldiv@new_exp^0,c
  9214   0024A2  0E00               	movlw	0
  9215   0024A4  6E35               	movwf	___fldiv@b^0,c
  9216   0024A6  0E00               	movlw	0
  9217   0024A8  6E36               	movwf	(___fldiv@b+1)^0,c
  9218   0024AA  0E00               	movlw	0
  9219   0024AC  6E37               	movwf	(___fldiv@b+2)^0,c
  9220   0024AE  0E00               	movlw	0
  9221   0024B0  6E38               	movwf	(___fldiv@b+3)^0,c
  9222   0024B2  0E00               	movlw	0
  9223   0024B4  6E45               	movwf	___fldiv@sign^0,c
  9224   0024B6                     l10128:
  9225   0024B6  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
  9226   0024BA  A04C               	btfss	___fldiv@bexp^0,0,c
  9227   0024BC  EF62  F012         	goto	u10451
  9228   0024C0  EF64  F012         	goto	u10450
  9229   0024C4                     u10451:
  9230   0024C4  EF67  F012         	goto	l10134
  9231   0024C8                     u10450:
  9232   0024C8  8E37               	bsf	(___fldiv@b+2)^0,7,c
  9233   0024CA  EF68  F012         	goto	l10136
  9234   0024CE                     l10134:
  9235   0024CE  9E37               	bcf	(___fldiv@b+2)^0,7,c
  9236   0024D0                     l10136:
  9237   0024D0  90D8               	bcf	status,0,c
  9238   0024D2  304C               	rrcf	___fldiv@bexp^0,w,c
  9239   0024D4  6E38               	movwf	(___fldiv@b+3)^0,c
  9240   0024D6  EF1E  F011         	goto	l10050
  9241   0024DA                     l2393:
  9242   0024DA  0012               	return		;funcret
  9243   0024DC                     __end_of___fldiv:
  9244                           	callstack 0
  9245                           
  9246 ;; *************** function ___fladd *****************
  9247 ;; Defined at:
  9248 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  b               4   77[COMRAM] unsigned char 
  9251 ;;  a               4   81[COMRAM] unsigned char 
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;  grs             1   92[COMRAM] unsigned char 
  9254 ;;  bexp            1   91[COMRAM] unsigned char 
  9255 ;;  aexp            1   90[COMRAM] unsigned char 
  9256 ;;  signs           1   89[COMRAM] unsigned char 
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  4   77[COMRAM] unsigned char 
  9259 ;; Registers used:
  9260 ;;		wreg, status,2, status,0
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9266 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9269 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9270 ;;Total ram usage:       16 bytes
  9271 ;; Hardware stack levels used: 1
  9272 ;; Hardware stack levels required when called: 4
  9273 ;; This function calls:
  9274 ;;		Nothing
  9275 ;; This function is called by:
  9276 ;;		_CCP_PWM_Set_Duty
  9277 ;;		_CCP_PWM_Mode_Config
  9278 ;;		___flsub
  9279 ;;		_roundf
  9280 ;;		_I2C_Master_Mode_Clock_Configurations
  9281 ;;		_EUSART_Baud_Rate_Calculation
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           	psect	text49
  9286   00103C                     __ptext49:
  9287                           	callstack 0
  9288   00103C                     ___fladd:
  9289                           	callstack 24
  9290   00103C  5051               	movf	(___fladd@b+3)^0,w,c
  9291   00103E  0B80               	andlw	128
  9292   001040  6E5A               	movwf	___fladd@signs^0,c
  9293   001042  5051               	movf	(___fladd@b+3)^0,w,c
  9294   001044  2451               	addwf	(___fladd@b+3)^0,w,c
  9295   001046  6E5C               	movwf	___fladd@bexp^0,c
  9296   001048  AE50               	btfss	(___fladd@b+2)^0,7,c
  9297   00104A  EF29  F008         	goto	u9841
  9298   00104E  EF2B  F008         	goto	u9840
  9299   001052                     u9841:
  9300   001052  EF2C  F008         	goto	l9810
  9301   001056                     u9840:
  9302   001056  805C               	bsf	___fladd@bexp^0,0,c
  9303   001058                     l9810:
  9304   001058  505C               	movf	___fladd@bexp^0,w,c
  9305   00105A  B4D8               	btfsc	status,2,c
  9306   00105C  EF32  F008         	goto	u9851
  9307   001060  EF34  F008         	goto	u9850
  9308   001064                     u9851:
  9309   001064  EF49  F008         	goto	l9820
  9310   001068                     u9850:
  9311   001068  285C               	incf	___fladd@bexp^0,w,c
  9312   00106A  A4D8               	btfss	status,2,c
  9313   00106C  EF3A  F008         	goto	u9861
  9314   001070  EF3C  F008         	goto	u9860
  9315   001074                     u9861:
  9316   001074  EF44  F008         	goto	l9816
  9317   001078                     u9860:
  9318   001078  0E00               	movlw	0
  9319   00107A  6E4E               	movwf	___fladd@b^0,c
  9320   00107C  0E00               	movlw	0
  9321   00107E  6E4F               	movwf	(___fladd@b+1)^0,c
  9322   001080  0E00               	movlw	0
  9323   001082  6E50               	movwf	(___fladd@b+2)^0,c
  9324   001084  0E00               	movlw	0
  9325   001086  6E51               	movwf	(___fladd@b+3)^0,c
  9326   001088                     l9816:
  9327   001088  8E50               	bsf	(___fladd@b+2)^0,7,c
  9328   00108A  0E00               	movlw	0
  9329   00108C  6E51               	movwf	(___fladd@b+3)^0,c
  9330   00108E  EF51  F008         	goto	l9822
  9331   001092                     l9820:
  9332   001092  0E00               	movlw	0
  9333   001094  6E4E               	movwf	___fladd@b^0,c
  9334   001096  0E00               	movlw	0
  9335   001098  6E4F               	movwf	(___fladd@b+1)^0,c
  9336   00109A  0E00               	movlw	0
  9337   00109C  6E50               	movwf	(___fladd@b+2)^0,c
  9338   00109E  0E00               	movlw	0
  9339   0010A0  6E51               	movwf	(___fladd@b+3)^0,c
  9340   0010A2                     l9822:
  9341   0010A2  5055               	movf	(___fladd@a+3)^0,w,c
  9342   0010A4  0B80               	andlw	128
  9343   0010A6  6E5B               	movwf	___fladd@aexp^0,c
  9344   0010A8  505A               	movf	___fladd@signs^0,w,c
  9345   0010AA  185B               	xorwf	___fladd@aexp^0,w,c
  9346   0010AC  B4D8               	btfsc	status,2,c
  9347   0010AE  EF5B  F008         	goto	u9871
  9348   0010B2  EF5D  F008         	goto	u9870
  9349   0010B6                     u9871:
  9350   0010B6  EF5E  F008         	goto	l9828
  9351   0010BA                     u9870:
  9352   0010BA  8C5A               	bsf	___fladd@signs^0,6,c
  9353   0010BC                     l9828:
  9354   0010BC  5055               	movf	(___fladd@a+3)^0,w,c
  9355   0010BE  2455               	addwf	(___fladd@a+3)^0,w,c
  9356   0010C0  6E5B               	movwf	___fladd@aexp^0,c
  9357   0010C2  AE54               	btfss	(___fladd@a+2)^0,7,c
  9358   0010C4  EF66  F008         	goto	u9881
  9359   0010C8  EF68  F008         	goto	u9880
  9360   0010CC                     u9881:
  9361   0010CC  EF69  F008         	goto	l9834
  9362   0010D0                     u9880:
  9363   0010D0  805B               	bsf	___fladd@aexp^0,0,c
  9364   0010D2                     l9834:
  9365   0010D2  505B               	movf	___fladd@aexp^0,w,c
  9366   0010D4  B4D8               	btfsc	status,2,c
  9367   0010D6  EF6F  F008         	goto	u9891
  9368   0010DA  EF71  F008         	goto	u9890
  9369   0010DE                     u9891:
  9370   0010DE  EF86  F008         	goto	l9844
  9371   0010E2                     u9890:
  9372   0010E2  285B               	incf	___fladd@aexp^0,w,c
  9373   0010E4  A4D8               	btfss	status,2,c
  9374   0010E6  EF77  F008         	goto	u9901
  9375   0010EA  EF79  F008         	goto	u9900
  9376   0010EE                     u9901:
  9377   0010EE  EF81  F008         	goto	l9840
  9378   0010F2                     u9900:
  9379   0010F2  0E00               	movlw	0
  9380   0010F4  6E52               	movwf	___fladd@a^0,c
  9381   0010F6  0E00               	movlw	0
  9382   0010F8  6E53               	movwf	(___fladd@a+1)^0,c
  9383   0010FA  0E00               	movlw	0
  9384   0010FC  6E54               	movwf	(___fladd@a+2)^0,c
  9385   0010FE  0E00               	movlw	0
  9386   001100  6E55               	movwf	(___fladd@a+3)^0,c
  9387   001102                     l9840:
  9388   001102  8E54               	bsf	(___fladd@a+2)^0,7,c
  9389   001104  0E00               	movlw	0
  9390   001106  6E55               	movwf	(___fladd@a+3)^0,c
  9391   001108  EF8E  F008         	goto	l9846
  9392   00110C                     l9844:
  9393   00110C  0E00               	movlw	0
  9394   00110E  6E52               	movwf	___fladd@a^0,c
  9395   001110  0E00               	movlw	0
  9396   001112  6E53               	movwf	(___fladd@a+1)^0,c
  9397   001114  0E00               	movlw	0
  9398   001116  6E54               	movwf	(___fladd@a+2)^0,c
  9399   001118  0E00               	movlw	0
  9400   00111A  6E55               	movwf	(___fladd@a+3)^0,c
  9401   00111C                     l9846:
  9402   00111C  505C               	movf	___fladd@bexp^0,w,c
  9403   00111E  5C5B               	subwf	___fladd@aexp^0,w,c
  9404   001120  B0D8               	btfsc	status,0,c
  9405   001122  EF95  F008         	goto	u9911
  9406   001126  EF97  F008         	goto	u9910
  9407   00112A                     u9911:
  9408   00112A  EFBE  F008         	goto	l9882
  9409   00112E                     u9910:
  9410   00112E  AC5A               	btfss	___fladd@signs^0,6,c
  9411   001130  EF9C  F008         	goto	u9921
  9412   001134  EF9E  F008         	goto	u9920
  9413   001138                     u9921:
  9414   001138  EFA0  F008         	goto	l9852
  9415   00113C                     u9920:
  9416   00113C  0E80               	movlw	128
  9417   00113E  1A5A               	xorwf	___fladd@signs^0,f,c
  9418   001140                     l9852:
  9419   001140  C05C  F05D         	movff	___fladd@bexp,___fladd@grs
  9420   001144  C05B  F05C         	movff	___fladd@aexp,___fladd@bexp
  9421   001148  C05D  F05B         	movff	___fladd@grs,___fladd@aexp
  9422   00114C  C04E  F05D         	movff	___fladd@b,___fladd@grs
  9423   001150  C052  F04E         	movff	___fladd@a,___fladd@b
  9424   001154  C05D  F052         	movff	___fladd@grs,___fladd@a
  9425   001158  C04F  F05D         	movff	___fladd@b+1,___fladd@grs
  9426   00115C  C053  F04F         	movff	___fladd@a+1,___fladd@b+1
  9427   001160  C05D  F053         	movff	___fladd@grs,___fladd@a+1
  9428   001164  C050  F05D         	movff	___fladd@b+2,___fladd@grs
  9429   001168  C054  F050         	movff	___fladd@a+2,___fladd@b+2
  9430   00116C  C05D  F054         	movff	___fladd@grs,___fladd@a+2
  9431   001170  C051  F05D         	movff	___fladd@b+3,___fladd@grs
  9432   001174  C055  F051         	movff	___fladd@a+3,___fladd@b+3
  9433   001178  C05D  F055         	movff	___fladd@grs,___fladd@a+3
  9434   00117C                     l9882:
  9435   00117C  0E00               	movlw	0
  9436   00117E  6E5D               	movwf	___fladd@grs^0,c
  9437   001180  505C               	movf	___fladd@bexp^0,w,c
  9438   001182  C05B  F056         	movff	___fladd@aexp,??___fladd
  9439   001186  6A57               	clrf	(??___fladd+1)^0,c
  9440   001188  5E56               	subwf	??___fladd^0,f,c
  9441   00118A  0E00               	movlw	0
  9442   00118C  5A57               	subwfb	(??___fladd+1)^0,f,c
  9443   00118E  BE57               	btfsc	(??___fladd+1)^0,7,c
  9444   001190  EFD3  F008         	goto	u9931
  9445   001194  5057               	movf	(??___fladd+1)^0,w,c
  9446   001196  E109               	bnz	u9930
  9447   001198  0E1A               	movlw	26
  9448   00119A  5C56               	subwf	??___fladd^0,w,c
  9449   00119C  A0D8               	btfss	status,0,c
  9450   00119E  EFD3  F008         	goto	u9931
  9451   0011A2  EFD5  F008         	goto	u9930
  9452   0011A6                     u9931:
  9453   0011A6  EF0C  F009         	goto	l2340
  9454   0011AA                     u9930:
  9455   0011AA  504E               	movf	___fladd@b^0,w,c
  9456   0011AC  104F               	iorwf	(___fladd@b+1)^0,w,c
  9457   0011AE  1050               	iorwf	(___fladd@b+2)^0,w,c
  9458   0011B0  1051               	iorwf	(___fladd@b+3)^0,w,c
  9459   0011B2  A4D8               	btfss	status,2,c
  9460   0011B4  EFDE  F008         	goto	u9941
  9461   0011B8  EFE1  F008         	goto	u9940
  9462   0011BC                     u9941:
  9463   0011BC  0E01               	movlw	1
  9464   0011BE  EFE2  F008         	goto	u9950
  9465   0011C2                     u9940:
  9466   0011C2  0E00               	movlw	0
  9467   0011C4                     u9950:
  9468   0011C4  6E5D               	movwf	___fladd@grs^0,c
  9469   0011C6  0E00               	movlw	0
  9470   0011C8  6E4E               	movwf	___fladd@b^0,c
  9471   0011CA  0E00               	movlw	0
  9472   0011CC  6E4F               	movwf	(___fladd@b+1)^0,c
  9473   0011CE  0E00               	movlw	0
  9474   0011D0  6E50               	movwf	(___fladd@b+2)^0,c
  9475   0011D2  0E00               	movlw	0
  9476   0011D4  6E51               	movwf	(___fladd@b+3)^0,c
  9477   0011D6  C05B  F05C         	movff	___fladd@aexp,___fladd@bexp
  9478   0011DA  EF15  F009         	goto	l2339
  9479   0011DE                     l2341:
  9480   0011DE  A05D               	btfss	___fladd@grs^0,0,c
  9481   0011E0  EFF4  F008         	goto	u9961
  9482   0011E4  EFF6  F008         	goto	u9960
  9483   0011E8                     u9961:
  9484   0011E8  EFFC  F008         	goto	l9894
  9485   0011EC                     u9960:
  9486   0011EC  90D8               	bcf	status,0,c
  9487   0011EE  305D               	rrcf	___fladd@grs^0,w,c
  9488   0011F0  0901               	iorlw	1
  9489   0011F2  6E5D               	movwf	___fladd@grs^0,c
  9490   0011F4  EFFE  F008         	goto	l9896
  9491   0011F8                     l9894:
  9492   0011F8  90D8               	bcf	status,0,c
  9493   0011FA  325D               	rrcf	___fladd@grs^0,f,c
  9494   0011FC                     l9896:
  9495   0011FC  A04E               	btfss	___fladd@b^0,0,c
  9496   0011FE  EF03  F009         	goto	u9971
  9497   001202  EF05  F009         	goto	u9970
  9498   001206                     u9971:
  9499   001206  EF06  F009         	goto	l9900
  9500   00120A                     u9970:
  9501   00120A  8E5D               	bsf	___fladd@grs^0,7,c
  9502   00120C                     l9900:
  9503   00120C  3451               	rlcf	(___fladd@b+3)^0,w,c
  9504   00120E  3251               	rrcf	(___fladd@b+3)^0,f,c
  9505   001210  3250               	rrcf	(___fladd@b+2)^0,f,c
  9506   001212  324F               	rrcf	(___fladd@b+1)^0,f,c
  9507   001214  324E               	rrcf	___fladd@b^0,f,c
  9508   001216  2A5C               	incf	___fladd@bexp^0,f,c
  9509   001218                     l2340:
  9510   001218  505B               	movf	___fladd@aexp^0,w,c
  9511   00121A  5C5C               	subwf	___fladd@bexp^0,w,c
  9512   00121C  A0D8               	btfss	status,0,c
  9513   00121E  EF13  F009         	goto	u9981
  9514   001222  EF15  F009         	goto	u9980
  9515   001226                     u9981:
  9516   001226  EFEF  F008         	goto	l2341
  9517   00122A                     u9980:
  9518   00122A                     l2339:
  9519   00122A  BC5A               	btfsc	___fladd@signs^0,6,c
  9520   00122C  EF1A  F009         	goto	u9991
  9521   001230  EF1C  F009         	goto	u9990
  9522   001234                     u9991:
  9523   001234  EF5C  F009         	goto	l9928
  9524   001238                     u9990:
  9525   001238  505C               	movf	___fladd@bexp^0,w,c
  9526   00123A  A4D8               	btfss	status,2,c
  9527   00123C  EF22  F009         	goto	u10001
  9528   001240  EF24  F009         	goto	u10000
  9529   001244                     u10001:
  9530   001244  EF2E  F009         	goto	l9910
  9531   001248                     u10000:
  9532   001248  0E00               	movlw	0
  9533   00124A  6E4E               	movwf	?___fladd^0,c
  9534   00124C  0E00               	movlw	0
  9535   00124E  6E4F               	movwf	(?___fladd+1)^0,c
  9536   001250  0E00               	movlw	0
  9537   001252  6E50               	movwf	(?___fladd+2)^0,c
  9538   001254  0E00               	movlw	0
  9539   001256  6E51               	movwf	(?___fladd+3)^0,c
  9540   001258  EF7D  F00A         	goto	l2348
  9541   00125C                     l9910:
  9542   00125C  5052               	movf	___fladd@a^0,w,c
  9543   00125E  264E               	addwf	___fladd@b^0,f,c
  9544   001260  5053               	movf	(___fladd@a+1)^0,w,c
  9545   001262  224F               	addwfc	(___fladd@b+1)^0,f,c
  9546   001264  5054               	movf	(___fladd@a+2)^0,w,c
  9547   001266  2250               	addwfc	(___fladd@b+2)^0,f,c
  9548   001268  5055               	movf	(___fladd@a+3)^0,w,c
  9549   00126A  2251               	addwfc	(___fladd@b+3)^0,f,c
  9550   00126C  A051               	btfss	(___fladd@b+3)^0,0,c
  9551   00126E  EF3B  F009         	goto	u10011
  9552   001272  EF3D  F009         	goto	u10010
  9553   001276                     u10011:
  9554   001276  EFE9  F009         	goto	l9964
  9555   00127A                     u10010:
  9556   00127A  A05D               	btfss	___fladd@grs^0,0,c
  9557   00127C  EF42  F009         	goto	u10021
  9558   001280  EF44  F009         	goto	u10020
  9559   001284                     u10021:
  9560   001284  EF4A  F009         	goto	l9918
  9561   001288                     u10020:
  9562   001288  90D8               	bcf	status,0,c
  9563   00128A  305D               	rrcf	___fladd@grs^0,w,c
  9564   00128C  0901               	iorlw	1
  9565   00128E  6E5D               	movwf	___fladd@grs^0,c
  9566   001290  EF4C  F009         	goto	l9920
  9567   001294                     l9918:
  9568   001294  90D8               	bcf	status,0,c
  9569   001296  325D               	rrcf	___fladd@grs^0,f,c
  9570   001298                     l9920:
  9571   001298  A04E               	btfss	___fladd@b^0,0,c
  9572   00129A  EF51  F009         	goto	u10031
  9573   00129E  EF53  F009         	goto	u10030
  9574   0012A2                     u10031:
  9575   0012A2  EF54  F009         	goto	l9924
  9576   0012A6                     u10030:
  9577   0012A6  8E5D               	bsf	___fladd@grs^0,7,c
  9578   0012A8                     l9924:
  9579   0012A8  3451               	rlcf	(___fladd@b+3)^0,w,c
  9580   0012AA  3251               	rrcf	(___fladd@b+3)^0,f,c
  9581   0012AC  3250               	rrcf	(___fladd@b+2)^0,f,c
  9582   0012AE  324F               	rrcf	(___fladd@b+1)^0,f,c
  9583   0012B0  324E               	rrcf	___fladd@b^0,f,c
  9584   0012B2  2A5C               	incf	___fladd@bexp^0,f,c
  9585   0012B4  EFE9  F009         	goto	l9964
  9586   0012B8                     l9928:
  9587   0012B8  5052               	movf	___fladd@a^0,w,c
  9588   0012BA  5C4E               	subwf	___fladd@b^0,w,c
  9589   0012BC  5053               	movf	(___fladd@a+1)^0,w,c
  9590   0012BE  584F               	subwfb	(___fladd@b+1)^0,w,c
  9591   0012C0  5054               	movf	(___fladd@a+2)^0,w,c
  9592   0012C2  5850               	subwfb	(___fladd@b+2)^0,w,c
  9593   0012C4  5051               	movf	(___fladd@b+3)^0,w,c
  9594   0012C6  0A80               	xorlw	128
  9595   0012C8  6E56               	movwf	??___fladd^0,c
  9596   0012CA  5055               	movf	(___fladd@a+3)^0,w,c
  9597   0012CC  0A80               	xorlw	128
  9598   0012CE  5856               	subwfb	??___fladd^0,w,c
  9599   0012D0  B0D8               	btfsc	status,0,c
  9600   0012D2  EF6D  F009         	goto	u10041
  9601   0012D6  EF6F  F009         	goto	u10040
  9602   0012DA                     u10041:
  9603   0012DA  EF9A  F009         	goto	l9938
  9604   0012DE                     u10040:
  9605   0012DE  504E               	movf	___fladd@b^0,w,c
  9606   0012E0  5C52               	subwf	___fladd@a^0,w,c
  9607   0012E2  6E56               	movwf	??___fladd^0,c
  9608   0012E4  504F               	movf	(___fladd@b+1)^0,w,c
  9609   0012E6  5853               	subwfb	(___fladd@a+1)^0,w,c
  9610   0012E8  6E57               	movwf	(??___fladd+1)^0,c
  9611   0012EA  5050               	movf	(___fladd@b+2)^0,w,c
  9612   0012EC  5854               	subwfb	(___fladd@a+2)^0,w,c
  9613   0012EE  6E58               	movwf	(??___fladd+2)^0,c
  9614   0012F0  5051               	movf	(___fladd@b+3)^0,w,c
  9615   0012F2  5855               	subwfb	(___fladd@a+3)^0,w,c
  9616   0012F4  6E59               	movwf	(??___fladd+3)^0,c
  9617   0012F6  0EFF               	movlw	255
  9618   0012F8  2456               	addwf	??___fladd^0,w,c
  9619   0012FA  6E4E               	movwf	___fladd@b^0,c
  9620   0012FC  0EFF               	movlw	255
  9621   0012FE  2057               	addwfc	(??___fladd+1)^0,w,c
  9622   001300  6E4F               	movwf	(___fladd@b+1)^0,c
  9623   001302  0EFF               	movlw	255
  9624   001304  2058               	addwfc	(??___fladd+2)^0,w,c
  9625   001306  6E50               	movwf	(___fladd@b+2)^0,c
  9626   001308  0EFF               	movlw	255
  9627   00130A  2059               	addwfc	(??___fladd+3)^0,w,c
  9628   00130C  6E51               	movwf	(___fladd@b+3)^0,c
  9629   00130E  0E80               	movlw	128
  9630   001310  1A5A               	xorwf	___fladd@signs^0,f,c
  9631   001312  6C5D               	negf	___fladd@grs^0,c
  9632   001314  505D               	movf	___fladd@grs^0,w,c
  9633   001316  A4D8               	btfss	status,2,c
  9634   001318  EF90  F009         	goto	u10051
  9635   00131C  EF92  F009         	goto	u10050
  9636   001320                     u10051:
  9637   001320  EFA2  F009         	goto	l2356
  9638   001324                     u10050:
  9639   001324  0E01               	movlw	1
  9640   001326  264E               	addwf	___fladd@b^0,f,c
  9641   001328  0E00               	movlw	0
  9642   00132A  224F               	addwfc	(___fladd@b+1)^0,f,c
  9643   00132C  2250               	addwfc	(___fladd@b+2)^0,f,c
  9644   00132E  2251               	addwfc	(___fladd@b+3)^0,f,c
  9645   001330  EFA2  F009         	goto	l2356
  9646   001334                     l9938:
  9647   001334  5052               	movf	___fladd@a^0,w,c
  9648   001336  5E4E               	subwf	___fladd@b^0,f,c
  9649   001338  5053               	movf	(___fladd@a+1)^0,w,c
  9650   00133A  5A4F               	subwfb	(___fladd@b+1)^0,f,c
  9651   00133C  5054               	movf	(___fladd@a+2)^0,w,c
  9652   00133E  5A50               	subwfb	(___fladd@b+2)^0,f,c
  9653   001340  5055               	movf	(___fladd@a+3)^0,w,c
  9654   001342  5A51               	subwfb	(___fladd@b+3)^0,f,c
  9655   001344                     l2356:
  9656   001344  504E               	movf	___fladd@b^0,w,c
  9657   001346  104F               	iorwf	(___fladd@b+1)^0,w,c
  9658   001348  1050               	iorwf	(___fladd@b+2)^0,w,c
  9659   00134A  1051               	iorwf	(___fladd@b+3)^0,w,c
  9660   00134C  A4D8               	btfss	status,2,c
  9661   00134E  EFAB  F009         	goto	u10061
  9662   001352  EFAD  F009         	goto	u10060
  9663   001356                     u10061:
  9664   001356  EFE2  F009         	goto	l9962
  9665   00135A                     u10060:
  9666   00135A  505D               	movf	___fladd@grs^0,w,c
  9667   00135C  A4D8               	btfss	status,2,c
  9668   00135E  EFB3  F009         	goto	u10071
  9669   001362  EFB5  F009         	goto	u10070
  9670   001366                     u10071:
  9671   001366  EFE2  F009         	goto	l9962
  9672   00136A                     u10070:
  9673   00136A  0E00               	movlw	0
  9674   00136C  6E4E               	movwf	?___fladd^0,c
  9675   00136E  0E00               	movlw	0
  9676   001370  6E4F               	movwf	(?___fladd+1)^0,c
  9677   001372  0E00               	movlw	0
  9678   001374  6E50               	movwf	(?___fladd+2)^0,c
  9679   001376  0E00               	movlw	0
  9680   001378  6E51               	movwf	(?___fladd+3)^0,c
  9681   00137A  EF7D  F00A         	goto	l2348
  9682   00137E                     l9946:
  9683   00137E  90D8               	bcf	status,0,c
  9684   001380  364E               	rlcf	___fladd@b^0,f,c
  9685   001382  364F               	rlcf	(___fladd@b+1)^0,f,c
  9686   001384  3650               	rlcf	(___fladd@b+2)^0,f,c
  9687   001386  3651               	rlcf	(___fladd@b+3)^0,f,c
  9688   001388  AE5D               	btfss	___fladd@grs^0,7,c
  9689   00138A  EFC9  F009         	goto	u10081
  9690   00138E  EFCB  F009         	goto	u10080
  9691   001392                     u10081:
  9692   001392  EFCC  F009         	goto	l9952
  9693   001396                     u10080:
  9694   001396  804E               	bsf	___fladd@b^0,0,c
  9695   001398                     l9952:
  9696   001398  A05D               	btfss	___fladd@grs^0,0,c
  9697   00139A  EFD1  F009         	goto	u10091
  9698   00139E  EFD3  F009         	goto	u10090
  9699   0013A2                     u10091:
  9700   0013A2  EFD7  F009         	goto	l9956
  9701   0013A6                     u10090:
  9702   0013A6  80D8               	bsf	status,0,c
  9703   0013A8  365D               	rlcf	___fladd@grs^0,f,c
  9704   0013AA  EFD9  F009         	goto	l9958
  9705   0013AE                     l9956:
  9706   0013AE  90D8               	bcf	status,0,c
  9707   0013B0  365D               	rlcf	___fladd@grs^0,f,c
  9708   0013B2                     l9958:
  9709   0013B2  505C               	movf	___fladd@bexp^0,w,c
  9710   0013B4  B4D8               	btfsc	status,2,c
  9711   0013B6  EFDF  F009         	goto	u10101
  9712   0013BA  EFE1  F009         	goto	u10100
  9713   0013BE                     u10101:
  9714   0013BE  EFE2  F009         	goto	l9962
  9715   0013C2                     u10100:
  9716   0013C2  065C               	decf	___fladd@bexp^0,f,c
  9717   0013C4                     l9962:
  9718   0013C4  AE50               	btfss	(___fladd@b+2)^0,7,c
  9719   0013C6  EFE7  F009         	goto	u10111
  9720   0013CA  EFE9  F009         	goto	u10110
  9721   0013CE                     u10111:
  9722   0013CE  EFBF  F009         	goto	l9946
  9723   0013D2                     u10110:
  9724   0013D2                     l9964:
  9725   0013D2  0E00               	movlw	0
  9726   0013D4  6E5B               	movwf	___fladd@aexp^0,c
  9727   0013D6  AE5D               	btfss	___fladd@grs^0,7,c
  9728   0013D8  EFF0  F009         	goto	u10121
  9729   0013DC  EFF2  F009         	goto	u10120
  9730   0013E0                     u10121:
  9731   0013E0  EF0A  F00A         	goto	l2365
  9732   0013E4                     u10120:
  9733   0013E4  C05D  F056         	movff	___fladd@grs,??___fladd
  9734   0013E8  0E7F               	movlw	127
  9735   0013EA  1656               	andwf	??___fladd^0,f,c
  9736   0013EC  B4D8               	btfsc	status,2,c
  9737   0013EE  EFFB  F009         	goto	u10131
  9738   0013F2  EFFD  F009         	goto	u10130
  9739   0013F6                     u10131:
  9740   0013F6  EF01  F00A         	goto	l2366
  9741   0013FA                     u10130:
  9742   0013FA                     l9970:
  9743   0013FA  0E01               	movlw	1
  9744   0013FC  6E5B               	movwf	___fladd@aexp^0,c
  9745   0013FE  EF0A  F00A         	goto	l2365
  9746   001402                     l2366:
  9747   001402  A04E               	btfss	___fladd@b^0,0,c
  9748   001404  EF06  F00A         	goto	u10141
  9749   001408  EF08  F00A         	goto	u10140
  9750   00140C                     u10141:
  9751   00140C  EF0A  F00A         	goto	l2365
  9752   001410                     u10140:
  9753   001410  EFFD  F009         	goto	l9970
  9754   001414                     l2365:
  9755   001414  505B               	movf	___fladd@aexp^0,w,c
  9756   001416  B4D8               	btfsc	status,2,c
  9757   001418  EF10  F00A         	goto	u10151
  9758   00141C  EF12  F00A         	goto	u10150
  9759   001420                     u10151:
  9760   001420  EF3D  F00A         	goto	l9982
  9761   001424                     u10150:
  9762   001424  0E01               	movlw	1
  9763   001426  264E               	addwf	___fladd@b^0,f,c
  9764   001428  0E00               	movlw	0
  9765   00142A  224F               	addwfc	(___fladd@b+1)^0,f,c
  9766   00142C  2250               	addwfc	(___fladd@b+2)^0,f,c
  9767   00142E  2251               	addwfc	(___fladd@b+3)^0,f,c
  9768   001430  A051               	btfss	(___fladd@b+3)^0,0,c
  9769   001432  EF1D  F00A         	goto	u10161
  9770   001436  EF1F  F00A         	goto	u10160
  9771   00143A                     u10161:
  9772   00143A  EF3D  F00A         	goto	l9982
  9773   00143E                     u10160:
  9774   00143E  C04E  F056         	movff	___fladd@b,??___fladd
  9775   001442  C04F  F057         	movff	___fladd@b+1,??___fladd+1
  9776   001446  C050  F058         	movff	___fladd@b+2,??___fladd+2
  9777   00144A  C051  F059         	movff	___fladd@b+3,??___fladd+3
  9778   00144E  3459               	rlcf	(??___fladd+3)^0,w,c
  9779   001450  3259               	rrcf	(??___fladd+3)^0,f,c
  9780   001452  3258               	rrcf	(??___fladd+2)^0,f,c
  9781   001454  3257               	rrcf	(??___fladd+1)^0,f,c
  9782   001456  3256               	rrcf	??___fladd^0,f,c
  9783   001458  C056  F04E         	movff	??___fladd,___fladd@b
  9784   00145C  C057  F04F         	movff	??___fladd+1,___fladd@b+1
  9785   001460  C058  F050         	movff	??___fladd+2,___fladd@b+2
  9786   001464  C059  F051         	movff	??___fladd+3,___fladd@b+3
  9787   001468  285C               	incf	___fladd@bexp^0,w,c
  9788   00146A  B4D8               	btfsc	status,2,c
  9789   00146C  EF3A  F00A         	goto	u10171
  9790   001470  EF3C  F00A         	goto	u10170
  9791   001474                     u10171:
  9792   001474  EF3D  F00A         	goto	l9982
  9793   001478                     u10170:
  9794   001478  2A5C               	incf	___fladd@bexp^0,f,c
  9795   00147A                     l9982:
  9796   00147A  285C               	incf	___fladd@bexp^0,w,c
  9797   00147C  B4D8               	btfsc	status,2,c
  9798   00147E  EF43  F00A         	goto	u10181
  9799   001482  EF45  F00A         	goto	u10180
  9800   001486                     u10181:
  9801   001486  EF4D  F00A         	goto	l9986
  9802   00148A                     u10180:
  9803   00148A  505C               	movf	___fladd@bexp^0,w,c
  9804   00148C  A4D8               	btfss	status,2,c
  9805   00148E  EF4B  F00A         	goto	u10191
  9806   001492  EF4D  F00A         	goto	u10190
  9807   001496                     u10191:
  9808   001496  EF5F  F00A         	goto	l9990
  9809   00149A                     u10190:
  9810   00149A                     l9986:
  9811   00149A  0E00               	movlw	0
  9812   00149C  6E4E               	movwf	___fladd@b^0,c
  9813   00149E  0E00               	movlw	0
  9814   0014A0  6E4F               	movwf	(___fladd@b+1)^0,c
  9815   0014A2  0E00               	movlw	0
  9816   0014A4  6E50               	movwf	(___fladd@b+2)^0,c
  9817   0014A6  0E00               	movlw	0
  9818   0014A8  6E51               	movwf	(___fladd@b+3)^0,c
  9819   0014AA  505C               	movf	___fladd@bexp^0,w,c
  9820   0014AC  A4D8               	btfss	status,2,c
  9821   0014AE  EF5B  F00A         	goto	u10201
  9822   0014B2  EF5D  F00A         	goto	u10200
  9823   0014B6                     u10201:
  9824   0014B6  EF5F  F00A         	goto	l9990
  9825   0014BA                     u10200:
  9826   0014BA  0E00               	movlw	0
  9827   0014BC  6E5A               	movwf	___fladd@signs^0,c
  9828   0014BE                     l9990:
  9829   0014BE  A05C               	btfss	___fladd@bexp^0,0,c
  9830   0014C0  EF64  F00A         	goto	u10211
  9831   0014C4  EF66  F00A         	goto	u10210
  9832   0014C8                     u10211:
  9833   0014C8  EF69  F00A         	goto	l9994
  9834   0014CC                     u10210:
  9835   0014CC  8E50               	bsf	(___fladd@b+2)^0,7,c
  9836   0014CE  EF6A  F00A         	goto	l9996
  9837   0014D2                     l9994:
  9838   0014D2  9E50               	bcf	(___fladd@b+2)^0,7,c
  9839   0014D4                     l9996:
  9840   0014D4  90D8               	bcf	status,0,c
  9841   0014D6  305C               	rrcf	___fladd@bexp^0,w,c
  9842   0014D8  6E51               	movwf	(___fladd@b+3)^0,c
  9843   0014DA  AE5A               	btfss	___fladd@signs^0,7,c
  9844   0014DC  EF72  F00A         	goto	u10221
  9845   0014E0  EF74  F00A         	goto	u10220
  9846   0014E4                     u10221:
  9847   0014E4  EF75  F00A         	goto	l10002
  9848   0014E8                     u10220:
  9849   0014E8  8E51               	bsf	(___fladd@b+3)^0,7,c
  9850   0014EA                     l10002:
  9851   0014EA  C04E  F04E         	movff	___fladd@b,?___fladd
  9852   0014EE  C04F  F04F         	movff	___fladd@b+1,?___fladd+1
  9853   0014F2  C050  F050         	movff	___fladd@b+2,?___fladd+2
  9854   0014F6  C051  F051         	movff	___fladd@b+3,?___fladd+3
  9855   0014FA                     l2348:
  9856   0014FA  0012               	return		;funcret
  9857   0014FC                     __end_of___fladd:
  9858                           	callstack 0
  9859                           
  9860 ;; *************** function _ADC_StartConversion_Interrupt *****************
  9861 ;; Defined at:
  9862 ;;		line 237 in file "MCAL_Layer/ADC/hal_adc.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  _adc            2   21[COMRAM] PTR const struct .
  9865 ;;		 -> adc_a0(7), 
  9866 ;;  channel         1   23[COMRAM] enum E3526
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;  ret             1   24[COMRAM] unsigned char 
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      unsigned char 
  9871 ;; Registers used:
  9872 ;;		wreg, status,2, status,0, cstack
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9878 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;Total ram usage:        4 bytes
  9883 ;; Hardware stack levels used: 1
  9884 ;; Hardware stack levels required when called: 6
  9885 ;; This function calls:
  9886 ;;		_ADC_SelectChannel
  9887 ;;		_ADC_StartConversion
  9888 ;; This function is called by:
  9889 ;;		_main
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           	psect	text50
  9894   0047A4                     __ptext50:
  9895                           	callstack 0
  9896   0047A4                     _ADC_StartConversion_Interrupt:
  9897                           	callstack 24
  9898   0047A4                     
  9899                           ;MCAL_Layer/ADC/hal_adc.c: 239:     if(((void*)0) == _adc){
  9900   0047A4  5016               	movf	ADC_StartConversion_Interrupt@_adc^0,w,c
  9901   0047A6  1017               	iorwf	(ADC_StartConversion_Interrupt@_adc+1)^0,w,c
  9902   0047A8  A4D8               	btfss	status,2,c
  9903   0047AA  EFD9  F023         	goto	u11421
  9904   0047AE  EFDB  F023         	goto	u11420
  9905   0047B2                     u11421:
  9906   0047B2  EFDF  F023         	goto	l436
  9907   0047B6                     u11420:
  9908   0047B6                     
  9909                           ;MCAL_Layer/ADC/hal_adc.c: 240:         ret = (Std_ReturnType)0x00;
  9910   0047B6  0E00               	movlw	0
  9911   0047B8  6E19               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  9912                           
  9913                           ;MCAL_Layer/ADC/hal_adc.c: 241:     }
  9914   0047BA  EFF2  F023         	goto	l11060
  9915   0047BE                     l436:
  9916                           
  9917                           ;MCAL_Layer/ADC/hal_adc.c: 243:         (PIR1bits.ADIF = 0);
  9918   0047BE  9C9E               	bcf	158,6,c	;volatile
  9919   0047C0                     
  9920                           ;MCAL_Layer/ADC/hal_adc.c: 245:         ret = ADC_SelectChannel(_adc, channel);
  9921   0047C0  C016  F011         	movff	ADC_StartConversion_Interrupt@_adc,ADC_SelectChannel@_adc
  9922   0047C4  C017  F012         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_SelectChannel@_adc+1
  9923   0047C8  C018  F013         	movff	ADC_StartConversion_Interrupt@channel,ADC_SelectChannel@channel
  9924   0047CC  EC50  F024         	call	_ADC_SelectChannel	;wreg free
  9925   0047D0  6E19               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  9926                           
  9927                           ;MCAL_Layer/ADC/hal_adc.c: 247:         ret = ADC_StartConversion(_adc);
  9928   0047D2  C016  F00E         	movff	ADC_StartConversion_Interrupt@_adc,ADC_StartConversion@_adc
  9929   0047D6  C017  F00F         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_StartConversion@_adc+1
  9930   0047DA  EC01  F025         	call	_ADC_StartConversion	;wreg free
  9931   0047DE  6E19               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  9932   0047E0                     
  9933                           ;MCAL_Layer/ADC/hal_adc.c: 248:         ret = (Std_ReturnType)0x01;
  9934   0047E0  0E01               	movlw	1
  9935   0047E2  6E19               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  9936   0047E4                     l11060:
  9937                           
  9938                           ;MCAL_Layer/ADC/hal_adc.c: 250:     return ret;
  9939   0047E4  5019               	movf	ADC_StartConversion_Interrupt@ret^0,w,c
  9940   0047E6  0012               	return		;funcret
  9941   0047E8                     __end_of_ADC_StartConversion_Interrupt:
  9942                           	callstack 0
  9943                           
  9944 ;; *************** function _ADC_StartConversion *****************
  9945 ;; Defined at:
  9946 ;;		line 131 in file "MCAL_Layer/ADC/hal_adc.c"
  9947 ;; Parameters:    Size  Location     Type
  9948 ;;  _adc            2   13[COMRAM] PTR const struct .
  9949 ;;		 -> adc_a0(7), 
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;  ret             1   15[COMRAM] unsigned char 
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      unsigned char 
  9954 ;; Registers used:
  9955 ;;		wreg, status,2, status,0
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9964 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;Total ram usage:        3 bytes
  9966 ;; Hardware stack levels used: 1
  9967 ;; Hardware stack levels required when called: 4
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		_ADC_StartConversion_Interrupt
  9972 ;;		_ADC_GetConversion_Blocking
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           	psect	text51
  9977   004A02                     __ptext51:
  9978                           	callstack 0
  9979   004A02                     _ADC_StartConversion:
  9980                           	callstack 25
  9981   004A02                     
  9982                           ;MCAL_Layer/ADC/hal_adc.c: 133:     if(((void*)0) == _adc){
  9983   004A02  500E               	movf	ADC_StartConversion@_adc^0,w,c
  9984   004A04  100F               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  9985   004A06  A4D8               	btfss	status,2,c
  9986   004A08  EF08  F025         	goto	u11121
  9987   004A0C  EF0A  F025         	goto	u11120
  9988   004A10                     u11121:
  9989   004A10  EF0E  F025         	goto	l403
  9990   004A14                     u11120:
  9991   004A14                     
  9992                           ;MCAL_Layer/ADC/hal_adc.c: 134:         ret = (Std_ReturnType)0x00;
  9993   004A14  0E00               	movlw	0
  9994   004A16  6E10               	movwf	ADC_StartConversion@ret^0,c
  9995                           
  9996                           ;MCAL_Layer/ADC/hal_adc.c: 135:     }
  9997   004A18  EF11  F025         	goto	l404
  9998   004A1C                     l403:
  9999                           
 10000                           ;MCAL_Layer/ADC/hal_adc.c: 137:         (ADCON0bits.GODONE = 1);
 10001   004A1C  82C2               	bsf	194,1,c	;volatile
 10002   004A1E                     
 10003                           ;MCAL_Layer/ADC/hal_adc.c: 138:         ret = (Std_ReturnType)0x01;
 10004   004A1E  0E01               	movlw	1
 10005   004A20  6E10               	movwf	ADC_StartConversion@ret^0,c
 10006   004A22                     l404:
 10007                           
 10008                           ;MCAL_Layer/ADC/hal_adc.c: 140:     return ret;
 10009   004A22  5010               	movf	ADC_StartConversion@ret^0,w,c
 10010   004A24  0012               	return		;funcret
 10011   004A26                     __end_of_ADC_StartConversion:
 10012                           	callstack 0
 10013                           
 10014 ;; *************** function _ADC_SelectChannel *****************
 10015 ;; Defined at:
 10016 ;;		line 108 in file "MCAL_Layer/ADC/hal_adc.c"
 10017 ;; Parameters:    Size  Location     Type
 10018 ;;  _adc            2   16[COMRAM] PTR const struct .
 10019 ;;		 -> adc_a0(7), 
 10020 ;;  channel         1   18[COMRAM] enum E3526
 10021 ;; Auto vars:     Size  Location     Type
 10022 ;;  ret             1   20[COMRAM] unsigned char 
 10023 ;; Return value:  Size  Location     Type
 10024 ;;                  1    wreg      unsigned char 
 10025 ;; Registers used:
 10026 ;;		wreg, status,2, status,0, cstack
 10027 ;; Tracked objects:
 10028 ;;		On entry : 0/0
 10029 ;;		On exit  : 0/0
 10030 ;;		Unchanged: 0/0
 10031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10032 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10035 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;Total ram usage:        5 bytes
 10037 ;; Hardware stack levels used: 1
 10038 ;; Hardware stack levels required when called: 5
 10039 ;; This function calls:
 10040 ;;		_adc_input_channel_port_configure
 10041 ;; This function is called by:
 10042 ;;		_ADC_StartConversion_Interrupt
 10043 ;;		_ADC_GetConversion_Blocking
 10044 ;; This function uses a non-reentrant model
 10045 ;;
 10046                           
 10047                           	psect	text52
 10048   0048A0                     __ptext52:
 10049                           	callstack 0
 10050   0048A0                     _ADC_SelectChannel:
 10051                           	callstack 24
 10052   0048A0                     
 10053                           ;MCAL_Layer/ADC/hal_adc.c: 110:     if(((void*)0) == _adc){
 10054   0048A0  5011               	movf	ADC_SelectChannel@_adc^0,w,c
 10055   0048A2  1012               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
 10056   0048A4  A4D8               	btfss	status,2,c
 10057   0048A6  EF57  F024         	goto	u11111
 10058   0048AA  EF59  F024         	goto	u11110
 10059   0048AE                     u11111:
 10060   0048AE  EF5D  F024         	goto	l10798
 10061   0048B2                     u11110:
 10062   0048B2                     
 10063                           ;MCAL_Layer/ADC/hal_adc.c: 111:         ret = (Std_ReturnType)0x00;
 10064   0048B2  0E00               	movlw	0
 10065   0048B4  6E15               	movwf	ADC_SelectChannel@ret^0,c
 10066                           
 10067                           ;MCAL_Layer/ADC/hal_adc.c: 112:     }
 10068   0048B6  EF6B  F024         	goto	l10804
 10069   0048BA                     l10798:
 10070                           
 10071                           ;MCAL_Layer/ADC/hal_adc.c: 115:         ADCON0bits.CHS = channel;
 10072   0048BA  C013  F014         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
 10073   0048BE  4614               	rlncf	??_ADC_SelectChannel^0,f,c
 10074   0048C0  4614               	rlncf	??_ADC_SelectChannel^0,f,c
 10075   0048C2  50C2               	movf	194,w,c	;volatile
 10076   0048C4  1814               	xorwf	??_ADC_SelectChannel^0,w,c
 10077   0048C6  0BC3               	andlw	-61
 10078   0048C8  1814               	xorwf	??_ADC_SelectChannel^0,w,c
 10079   0048CA  6EC2               	movwf	194,c	;volatile
 10080   0048CC                     
 10081                           ;MCAL_Layer/ADC/hal_adc.c: 116:         adc_input_channel_port_configure(channel);
 10082   0048CC  5013               	movf	ADC_SelectChannel@channel^0,w,c
 10083   0048CE  EC29  F01D         	call	_adc_input_channel_port_configure
 10084   0048D2                     
 10085                           ;MCAL_Layer/ADC/hal_adc.c: 117:         ret = (Std_ReturnType)0x01;
 10086   0048D2  0E01               	movlw	1
 10087   0048D4  6E15               	movwf	ADC_SelectChannel@ret^0,c
 10088   0048D6                     l10804:
 10089                           
 10090                           ;MCAL_Layer/ADC/hal_adc.c: 119:     return ret;
 10091   0048D6  5015               	movf	ADC_SelectChannel@ret^0,w,c
 10092   0048D8  0012               	return		;funcret
 10093   0048DA                     __end_of_ADC_SelectChannel:
 10094                           	callstack 0
 10095                           
 10096 ;; *************** function _adc_input_channel_port_configure *****************
 10097 ;; Defined at:
 10098 ;;		line 253 in file "MCAL_Layer/ADC/hal_adc.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  channel         1    wreg     enum E3526
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;  channel         1   15[COMRAM] enum E3526
 10103 ;; Return value:  Size  Location     Type
 10104 ;;                  1    wreg      void 
 10105 ;; Registers used:
 10106 ;;		wreg, status,2, status,0
 10107 ;; Tracked objects:
 10108 ;;		On entry : 0/0
 10109 ;;		On exit  : 0/0
 10110 ;;		Unchanged: 0/0
 10111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;Total ram usage:        3 bytes
 10117 ;; Hardware stack levels used: 1
 10118 ;; Hardware stack levels required when called: 4
 10119 ;; This function calls:
 10120 ;;		Nothing
 10121 ;; This function is called by:
 10122 ;;		_ADC_Init
 10123 ;;		_ADC_SelectChannel
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           	psect	text53
 10128   003A52                     __ptext53:
 10129                           	callstack 0
 10130   003A52                     _adc_input_channel_port_configure:
 10131                           	callstack 24
 10132                           
 10133                           ;incstack = 0
 10134                           ;adc_input_channel_port_configure@channel stored from wreg
 10135   003A52  6E10               	movwf	adc_input_channel_port_configure@channel^0,c
 10136   003A54                     
 10137                           ;MCAL_Layer/ADC/hal_adc.c: 254:     switch(channel){
 10138   003A54  EF53  F01D         	goto	l10480
 10139   003A58                     l10454:
 10140   003A58  8092               	bsf	146,0,c	;volatile
 10141   003A5A  EF94  F01D         	goto	l457
 10142   003A5E                     l10456:
 10143   003A5E  8292               	bsf	146,1,c	;volatile
 10144   003A60  EF94  F01D         	goto	l457
 10145   003A64                     l10458:
 10146   003A64  8492               	bsf	146,2,c	;volatile
 10147   003A66  EF94  F01D         	goto	l457
 10148   003A6A                     l10460:
 10149   003A6A  8692               	bsf	146,3,c	;volatile
 10150   003A6C  EF94  F01D         	goto	l457
 10151   003A70                     l10462:
 10152   003A70  8A92               	bsf	146,5,c	;volatile
 10153   003A72  EF94  F01D         	goto	l457
 10154   003A76                     l10464:
 10155   003A76  8096               	bsf	150,0,c	;volatile
 10156   003A78  EF94  F01D         	goto	l457
 10157   003A7C                     l10466:
 10158   003A7C  8296               	bsf	150,1,c	;volatile
 10159   003A7E  EF94  F01D         	goto	l457
 10160   003A82                     l10468:
 10161   003A82  8496               	bsf	150,2,c	;volatile
 10162   003A84  EF94  F01D         	goto	l457
 10163   003A88                     l10470:
 10164   003A88  8493               	bsf	147,2,c	;volatile
 10165   003A8A  EF94  F01D         	goto	l457
 10166   003A8E                     l10472:
 10167   003A8E  8693               	bsf	147,3,c	;volatile
 10168   003A90  EF94  F01D         	goto	l457
 10169   003A94                     l10474:
 10170   003A94  8293               	bsf	147,1,c	;volatile
 10171   003A96  EF94  F01D         	goto	l457
 10172   003A9A                     l10476:
 10173   003A9A  8893               	bsf	147,4,c	;volatile
 10174   003A9C  EF94  F01D         	goto	l457
 10175   003AA0                     l10478:
 10176   003AA0  8093               	bsf	147,0,c	;volatile
 10177   003AA2  EF94  F01D         	goto	l457
 10178   003AA6                     l10480:
 10179   003AA6  5010               	movf	adc_input_channel_port_configure@channel^0,w,c
 10180   003AA8  6E0E               	movwf	??_adc_input_channel_port_configure^0,c
 10181   003AAA  6A0F               	clrf	(??_adc_input_channel_port_configure+1)^0,c
 10182                           
 10183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10184                           ; Switch size 1, requested type "simple"
 10185                           ; Number of cases is 1, Range of values is 0 to 0
 10186                           ; switch strategies available:
 10187                           ; Name         Instructions Cycles
 10188                           ; simple_byte            4     3 (average)
 10189                           ;	Chosen strategy is simple_byte
 10190   003AAC  500F               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
 10191   003AAE  0A00               	xorlw	0	; case 0
 10192   003AB0  B4D8               	btfsc	status,2,c
 10193   003AB2  EF5D  F01D         	goto	l12008
 10194   003AB6  EF94  F01D         	goto	l457
 10195   003ABA                     l12008:
 10196                           
 10197                           ; Switch size 1, requested type "simple"
 10198                           ; Number of cases is 13, Range of values is 0 to 12
 10199                           ; switch strategies available:
 10200                           ; Name         Instructions Cycles
 10201                           ; simple_byte           40    21 (average)
 10202                           ;	Chosen strategy is simple_byte
 10203   003ABA  500E               	movf	??_adc_input_channel_port_configure^0,w,c
 10204   003ABC  0A00               	xorlw	0	; case 0
 10205   003ABE  B4D8               	btfsc	status,2,c
 10206   003AC0  EF2C  F01D         	goto	l10454
 10207   003AC4  0A01               	xorlw	1	; case 1
 10208   003AC6  B4D8               	btfsc	status,2,c
 10209   003AC8  EF2F  F01D         	goto	l10456
 10210   003ACC  0A03               	xorlw	3	; case 2
 10211   003ACE  B4D8               	btfsc	status,2,c
 10212   003AD0  EF32  F01D         	goto	l10458
 10213   003AD4  0A01               	xorlw	1	; case 3
 10214   003AD6  B4D8               	btfsc	status,2,c
 10215   003AD8  EF35  F01D         	goto	l10460
 10216   003ADC  0A07               	xorlw	7	; case 4
 10217   003ADE  B4D8               	btfsc	status,2,c
 10218   003AE0  EF38  F01D         	goto	l10462
 10219   003AE4  0A01               	xorlw	1	; case 5
 10220   003AE6  B4D8               	btfsc	status,2,c
 10221   003AE8  EF3B  F01D         	goto	l10464
 10222   003AEC  0A03               	xorlw	3	; case 6
 10223   003AEE  B4D8               	btfsc	status,2,c
 10224   003AF0  EF3E  F01D         	goto	l10466
 10225   003AF4  0A01               	xorlw	1	; case 7
 10226   003AF6  B4D8               	btfsc	status,2,c
 10227   003AF8  EF41  F01D         	goto	l10468
 10228   003AFC  0A0F               	xorlw	15	; case 8
 10229   003AFE  B4D8               	btfsc	status,2,c
 10230   003B00  EF44  F01D         	goto	l10470
 10231   003B04  0A01               	xorlw	1	; case 9
 10232   003B06  B4D8               	btfsc	status,2,c
 10233   003B08  EF47  F01D         	goto	l10472
 10234   003B0C  0A03               	xorlw	3	; case 10
 10235   003B0E  B4D8               	btfsc	status,2,c
 10236   003B10  EF4A  F01D         	goto	l10474
 10237   003B14  0A01               	xorlw	1	; case 11
 10238   003B16  B4D8               	btfsc	status,2,c
 10239   003B18  EF4D  F01D         	goto	l10476
 10240   003B1C  0A07               	xorlw	7	; case 12
 10241   003B1E  B4D8               	btfsc	status,2,c
 10242   003B20  EF50  F01D         	goto	l10478
 10243   003B24  EF94  F01D         	goto	l457
 10244   003B28                     l457:
 10245   003B28  0012               	return		;funcret
 10246   003B2A                     __end_of_adc_input_channel_port_configure:
 10247                           	callstack 0
 10248                           
 10249 ;; *************** function _InterruptManager *****************
 10250 ;; Defined at:
 10251 ;;		line 32 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
 10252 ;; Parameters:    Size  Location     Type
 10253 ;;		None
 10254 ;; Auto vars:     Size  Location     Type
 10255 ;;		None
 10256 ;; Return value:  Size  Location     Type
 10257 ;;                  1    wreg      void 
 10258 ;; Registers used:
 10259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10260 ;; Tracked objects:
 10261 ;;		On entry : 0/0
 10262 ;;		On exit  : 0/0
 10263 ;;		Unchanged: 0/0
 10264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10267 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10268 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10269 ;;Total ram usage:        5 bytes
 10270 ;; Hardware stack levels used: 1
 10271 ;; Hardware stack levels required when called: 3
 10272 ;; This function calls:
 10273 ;;		_ADC_ISR
 10274 ;;		_CCP1_ISR
 10275 ;;		_CCP2_ISR
 10276 ;;		_EUSART_RX_ISR
 10277 ;;		_EUSART_TX_ISR
 10278 ;;		_INT0_ISR
 10279 ;;		_INT1_ISR
 10280 ;;		_INT2_ISR
 10281 ;;		_MSSP_I2C_BC_ISR
 10282 ;;		_MSSP_I2C_ISR
 10283 ;;		_MSSP_SPI_ISR
 10284 ;;		_RB4_ISR
 10285 ;;		_RB5_ISR
 10286 ;;		_RB6_ISR
 10287 ;;		_RB7_ISR
 10288 ;;		_TMR0_ISR
 10289 ;;		_TMR1_ISR
 10290 ;;		_TMR2_ISR
 10291 ;;		_TMR3_ISR
 10292 ;; This function is called by:
 10293 ;;		Interrupt level 2
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           	psect	intcode
 10298   000008                     __pintcode:
 10299                           	callstack 0
 10300   000008                     _InterruptManager:
 10301                           	callstack 18
 10302                           
 10303                           ;incstack = 0
 10304   000008  8272               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10305   00000A  ED7E  F00A         	call	int_func,f	;refresh shadow registers
 10306                           
 10307                           	psect	intcode_body
 10308   0014FC                     __pintcode_body:
 10309                           	callstack 18
 10310   0014FC                     int_func:
 10311                           	callstack 18
 10312   0014FC  0006               	pop		; remove dummy address from shadow register refresh
 10313   0014FE  CFFA F00A          	movff	pclath,??_InterruptManager+1
 10314   001502  CFFB F00B          	movff	pclatu,??_InterruptManager+2
 10315   001506  CFD9 F00C          	movff	fsr2l,??_InterruptManager+3
 10316   00150A  CFDA F00D          	movff	fsr2h,??_InterruptManager+4
 10317   00150E                     
 10318                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 34:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
 10319   00150E  A8F2               	btfss	242,4,c	;volatile
 10320   001510  EF8C  F00A         	goto	i2u828_41
 10321   001514  EF8E  F00A         	goto	i2u828_40
 10322   001518                     i2u828_41:
 10323   001518  EF97  F00A         	goto	i2l1238
 10324   00151C                     i2u828_40:
 10325   00151C  A2F2               	btfss	242,1,c	;volatile
 10326   00151E  EF93  F00A         	goto	i2u829_41
 10327   001522  EF95  F00A         	goto	i2u829_40
 10328   001526                     i2u829_41:
 10329   001526  EF97  F00A         	goto	i2l1238
 10330   00152A                     i2u829_40:
 10331   00152A                     
 10332                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 35:         INT0_ISR();
 10333   00152A  EC92  F025         	call	_INT0_ISR	;wreg free
 10334   00152E                     i2l1238:
 10335                           
 10336                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 38:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
 10337   00152E  A6F0               	btfss	240,3,c	;volatile
 10338   001530  EF9C  F00A         	goto	i2u830_41
 10339   001534  EF9E  F00A         	goto	i2u830_40
 10340   001538                     i2u830_41:
 10341   001538  EFA7  F00A         	goto	i2l1240
 10342   00153C                     i2u830_40:
 10343   00153C  A0F0               	btfss	240,0,c	;volatile
 10344   00153E  EFA3  F00A         	goto	i2u831_41
 10345   001542  EFA5  F00A         	goto	i2u831_40
 10346   001546                     i2u831_41:
 10347   001546  EFA7  F00A         	goto	i2l1240
 10348   00154A                     i2u831_40:
 10349   00154A                     
 10350                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 39:         INT1_ISR();
 10351   00154A  EC90  F025         	call	_INT1_ISR	;wreg free
 10352   00154E                     i2l1240:
 10353                           
 10354                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
 10355   00154E  A8F0               	btfss	240,4,c	;volatile
 10356   001550  EFAC  F00A         	goto	i2u832_41
 10357   001554  EFAE  F00A         	goto	i2u832_40
 10358   001558                     i2u832_41:
 10359   001558  EFB7  F00A         	goto	i2l1242
 10360   00155C                     i2u832_40:
 10361   00155C  A2F0               	btfss	240,1,c	;volatile
 10362   00155E  EFB3  F00A         	goto	i2u833_41
 10363   001562  EFB5  F00A         	goto	i2u833_40
 10364   001566                     i2u833_41:
 10365   001566  EFB7  F00A         	goto	i2l1242
 10366   00156A                     i2u833_40:
 10367   00156A                     
 10368                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 43:         INT2_ISR();
 10369   00156A  EC8E  F025         	call	_INT2_ISR	;wreg free
 10370   00156E                     i2l1242:
 10371                           
 10372                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
 10373   00156E  A6F2               	btfss	242,3,c	;volatile
 10374   001570  EFBC  F00A         	goto	i2u834_41
 10375   001574  EFBE  F00A         	goto	i2u834_40
 10376   001578                     i2u834_41:
 10377   001578  EFD9  F00A         	goto	i2l1244
 10378   00157C                     i2u834_40:
 10379   00157C  A0F2               	btfss	242,0,c	;volatile
 10380   00157E  EFC3  F00A         	goto	i2u835_41
 10381   001582  EFC5  F00A         	goto	i2u835_40
 10382   001586                     i2u835_41:
 10383   001586  EFD9  F00A         	goto	i2l1244
 10384   00158A                     i2u835_40:
 10385   00158A  A881               	btfss	129,4,c	;volatile
 10386   00158C  EFCA  F00A         	goto	i2u836_41
 10387   001590  EFCC  F00A         	goto	i2u836_40
 10388   001594                     i2u836_41:
 10389   001594  EFD9  F00A         	goto	i2l1244
 10390   001598                     i2u836_40:
 10391   001598  046F               	decf	_RB4_Flag^0,w,c	;volatile
 10392   00159A  A4D8               	btfss	status,2,c
 10393   00159C  EFD2  F00A         	goto	i2u837_41
 10394   0015A0  EFD4  F00A         	goto	i2u837_40
 10395   0015A4                     i2u837_41:
 10396   0015A4  EFD9  F00A         	goto	i2l1244
 10397   0015A8                     i2u837_40:
 10398   0015A8                     
 10399                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         RB4_Flag
      +                           = 0;
 10400   0015A8  0E00               	movlw	0
 10401   0015AA  6E6F               	movwf	_RB4_Flag^0,c	;volatile
 10402   0015AC                     
 10403                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:         RB4_ISR(0);
 10404   0015AC  0E00               	movlw	0
 10405   0015AE  EC55  F025         	call	_RB4_ISR
 10406   0015B2                     i2l1244:
 10407                           
 10408                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
 10409   0015B2  A6F2               	btfss	242,3,c	;volatile
 10410   0015B4  EFDE  F00A         	goto	i2u838_41
 10411   0015B8  EFE0  F00A         	goto	i2u838_40
 10412   0015BC                     i2u838_41:
 10413   0015BC  EFFB  F00A         	goto	i2l1246
 10414   0015C0                     i2u838_40:
 10415   0015C0  A0F2               	btfss	242,0,c	;volatile
 10416   0015C2  EFE5  F00A         	goto	i2u839_41
 10417   0015C6  EFE7  F00A         	goto	i2u839_40
 10418   0015CA                     i2u839_41:
 10419   0015CA  EFFB  F00A         	goto	i2l1246
 10420   0015CE                     i2u839_40:
 10421   0015CE  B881               	btfsc	129,4,c	;volatile
 10422   0015D0  EFEC  F00A         	goto	i2u840_41
 10423   0015D4  EFEE  F00A         	goto	i2u840_40
 10424   0015D8                     i2u840_41:
 10425   0015D8  EFFB  F00A         	goto	i2l1246
 10426   0015DC                     i2u840_40:
 10427   0015DC  506F               	movf	_RB4_Flag^0,w,c	;volatile
 10428   0015DE  A4D8               	btfss	status,2,c
 10429   0015E0  EFF4  F00A         	goto	i2u841_41
 10430   0015E4  EFF6  F00A         	goto	i2u841_40
 10431   0015E8                     i2u841_41:
 10432   0015E8  EFFB  F00A         	goto	i2l1246
 10433   0015EC                     i2u841_40:
 10434   0015EC                     
 10435                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         RB4_Flag 
      +                          = 1;
 10436   0015EC  0E01               	movlw	1
 10437   0015EE  6E6F               	movwf	_RB4_Flag^0,c	;volatile
 10438   0015F0                     
 10439                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:         RB4_ISR(1);
 10440   0015F0  0E01               	movlw	1
 10441   0015F2  EC55  F025         	call	_RB4_ISR
 10442   0015F6                     i2l1246:
 10443                           
 10444                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
 10445   0015F6  A6F2               	btfss	242,3,c	;volatile
 10446   0015F8  EF00  F00B         	goto	i2u842_41
 10447   0015FC  EF02  F00B         	goto	i2u842_40
 10448   001600                     i2u842_41:
 10449   001600  EF1D  F00B         	goto	i2l1248
 10450   001604                     i2u842_40:
 10451   001604  A0F2               	btfss	242,0,c	;volatile
 10452   001606  EF07  F00B         	goto	i2u843_41
 10453   00160A  EF09  F00B         	goto	i2u843_40
 10454   00160E                     i2u843_41:
 10455   00160E  EF1D  F00B         	goto	i2l1248
 10456   001612                     i2u843_40:
 10457   001612  AA81               	btfss	129,5,c	;volatile
 10458   001614  EF0E  F00B         	goto	i2u844_41
 10459   001618  EF10  F00B         	goto	i2u844_40
 10460   00161C                     i2u844_41:
 10461   00161C  EF1D  F00B         	goto	i2l1248
 10462   001620                     i2u844_40:
 10463   001620  046E               	decf	_RB5_Flag^0,w,c	;volatile
 10464   001622  A4D8               	btfss	status,2,c
 10465   001624  EF16  F00B         	goto	i2u845_41
 10466   001628  EF18  F00B         	goto	i2u845_40
 10467   00162C                     i2u845_41:
 10468   00162C  EF1D  F00B         	goto	i2l1248
 10469   001630                     i2u845_40:
 10470   001630                     
 10471                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:         RB5_Flag
      +                           = 0;
 10472   001630  0E00               	movlw	0
 10473   001632  6E6E               	movwf	_RB5_Flag^0,c	;volatile
 10474   001634                     
 10475                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64:         RB5_ISR(0);
 10476   001634  0E00               	movlw	0
 10477   001636  EC48  F025         	call	_RB5_ISR
 10478   00163A                     i2l1248:
 10479                           
 10480                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
 10481   00163A  A6F2               	btfss	242,3,c	;volatile
 10482   00163C  EF22  F00B         	goto	i2u846_41
 10483   001640  EF24  F00B         	goto	i2u846_40
 10484   001644                     i2u846_41:
 10485   001644  EF3F  F00B         	goto	i2l1250
 10486   001648                     i2u846_40:
 10487   001648  A0F2               	btfss	242,0,c	;volatile
 10488   00164A  EF29  F00B         	goto	i2u847_41
 10489   00164E  EF2B  F00B         	goto	i2u847_40
 10490   001652                     i2u847_41:
 10491   001652  EF3F  F00B         	goto	i2l1250
 10492   001656                     i2u847_40:
 10493   001656  BA81               	btfsc	129,5,c	;volatile
 10494   001658  EF30  F00B         	goto	i2u848_41
 10495   00165C  EF32  F00B         	goto	i2u848_40
 10496   001660                     i2u848_41:
 10497   001660  EF3F  F00B         	goto	i2l1250
 10498   001664                     i2u848_40:
 10499   001664  506E               	movf	_RB5_Flag^0,w,c	;volatile
 10500   001666  A4D8               	btfss	status,2,c
 10501   001668  EF38  F00B         	goto	i2u849_41
 10502   00166C  EF3A  F00B         	goto	i2u849_40
 10503   001670                     i2u849_41:
 10504   001670  EF3F  F00B         	goto	i2l1250
 10505   001674                     i2u849_40:
 10506   001674                     
 10507                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:         RB5_Flag 
      +                          = 1;
 10508   001674  0E01               	movlw	1
 10509   001676  6E6E               	movwf	_RB5_Flag^0,c	;volatile
 10510   001678                     
 10511                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:         RB5_ISR(1);
 10512   001678  0E01               	movlw	1
 10513   00167A  EC48  F025         	call	_RB5_ISR
 10514   00167E                     i2l1250:
 10515                           
 10516                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
 10517   00167E  A6F2               	btfss	242,3,c	;volatile
 10518   001680  EF44  F00B         	goto	i2u850_41
 10519   001684  EF46  F00B         	goto	i2u850_40
 10520   001688                     i2u850_41:
 10521   001688  EF61  F00B         	goto	i2l1252
 10522   00168C                     i2u850_40:
 10523   00168C  A0F2               	btfss	242,0,c	;volatile
 10524   00168E  EF4B  F00B         	goto	i2u851_41
 10525   001692  EF4D  F00B         	goto	i2u851_40
 10526   001696                     i2u851_41:
 10527   001696  EF61  F00B         	goto	i2l1252
 10528   00169A                     i2u851_40:
 10529   00169A  AC81               	btfss	129,6,c	;volatile
 10530   00169C  EF52  F00B         	goto	i2u852_41
 10531   0016A0  EF54  F00B         	goto	i2u852_40
 10532   0016A4                     i2u852_41:
 10533   0016A4  EF61  F00B         	goto	i2l1252
 10534   0016A8                     i2u852_40:
 10535   0016A8  046D               	decf	_RB6_Flag^0,w,c	;volatile
 10536   0016AA  A4D8               	btfss	status,2,c
 10537   0016AC  EF5A  F00B         	goto	i2u853_41
 10538   0016B0  EF5C  F00B         	goto	i2u853_40
 10539   0016B4                     i2u853_41:
 10540   0016B4  EF61  F00B         	goto	i2l1252
 10541   0016B8                     i2u853_40:
 10542   0016B8                     
 10543                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB6_Flag
      +                           = 0;
 10544   0016B8  0E00               	movlw	0
 10545   0016BA  6E6D               	movwf	_RB6_Flag^0,c	;volatile
 10546   0016BC                     
 10547                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:         RB6_ISR(0);
 10548   0016BC  0E00               	movlw	0
 10549   0016BE  EC3B  F025         	call	_RB6_ISR
 10550   0016C2                     i2l1252:
 10551                           
 10552                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
 10553   0016C2  A6F2               	btfss	242,3,c	;volatile
 10554   0016C4  EF66  F00B         	goto	i2u854_41
 10555   0016C8  EF68  F00B         	goto	i2u854_40
 10556   0016CC                     i2u854_41:
 10557   0016CC  EF83  F00B         	goto	i2l1254
 10558   0016D0                     i2u854_40:
 10559   0016D0  A0F2               	btfss	242,0,c	;volatile
 10560   0016D2  EF6D  F00B         	goto	i2u855_41
 10561   0016D6  EF6F  F00B         	goto	i2u855_40
 10562   0016DA                     i2u855_41:
 10563   0016DA  EF83  F00B         	goto	i2l1254
 10564   0016DE                     i2u855_40:
 10565   0016DE  BC81               	btfsc	129,6,c	;volatile
 10566   0016E0  EF74  F00B         	goto	i2u856_41
 10567   0016E4  EF76  F00B         	goto	i2u856_40
 10568   0016E8                     i2u856_41:
 10569   0016E8  EF83  F00B         	goto	i2l1254
 10570   0016EC                     i2u856_40:
 10571   0016EC  506D               	movf	_RB6_Flag^0,w,c	;volatile
 10572   0016EE  A4D8               	btfss	status,2,c
 10573   0016F0  EF7C  F00B         	goto	i2u857_41
 10574   0016F4  EF7E  F00B         	goto	i2u857_40
 10575   0016F8                     i2u857_41:
 10576   0016F8  EF83  F00B         	goto	i2l1254
 10577   0016FC                     i2u857_40:
 10578   0016FC                     
 10579                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:        (PORTBbits.RB6 == GPIO_LOW) &
      +                          & (RB6_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:         RB6_Flag 
      +                          = 1;
 10580   0016FC  0E01               	movlw	1
 10581   0016FE  6E6D               	movwf	_RB6_Flag^0,c	;volatile
 10582   001700                     
 10583                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82:         RB6_ISR(1);
 10584   001700  0E01               	movlw	1
 10585   001702  EC3B  F025         	call	_RB6_ISR
 10586   001706                     i2l1254:
 10587                           
 10588                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
 10589   001706  A6F2               	btfss	242,3,c	;volatile
 10590   001708  EF88  F00B         	goto	i2u858_41
 10591   00170C  EF8A  F00B         	goto	i2u858_40
 10592   001710                     i2u858_41:
 10593   001710  EFA5  F00B         	goto	i2l1256
 10594   001714                     i2u858_40:
 10595   001714  A0F2               	btfss	242,0,c	;volatile
 10596   001716  EF8F  F00B         	goto	i2u859_41
 10597   00171A  EF91  F00B         	goto	i2u859_40
 10598   00171E                     i2u859_41:
 10599   00171E  EFA5  F00B         	goto	i2l1256
 10600   001722                     i2u859_40:
 10601   001722  AE81               	btfss	129,7,c	;volatile
 10602   001724  EF96  F00B         	goto	i2u860_41
 10603   001728  EF98  F00B         	goto	i2u860_40
 10604   00172C                     i2u860_41:
 10605   00172C  EFA5  F00B         	goto	i2l1256
 10606   001730                     i2u860_40:
 10607   001730  046C               	decf	_RB7_Flag^0,w,c	;volatile
 10608   001732  A4D8               	btfss	status,2,c
 10609   001734  EF9E  F00B         	goto	i2u861_41
 10610   001738  EFA0  F00B         	goto	i2u861_40
 10611   00173C                     i2u861_41:
 10612   00173C  EFA5  F00B         	goto	i2l1256
 10613   001740                     i2u861_40:
 10614   001740                     
 10615                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:        (PORTBbits.RB7 == GPIO_HIGH) 
      +                          && (RB7_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 87:         RB7_Flag
      +                           = 0;
 10616   001740  0E00               	movlw	0
 10617   001742  6E6C               	movwf	_RB7_Flag^0,c	;volatile
 10618   001744                     
 10619                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:         RB7_ISR(0);
 10620   001744  0E00               	movlw	0
 10621   001746  EC2E  F025         	call	_RB7_ISR
 10622   00174A                     i2l1256:
 10623                           
 10624                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
 10625   00174A  A6F2               	btfss	242,3,c	;volatile
 10626   00174C  EFAA  F00B         	goto	i2u862_41
 10627   001750  EFAC  F00B         	goto	i2u862_40
 10628   001754                     i2u862_41:
 10629   001754  EFC7  F00B         	goto	i2l1258
 10630   001758                     i2u862_40:
 10631   001758  A0F2               	btfss	242,0,c	;volatile
 10632   00175A  EFB1  F00B         	goto	i2u863_41
 10633   00175E  EFB3  F00B         	goto	i2u863_40
 10634   001762                     i2u863_41:
 10635   001762  EFC7  F00B         	goto	i2l1258
 10636   001766                     i2u863_40:
 10637   001766  BE81               	btfsc	129,7,c	;volatile
 10638   001768  EFB8  F00B         	goto	i2u864_41
 10639   00176C  EFBA  F00B         	goto	i2u864_40
 10640   001770                     i2u864_41:
 10641   001770  EFC7  F00B         	goto	i2l1258
 10642   001774                     i2u864_40:
 10643   001774  506C               	movf	_RB7_Flag^0,w,c	;volatile
 10644   001776  A4D8               	btfss	status,2,c
 10645   001778  EFC0  F00B         	goto	i2u865_41
 10646   00177C  EFC2  F00B         	goto	i2u865_40
 10647   001780                     i2u865_41:
 10648   001780  EFC7  F00B         	goto	i2l1258
 10649   001784                     i2u865_40:
 10650   001784                     
 10651                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:        (PORTBbits.RB7 == GPIO_LOW) &
      +                          & (RB7_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 93:         RB7_Flag 
      +                          = 1;
 10652   001784  0E01               	movlw	1
 10653   001786  6E6C               	movwf	_RB7_Flag^0,c	;volatile
 10654   001788                     
 10655                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:         RB7_ISR(1);
 10656   001788  0E01               	movlw	1
 10657   00178A  EC2E  F025         	call	_RB7_ISR
 10658   00178E                     i2l1258:
 10659                           
 10660                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
 10661   00178E  AC9D               	btfss	157,6,c	;volatile
 10662   001790  EFCC  F00B         	goto	i2u866_41
 10663   001794  EFCE  F00B         	goto	i2u866_40
 10664   001798                     i2u866_41:
 10665   001798  EFD7  F00B         	goto	i2l1260
 10666   00179C                     i2u866_40:
 10667   00179C  AC9E               	btfss	158,6,c	;volatile
 10668   00179E  EFD3  F00B         	goto	i2u867_41
 10669   0017A2  EFD5  F00B         	goto	i2u867_40
 10670   0017A6                     i2u867_41:
 10671   0017A6  EFD7  F00B         	goto	i2l1260
 10672   0017AA                     i2u867_40:
 10673   0017AA                     
 10674                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 100:         ADC_ISR();
 10675   0017AA  ECBC  F024         	call	_ADC_ISR	;wreg free
 10676   0017AE                     i2l1260:
 10677                           
 10678                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF)){
 10679   0017AE  AAF2               	btfss	242,5,c	;volatile
 10680   0017B0  EFDC  F00B         	goto	i2u868_41
 10681   0017B4  EFDE  F00B         	goto	i2u868_40
 10682   0017B8                     i2u868_41:
 10683   0017B8  EFE7  F00B         	goto	i2l1262
 10684   0017BC                     i2u868_40:
 10685   0017BC  A4F2               	btfss	242,2,c	;volatile
 10686   0017BE  EFE3  F00B         	goto	i2u869_41
 10687   0017C2  EFE5  F00B         	goto	i2u869_40
 10688   0017C6                     i2u869_41:
 10689   0017C6  EFE7  F00B         	goto	i2l1262
 10690   0017CA                     i2u869_40:
 10691   0017CA                     
 10692                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 105:         TMR0_ISR();
 10693   0017CA  EC70  F025         	call	_TMR0_ISR	;wreg free
 10694   0017CE                     i2l1262:
 10695                           
 10696                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 108:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF)){
 10697   0017CE  A09D               	btfss	157,0,c	;volatile
 10698   0017D0  EFEC  F00B         	goto	i2u870_41
 10699   0017D4  EFEE  F00B         	goto	i2u870_40
 10700   0017D8                     i2u870_41:
 10701   0017D8  EFF7  F00B         	goto	i2l1264
 10702   0017DC                     i2u870_40:
 10703   0017DC  A09E               	btfss	158,0,c	;volatile
 10704   0017DE  EFF3  F00B         	goto	i2u871_41
 10705   0017E2  EFF5  F00B         	goto	i2u871_40
 10706   0017E6                     i2u871_41:
 10707   0017E6  EFF7  F00B         	goto	i2l1264
 10708   0017EA                     i2u871_40:
 10709   0017EA                     
 10710                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:         TMR1_ISR();
 10711   0017EA  EC77  F025         	call	_TMR1_ISR	;wreg free
 10712   0017EE                     i2l1264:
 10713                           
 10714                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF)){
 10715   0017EE  A29D               	btfss	157,1,c	;volatile
 10716   0017F0  EFFC  F00B         	goto	i2u872_41
 10717   0017F4  EFFE  F00B         	goto	i2u872_40
 10718   0017F8                     i2u872_41:
 10719   0017F8  EF07  F00C         	goto	i2l1266
 10720   0017FC                     i2u872_40:
 10721   0017FC  A29E               	btfss	158,1,c	;volatile
 10722   0017FE  EF03  F00C         	goto	i2u873_41
 10723   001802  EF05  F00C         	goto	i2u873_40
 10724   001806                     i2u873_41:
 10725   001806  EF07  F00C         	goto	i2l1266
 10726   00180A                     i2u873_40:
 10727   00180A                     
 10728                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         TMR2_ISR();
 10729   00180A  EC83  F025         	call	_TMR2_ISR	;wreg free
 10730   00180E                     i2l1266:
 10731                           
 10732                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF)){
 10733   00180E  A2A0               	btfss	160,1,c	;volatile
 10734   001810  EF0C  F00C         	goto	i2u874_41
 10735   001814  EF0E  F00C         	goto	i2u874_40
 10736   001818                     i2u874_41:
 10737   001818  EF17  F00C         	goto	i2l1268
 10738   00181C                     i2u874_40:
 10739   00181C  A2A1               	btfss	161,1,c	;volatile
 10740   00181E  EF13  F00C         	goto	i2u875_41
 10741   001822  EF15  F00C         	goto	i2u875_40
 10742   001826                     i2u875_41:
 10743   001826  EF17  F00C         	goto	i2l1268
 10744   00182A                     i2u875_40:
 10745   00182A                     
 10746                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 117:         TMR3_ISR();
 10747   00182A  EC69  F025         	call	_TMR3_ISR	;wreg free
 10748   00182E                     i2l1268:
 10749                           
 10750                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 121:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF)){
 10751   00182E  A89D               	btfss	157,4,c	;volatile
 10752   001830  EF1C  F00C         	goto	i2u876_41
 10753   001834  EF1E  F00C         	goto	i2u876_40
 10754   001838                     i2u876_41:
 10755   001838  EF27  F00C         	goto	i2l1270
 10756   00183C                     i2u876_40:
 10757   00183C  A89E               	btfss	158,4,c	;volatile
 10758   00183E  EF23  F00C         	goto	i2u877_41
 10759   001842  EF25  F00C         	goto	i2u877_40
 10760   001846                     i2u877_41:
 10761   001846  EF27  F00C         	goto	i2l1270
 10762   00184A                     i2u877_40:
 10763   00184A                     
 10764                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 122:         EUSART_TX_ISR();
 10765   00184A  EC94  F025         	call	_EUSART_TX_ISR	;wreg free
 10766   00184E                     i2l1270:
 10767                           
 10768                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 125:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
 10769   00184E  AA9D               	btfss	157,5,c	;volatile
 10770   001850  EF2C  F00C         	goto	i2u878_41
 10771   001854  EF2E  F00C         	goto	i2u878_40
 10772   001858                     i2u878_41:
 10773   001858  EF37  F00C         	goto	i2l1272
 10774   00185C                     i2u878_40:
 10775   00185C  AA9E               	btfss	158,5,c	;volatile
 10776   00185E  EF33  F00C         	goto	i2u879_41
 10777   001862  EF35  F00C         	goto	i2u879_40
 10778   001866                     i2u879_41:
 10779   001866  EF37  F00C         	goto	i2l1272
 10780   00186A                     i2u879_40:
 10781   00186A                     
 10782                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:         EUSART_RX_ISR();
 10783   00186A  ECEB  F024         	call	_EUSART_RX_ISR	;wreg free
 10784   00186E                     i2l1272:
 10785                           
 10786                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 131:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF && (SSPCON1bits.SSPM > 5))){
 10787   00186E  A69D               	btfss	157,3,c	;volatile
 10788   001870  EF3C  F00C         	goto	i2u880_41
 10789   001874  EF3E  F00C         	goto	i2u880_40
 10790   001878                     i2u880_41:
 10791   001878  EF52  F00C         	goto	i2l1274
 10792   00187C                     i2u880_40:
 10793   00187C  A69E               	btfss	158,3,c	;volatile
 10794   00187E  EF43  F00C         	goto	i2u881_41
 10795   001882  EF45  F00C         	goto	i2u881_40
 10796   001886                     i2u881_41:
 10797   001886  EF52  F00C         	goto	i2l1274
 10798   00188A                     i2u881_40:
 10799   00188A  50C6               	movf	198,w,c	;volatile
 10800   00188C  0B0F               	andlw	15
 10801   00188E  6E09               	movwf	??_InterruptManager^0,c
 10802   001890  0E05               	movlw	5
 10803   001892  6409               	cpfsgt	??_InterruptManager^0,c
 10804   001894  EF4E  F00C         	goto	i2u882_41
 10805   001898  EF50  F00C         	goto	i2u882_40
 10806   00189C                     i2u882_41:
 10807   00189C  EF52  F00C         	goto	i2l1274
 10808   0018A0                     i2u882_40:
 10809   0018A0                     
 10810                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 132:         MSSP_I2C_ISR();
 10811   0018A0  EC8A  F025         	call	_MSSP_I2C_ISR	;wreg free
 10812   0018A4                     i2l1274:
 10813                           
 10814                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF) && (SSPCON1bits.SSPM > 5)){
 10815   0018A4  A6A0               	btfss	160,3,c	;volatile
 10816   0018A6  EF57  F00C         	goto	i2u883_41
 10817   0018AA  EF59  F00C         	goto	i2u883_40
 10818   0018AE                     i2u883_41:
 10819   0018AE  EF6D  F00C         	goto	i2l1276
 10820   0018B2                     i2u883_40:
 10821   0018B2  A6A1               	btfss	161,3,c	;volatile
 10822   0018B4  EF5E  F00C         	goto	i2u884_41
 10823   0018B8  EF60  F00C         	goto	i2u884_40
 10824   0018BC                     i2u884_41:
 10825   0018BC  EF6D  F00C         	goto	i2l1276
 10826   0018C0                     i2u884_40:
 10827   0018C0  50C6               	movf	198,w,c	;volatile
 10828   0018C2  0B0F               	andlw	15
 10829   0018C4  6E09               	movwf	??_InterruptManager^0,c
 10830   0018C6  0E05               	movlw	5
 10831   0018C8  6409               	cpfsgt	??_InterruptManager^0,c
 10832   0018CA  EF69  F00C         	goto	i2u885_41
 10833   0018CE  EF6B  F00C         	goto	i2u885_40
 10834   0018D2                     i2u885_41:
 10835   0018D2  EF6D  F00C         	goto	i2l1276
 10836   0018D6                     i2u885_40:
 10837   0018D6                     
 10838                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 136:         MSSP_I2C_BC_ISR();
 10839   0018D6  EC8C  F025         	call	_MSSP_I2C_BC_ISR	;wreg free
 10840   0018DA                     i2l1276:
 10841                           
 10842                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 139:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF) && (SSPCON1bits.SSPM <= 5) ){
 10843   0018DA  A69D               	btfss	157,3,c	;volatile
 10844   0018DC  EF72  F00C         	goto	i2u886_41
 10845   0018E0  EF74  F00C         	goto	i2u886_40
 10846   0018E4                     i2u886_41:
 10847   0018E4  EF88  F00C         	goto	i2l1278
 10848   0018E8                     i2u886_40:
 10849   0018E8  A69E               	btfss	158,3,c	;volatile
 10850   0018EA  EF79  F00C         	goto	i2u887_41
 10851   0018EE  EF7B  F00C         	goto	i2u887_40
 10852   0018F2                     i2u887_41:
 10853   0018F2  EF88  F00C         	goto	i2l1278
 10854   0018F6                     i2u887_40:
 10855   0018F6  50C6               	movf	198,w,c	;volatile
 10856   0018F8  0B0F               	andlw	15
 10857   0018FA  6E09               	movwf	??_InterruptManager^0,c
 10858   0018FC  0E06               	movlw	6
 10859   0018FE  6009               	cpfslt	??_InterruptManager^0,c
 10860   001900  EF84  F00C         	goto	i2u888_41
 10861   001904  EF86  F00C         	goto	i2u888_40
 10862   001908                     i2u888_41:
 10863   001908  EF88  F00C         	goto	i2l1278
 10864   00190C                     i2u888_40:
 10865   00190C                     
 10866                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:         MSSP_SPI_ISR();
 10867   00190C  EC87  F025         	call	_MSSP_SPI_ISR	;wreg free
 10868   001910                     i2l1278:
 10869                           
 10870                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 145:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
 10871   001910  A49D               	btfss	157,2,c	;volatile
 10872   001912  EF8D  F00C         	goto	i2u889_41
 10873   001916  EF8F  F00C         	goto	i2u889_40
 10874   00191A                     i2u889_41:
 10875   00191A  EF98  F00C         	goto	i2l1280
 10876   00191E                     i2u889_40:
 10877   00191E  A49E               	btfss	158,2,c	;volatile
 10878   001920  EF94  F00C         	goto	i2u890_41
 10879   001924  EF96  F00C         	goto	i2u890_40
 10880   001928                     i2u890_41:
 10881   001928  EF98  F00C         	goto	i2l1280
 10882   00192C                     i2u890_40:
 10883   00192C                     
 10884                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 146:         CCP1_ISR();
 10885   00192C  EC96  F025         	call	_CCP1_ISR	;wreg free
 10886   001930                     i2l1280:
 10887                           
 10888                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 149:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
 10889   001930  A0A0               	btfss	160,0,c	;volatile
 10890   001932  EF9D  F00C         	goto	i2u891_41
 10891   001936  EF9F  F00C         	goto	i2u891_40
 10892   00193A                     i2u891_41:
 10893   00193A  EFA8  F00C         	goto	i2l1283
 10894   00193E                     i2u891_40:
 10895   00193E  A0A1               	btfss	161,0,c	;volatile
 10896   001940  EFA4  F00C         	goto	i2u892_41
 10897   001944  EFA6  F00C         	goto	i2u892_40
 10898   001948                     i2u892_41:
 10899   001948  EFA8  F00C         	goto	i2l1283
 10900   00194C                     i2u892_40:
 10901   00194C                     
 10902                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 150:         CCP2_ISR();
 10903   00194C  ECA4  F024         	call	_CCP2_ISR	;wreg free
 10904   001950                     i2l1283:
 10905   001950  C00D  FFDA         	movff	??_InterruptManager+4,fsr2h
 10906   001954  C00C  FFD9         	movff	??_InterruptManager+3,fsr2l
 10907   001958  C00B  FFFB         	movff	??_InterruptManager+2,pclatu
 10908   00195C  C00A  FFFA         	movff	??_InterruptManager+1,pclath
 10909   001960  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10910   001962  0011               	retfie		f
 10911   001964                     __end_of_InterruptManager:
 10912                           	callstack 0
 10913                           
 10914 ;; *************** function _TMR3_ISR *****************
 10915 ;; Defined at:
 10916 ;;		line 102 in file "MCAL_Layer/Timer3/hal_timr3.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;		None
 10919 ;; Auto vars:     Size  Location     Type
 10920 ;;		None
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  1    wreg      void 
 10923 ;; Registers used:
 10924 ;;		wreg, status,2
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10934 ;;Total ram usage:        0 bytes
 10935 ;; Hardware stack levels used: 1
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		_InterruptManager
 10940 ;; This function uses a non-reentrant model
 10941 ;;
 10942                           
 10943                           	psect	text55
 10944   004AD2                     __ptext55:
 10945                           	callstack 0
 10946   004AD2                     _TMR3_ISR:
 10947                           	callstack 20
 10948   004AD2                     
 10949                           ;MCAL_Layer/Timer3/hal_timr3.c: 103:     (PIR2bits.TMR3IF = 0);
 10950   004AD2  92A1               	bcf	161,1,c	;volatile
 10951   004AD4                     
 10952                           ;MCAL_Layer/Timer3/hal_timr3.c: 104:     TMR3H = (timer3_preload) >> 8;
 10953   004AD4  0100               	movlb	0	; () banked
 10954   004AD6  5191               	movf	(_timer3_preload+1)& (0+255),w,b
 10955   004AD8  6EB3               	movwf	179,c	;volatile
 10956   004ADA                     
 10957                           ; BSR set to: 0
 10958                           ;MCAL_Layer/Timer3/hal_timr3.c: 105:     TMR3L = (uint8)(timer3_preload);
 10959   004ADA  C090  FFB2         	movff	_timer3_preload,4018	;volatile
 10960   004ADE                     
 10961                           ; BSR set to: 0
 10962   004ADE  0012               	return		;funcret
 10963   004AE0                     __end_of_TMR3_ISR:
 10964                           	callstack 0
 10965                           
 10966 ;; *************** function _TMR2_ISR *****************
 10967 ;; Defined at:
 10968 ;;		line 95 in file "MCAL_Layer/Timer2/hal_timr2.c"
 10969 ;; Parameters:    Size  Location     Type
 10970 ;;		None
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;		None
 10973 ;; Return value:  Size  Location     Type
 10974 ;;                  1    wreg      void 
 10975 ;; Registers used:
 10976 ;;		None
 10977 ;; Tracked objects:
 10978 ;;		On entry : 0/0
 10979 ;;		On exit  : 0/0
 10980 ;;		Unchanged: 0/0
 10981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10986 ;;Total ram usage:        0 bytes
 10987 ;; Hardware stack levels used: 1
 10988 ;; This function calls:
 10989 ;;		Nothing
 10990 ;; This function is called by:
 10991 ;;		_InterruptManager
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995                           	psect	text56
 10996   004B06                     __ptext56:
 10997                           	callstack 0
 10998   004B06                     _TMR2_ISR:
 10999                           	callstack 20
 11000   004B06                     
 11001                           ;MCAL_Layer/Timer2/hal_timr2.c: 96:     (PIR1bits.TMR2IF = 0);
 11002   004B06  929E               	bcf	158,1,c	;volatile
 11003                           
 11004                           ;MCAL_Layer/Timer2/hal_timr2.c: 97:     TMR2 = timer2_preload;
 11005   004B08  C0C1  FFCC         	movff	_timer2_preload,4044	;volatile
 11006   004B0C  0012               	return		;funcret
 11007   004B0E                     __end_of_TMR2_ISR:
 11008                           	callstack 0
 11009                           
 11010 ;; *************** function _TMR1_ISR *****************
 11011 ;; Defined at:
 11012 ;;		line 102 in file "MCAL_Layer/Timer1/hal_timr1.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;		None
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;		None
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  1    wreg      void 
 11019 ;; Registers used:
 11020 ;;		wreg, status,2
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11030 ;;Total ram usage:        0 bytes
 11031 ;; Hardware stack levels used: 1
 11032 ;; This function calls:
 11033 ;;		Nothing
 11034 ;; This function is called by:
 11035 ;;		_InterruptManager
 11036 ;; This function uses a non-reentrant model
 11037 ;;
 11038                           
 11039                           	psect	text57
 11040   004AEE                     __ptext57:
 11041                           	callstack 0
 11042   004AEE                     _TMR1_ISR:
 11043                           	callstack 20
 11044   004AEE                     
 11045                           ;MCAL_Layer/Timer1/hal_timr1.c: 103:     (PIR1bits.TMR1IF = 0);
 11046   004AEE  909E               	bcf	158,0,c	;volatile
 11047   004AF0                     
 11048                           ;MCAL_Layer/Timer1/hal_timr1.c: 104:     TMR1H = (timer1_preload) >> 8;
 11049   004AF0  5071               	movf	(_timer1_preload+1)^0,w,c	;volatile
 11050   004AF2  6ECF               	movwf	207,c	;volatile
 11051   004AF4                     
 11052                           ;MCAL_Layer/Timer1/hal_timr1.c: 105:     TMR1L = (uint8)(timer1_preload);
 11053   004AF4  C070  FFCE         	movff	_timer1_preload,4046	;volatile
 11054   004AF8  0012               	return		;funcret
 11055   004AFA                     __end_of_TMR1_ISR:
 11056                           	callstack 0
 11057                           
 11058 ;; *************** function _TMR0_ISR *****************
 11059 ;; Defined at:
 11060 ;;		line 107 in file "MCAL_Layer/Timer0/hal_timr0.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;		None
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;		None
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  1    wreg      void 
 11067 ;; Registers used:
 11068 ;;		wreg, status,2
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;Total ram usage:        0 bytes
 11079 ;; Hardware stack levels used: 1
 11080 ;; This function calls:
 11081 ;;		Nothing
 11082 ;; This function is called by:
 11083 ;;		_InterruptManager
 11084 ;; This function uses a non-reentrant model
 11085 ;;
 11086                           
 11087                           	psect	text58
 11088   004AE0                     __ptext58:
 11089                           	callstack 0
 11090   004AE0                     _TMR0_ISR:
 11091                           	callstack 20
 11092   004AE0                     
 11093                           ;MCAL_Layer/Timer0/hal_timr0.c: 108:     (INTCONbits.TMR0IF = 0);
 11094   004AE0  94F2               	bcf	242,2,c	;volatile
 11095   004AE2                     
 11096                           ;MCAL_Layer/Timer0/hal_timr0.c: 109:     TMR0H = (timer0_preload) >> 8;
 11097   004AE2  0100               	movlb	0	; () banked
 11098   004AE4  5199               	movf	(_timer0_preload+1)& (0+255),w,b
 11099   004AE6  6ED7               	movwf	215,c	;volatile
 11100   004AE8                     
 11101                           ; BSR set to: 0
 11102                           ;MCAL_Layer/Timer0/hal_timr0.c: 110:     TMR0L = (uint8)(timer0_preload);
 11103   004AE8  C098  FFD6         	movff	_timer0_preload,4054	;volatile
 11104   004AEC                     
 11105                           ; BSR set to: 0
 11106   004AEC  0012               	return		;funcret
 11107   004AEE                     __end_of_TMR0_ISR:
 11108                           	callstack 0
 11109                           
 11110 ;; *************** function _RB7_ISR *****************
 11111 ;; Defined at:
 11112 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;  RB7_Source      1    wreg     unsigned char 
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;  RB7_Source      1    0[COMRAM] unsigned char 
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  1    wreg      void 
 11119 ;; Registers used:
 11120 ;;		wreg, status,2, status,0
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11130 ;;Total ram usage:        1 bytes
 11131 ;; Hardware stack levels used: 1
 11132 ;; This function calls:
 11133 ;;		Nothing
 11134 ;; This function is called by:
 11135 ;;		_InterruptManager
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139                           	psect	text59
 11140   004A5C                     __ptext59:
 11141                           	callstack 0
 11142   004A5C                     _RB7_ISR:
 11143                           	callstack 20
 11144                           
 11145                           ; BSR set to: 0
 11146                           ;incstack = 0
 11147                           ;RB7_ISR@RB7_Source stored from wreg
 11148   004A5C  6E01               	movwf	RB7_ISR@RB7_Source^0,c
 11149   004A5E                     
 11150                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     (INTCONbits.RBIF = 0);
 11151   004A5E  90F2               	bcf	242,0,c	;volatile
 11152   004A60                     
 11153                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 169:     if(0 == RB7_Source){
 11154   004A60  5001               	movf	RB7_ISR@RB7_Source^0,w,c
 11155   004A62  A4D8               	btfss	status,2,c
 11156   004A64  EF36  F025         	goto	i2u737_41
 11157   004A68  EF38  F025         	goto	i2u737_40
 11158   004A6C                     i2u737_41:
 11159   004A6C  EF3A  F025         	goto	i2l8006
 11160   004A70                     i2u737_40:
 11161   004A70  EF3A  F025         	goto	i2l1061
 11162   004A74                     i2l8006:
 11163   004A74                     i2l1061:
 11164   004A74  0012               	return		;funcret
 11165   004A76                     __end_of_RB7_ISR:
 11166                           	callstack 0
 11167                           
 11168 ;; *************** function _RB6_ISR *****************
 11169 ;; Defined at:
 11170 ;;		line 145 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;  RB6_Source      1    wreg     unsigned char 
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;  RB6_Source      1    0[COMRAM] unsigned char 
 11175 ;; Return value:  Size  Location     Type
 11176 ;;                  1    wreg      void 
 11177 ;; Registers used:
 11178 ;;		wreg, status,2, status,0
 11179 ;; Tracked objects:
 11180 ;;		On entry : 0/0
 11181 ;;		On exit  : 0/0
 11182 ;;		Unchanged: 0/0
 11183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11188 ;;Total ram usage:        1 bytes
 11189 ;; Hardware stack levels used: 1
 11190 ;; This function calls:
 11191 ;;		Nothing
 11192 ;; This function is called by:
 11193 ;;		_InterruptManager
 11194 ;; This function uses a non-reentrant model
 11195 ;;
 11196                           
 11197                           	psect	text60
 11198   004A76                     __ptext60:
 11199                           	callstack 0
 11200   004A76                     _RB6_ISR:
 11201                           	callstack 20
 11202                           
 11203                           ;incstack = 0
 11204                           ;RB6_ISR@RB6_Source stored from wreg
 11205   004A76  6E01               	movwf	RB6_ISR@RB6_Source^0,c
 11206   004A78                     
 11207                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 147:     (INTCONbits.RBIF = 0);
 11208   004A78  90F2               	bcf	242,0,c	;volatile
 11209   004A7A                     
 11210                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     if(0 == RB6_Source){
 11211   004A7A  5001               	movf	RB6_ISR@RB6_Source^0,w,c
 11212   004A7C  A4D8               	btfss	status,2,c
 11213   004A7E  EF43  F025         	goto	i2u736_41
 11214   004A82  EF45  F025         	goto	i2u736_40
 11215   004A86                     i2u736_41:
 11216   004A86  EF47  F025         	goto	i2l7992
 11217   004A8A                     i2u736_40:
 11218   004A8A  EF47  F025         	goto	i2l1050
 11219   004A8E                     i2l7992:
 11220   004A8E                     i2l1050:
 11221   004A8E  0012               	return		;funcret
 11222   004A90                     __end_of_RB6_ISR:
 11223                           	callstack 0
 11224                           
 11225 ;; *************** function _RB5_ISR *****************
 11226 ;; Defined at:
 11227 ;;		line 126 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;  RB5_Source      1    wreg     unsigned char 
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;  RB5_Source      1    0[COMRAM] unsigned char 
 11232 ;; Return value:  Size  Location     Type
 11233 ;;                  1    wreg      void 
 11234 ;; Registers used:
 11235 ;;		wreg, status,2, status,0
 11236 ;; Tracked objects:
 11237 ;;		On entry : 0/0
 11238 ;;		On exit  : 0/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11245 ;;Total ram usage:        1 bytes
 11246 ;; Hardware stack levels used: 1
 11247 ;; This function calls:
 11248 ;;		Nothing
 11249 ;; This function is called by:
 11250 ;;		_InterruptManager
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           	psect	text61
 11255   004A90                     __ptext61:
 11256                           	callstack 0
 11257   004A90                     _RB5_ISR:
 11258                           	callstack 20
 11259                           
 11260                           ;incstack = 0
 11261                           ;RB5_ISR@RB5_Source stored from wreg
 11262   004A90  6E01               	movwf	RB5_ISR@RB5_Source^0,c
 11263   004A92                     
 11264                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 128:     (INTCONbits.RBIF = 0);
 11265   004A92  90F2               	bcf	242,0,c	;volatile
 11266   004A94                     
 11267                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 131:     if(0 == RB5_Source){
 11268   004A94  5001               	movf	RB5_ISR@RB5_Source^0,w,c
 11269   004A96  A4D8               	btfss	status,2,c
 11270   004A98  EF50  F025         	goto	i2u735_41
 11271   004A9C  EF52  F025         	goto	i2u735_40
 11272   004AA0                     i2u735_41:
 11273   004AA0  EF54  F025         	goto	i2l7978
 11274   004AA4                     i2u735_40:
 11275   004AA4  EF54  F025         	goto	i2l1039
 11276   004AA8                     i2l7978:
 11277   004AA8                     i2l1039:
 11278   004AA8  0012               	return		;funcret
 11279   004AAA                     __end_of_RB5_ISR:
 11280                           	callstack 0
 11281                           
 11282 ;; *************** function _RB4_ISR *****************
 11283 ;; Defined at:
 11284 ;;		line 107 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;  RB4_Source      1    wreg     unsigned char 
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;  RB4_Source      1    0[COMRAM] unsigned char 
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      void 
 11291 ;; Registers used:
 11292 ;;		wreg, status,2, status,0
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11302 ;;Total ram usage:        1 bytes
 11303 ;; Hardware stack levels used: 1
 11304 ;; This function calls:
 11305 ;;		Nothing
 11306 ;; This function is called by:
 11307 ;;		_InterruptManager
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           	psect	text62
 11312   004AAA                     __ptext62:
 11313                           	callstack 0
 11314   004AAA                     _RB4_ISR:
 11315                           	callstack 20
 11316                           
 11317                           ;incstack = 0
 11318                           ;RB4_ISR@RB4_Source stored from wreg
 11319   004AAA  6E01               	movwf	RB4_ISR@RB4_Source^0,c
 11320   004AAC                     
 11321                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 109:     (INTCONbits.RBIF = 0);
 11322   004AAC  90F2               	bcf	242,0,c	;volatile
 11323   004AAE                     
 11324                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 112:     if(0 == RB4_Source){
 11325   004AAE  5001               	movf	RB4_ISR@RB4_Source^0,w,c
 11326   004AB0  A4D8               	btfss	status,2,c
 11327   004AB2  EF5D  F025         	goto	i2u734_41
 11328   004AB6  EF5F  F025         	goto	i2u734_40
 11329   004ABA                     i2u734_41:
 11330   004ABA  EF61  F025         	goto	i2l7964
 11331   004ABE                     i2u734_40:
 11332   004ABE  EF61  F025         	goto	i2l1028
 11333   004AC2                     i2l7964:
 11334   004AC2                     i2l1028:
 11335   004AC2  0012               	return		;funcret
 11336   004AC4                     __end_of_RB4_ISR:
 11337                           	callstack 0
 11338                           
 11339 ;; *************** function _MSSP_SPI_ISR *****************
 11340 ;; Defined at:
 11341 ;;		line 130 in file "MCAL_Layer/SPI/hal_spi.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;		None
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;		None
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      void 
 11348 ;; Registers used:
 11349 ;;		None
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11359 ;;Total ram usage:        0 bytes
 11360 ;; Hardware stack levels used: 1
 11361 ;; This function calls:
 11362 ;;		Nothing
 11363 ;; This function is called by:
 11364 ;;		_InterruptManager
 11365 ;; This function uses a non-reentrant model
 11366 ;;
 11367                           
 11368                           	psect	text63
 11369   004B0E                     __ptext63:
 11370                           	callstack 0
 11371   004B0E                     _MSSP_SPI_ISR:
 11372                           	callstack 20
 11373   004B0E                     
 11374                           ;MCAL_Layer/SPI/hal_spi.c: 132:     (PIR1bits.SSPIF = 0);
 11375   004B0E  969E               	bcf	158,3,c	;volatile
 11376                           
 11377                           ;MCAL_Layer/SPI/hal_spi.c: 133:     (PIR1bits.SSPIF = 0);
 11378   004B10  969E               	bcf	158,3,c	;volatile
 11379   004B12  0012               	return		;funcret
 11380   004B14                     __end_of_MSSP_SPI_ISR:
 11381                           	callstack 0
 11382                           
 11383 ;; *************** function _MSSP_I2C_ISR *****************
 11384 ;; Defined at:
 11385 ;;		line 281 in file "MCAL_Layer/I2C/hal_i2c.c"
 11386 ;; Parameters:    Size  Location     Type
 11387 ;;		None
 11388 ;; Auto vars:     Size  Location     Type
 11389 ;;		None
 11390 ;; Return value:  Size  Location     Type
 11391 ;;                  1    wreg      void 
 11392 ;; Registers used:
 11393 ;;		None
 11394 ;; Tracked objects:
 11395 ;;		On entry : 0/0
 11396 ;;		On exit  : 0/0
 11397 ;;		Unchanged: 0/0
 11398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11403 ;;Total ram usage:        0 bytes
 11404 ;; Hardware stack levels used: 1
 11405 ;; This function calls:
 11406 ;;		Nothing
 11407 ;; This function is called by:
 11408 ;;		_InterruptManager
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text64
 11413   004B14                     __ptext64:
 11414                           	callstack 0
 11415   004B14                     _MSSP_I2C_ISR:
 11416                           	callstack 20
 11417   004B14                     
 11418                           ;MCAL_Layer/I2C/hal_i2c.c: 283:     (PIR1bits.SSPIF = 0);
 11419   004B14  969E               	bcf	158,3,c	;volatile
 11420   004B16  0012               	return		;funcret
 11421   004B18                     __end_of_MSSP_I2C_ISR:
 11422                           	callstack 0
 11423                           
 11424 ;; *************** function _MSSP_I2C_BC_ISR *****************
 11425 ;; Defined at:
 11426 ;;		line 290 in file "MCAL_Layer/I2C/hal_i2c.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;		None
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;		None
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  1    wreg      void 
 11433 ;; Registers used:
 11434 ;;		None
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11444 ;;Total ram usage:        0 bytes
 11445 ;; Hardware stack levels used: 1
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		_InterruptManager
 11450 ;; This function uses a non-reentrant model
 11451 ;;
 11452                           
 11453                           	psect	text65
 11454   004B18                     __ptext65:
 11455                           	callstack 0
 11456   004B18                     _MSSP_I2C_BC_ISR:
 11457                           	callstack 20
 11458   004B18                     
 11459                           ;MCAL_Layer/I2C/hal_i2c.c: 292:     (PIR2bits.BCLIF = 0);
 11460   004B18  96A1               	bcf	161,3,c	;volatile
 11461   004B1A  0012               	return		;funcret
 11462   004B1C                     __end_of_MSSP_I2C_BC_ISR:
 11463                           	callstack 0
 11464                           
 11465 ;; *************** function _INT2_ISR *****************
 11466 ;; Defined at:
 11467 ;;		line 95 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;		None
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;		None
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		None
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11485 ;;Total ram usage:        0 bytes
 11486 ;; Hardware stack levels used: 1
 11487 ;; This function calls:
 11488 ;;		Nothing
 11489 ;; This function is called by:
 11490 ;;		_InterruptManager
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text66
 11495   004B1C                     __ptext66:
 11496                           	callstack 0
 11497   004B1C                     _INT2_ISR:
 11498                           	callstack 20
 11499   004B1C                     
 11500                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 97:     (INTCON3bits.INT2IF = 0);
 11501   004B1C  92F0               	bcf	240,1,c	;volatile
 11502   004B1E  0012               	return		;funcret
 11503   004B20                     __end_of_INT2_ISR:
 11504                           	callstack 0
 11505                           
 11506 ;; *************** function _INT1_ISR *****************
 11507 ;; Defined at:
 11508 ;;		line 86 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11509 ;; Parameters:    Size  Location     Type
 11510 ;;		None
 11511 ;; Auto vars:     Size  Location     Type
 11512 ;;		None
 11513 ;; Return value:  Size  Location     Type
 11514 ;;                  1    wreg      void 
 11515 ;; Registers used:
 11516 ;;		None
 11517 ;; Tracked objects:
 11518 ;;		On entry : 0/0
 11519 ;;		On exit  : 0/0
 11520 ;;		Unchanged: 0/0
 11521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11526 ;;Total ram usage:        0 bytes
 11527 ;; Hardware stack levels used: 1
 11528 ;; This function calls:
 11529 ;;		Nothing
 11530 ;; This function is called by:
 11531 ;;		_InterruptManager
 11532 ;; This function uses a non-reentrant model
 11533 ;;
 11534                           
 11535                           	psect	text67
 11536   004B20                     __ptext67:
 11537                           	callstack 0
 11538   004B20                     _INT1_ISR:
 11539                           	callstack 20
 11540   004B20                     
 11541                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 88:     (INTCON3bits.INT1IF = 0);
 11542   004B20  90F0               	bcf	240,0,c	;volatile
 11543   004B22  0012               	return		;funcret
 11544   004B24                     __end_of_INT1_ISR:
 11545                           	callstack 0
 11546                           
 11547 ;; *************** function _INT0_ISR *****************
 11548 ;; Defined at:
 11549 ;;		line 74 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;		None
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;		None
 11554 ;; Return value:  Size  Location     Type
 11555 ;;                  1    wreg      void 
 11556 ;; Registers used:
 11557 ;;		None
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : 0/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11567 ;;Total ram usage:        0 bytes
 11568 ;; Hardware stack levels used: 1
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_InterruptManager
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           
 11576                           	psect	text68
 11577   004B24                     __ptext68:
 11578                           	callstack 0
 11579   004B24                     _INT0_ISR:
 11580                           	callstack 20
 11581   004B24                     
 11582                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 76:     (INTCONbits.INT0IF = 0);
 11583   004B24  92F2               	bcf	242,1,c	;volatile
 11584   004B26  0012               	return		;funcret
 11585   004B28                     __end_of_INT0_ISR:
 11586                           	callstack 0
 11587                           
 11588 ;; *************** function _EUSART_TX_ISR *****************
 11589 ;; Defined at:
 11590 ;;		line 260 in file "MCAL_Layer/usart/hal_usart.c"
 11591 ;; Parameters:    Size  Location     Type
 11592 ;;		None
 11593 ;; Auto vars:     Size  Location     Type
 11594 ;;		None
 11595 ;; Return value:  Size  Location     Type
 11596 ;;                  1    wreg      void 
 11597 ;; Registers used:
 11598 ;;		None
 11599 ;; Tracked objects:
 11600 ;;		On entry : 0/0
 11601 ;;		On exit  : 0/0
 11602 ;;		Unchanged: 0/0
 11603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11608 ;;Total ram usage:        0 bytes
 11609 ;; Hardware stack levels used: 1
 11610 ;; This function calls:
 11611 ;;		Nothing
 11612 ;; This function is called by:
 11613 ;;		_InterruptManager
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           
 11617                           	psect	text69
 11618   004B28                     __ptext69:
 11619                           	callstack 0
 11620   004B28                     _EUSART_TX_ISR:
 11621                           	callstack 20
 11622   004B28                     
 11623                           ;MCAL_Layer/usart/hal_usart.c: 261:   (PIE1bits.TXIE = 0);
 11624   004B28  989D               	bcf	157,4,c	;volatile
 11625   004B2A  0012               	return		;funcret
 11626   004B2C                     __end_of_EUSART_TX_ISR:
 11627                           	callstack 0
 11628                           
 11629 ;; *************** function _EUSART_RX_ISR *****************
 11630 ;; Defined at:
 11631 ;;		line 268 in file "MCAL_Layer/usart/hal_usart.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;		None
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;		None
 11636 ;; Return value:  Size  Location     Type
 11637 ;;                  1    wreg      void 
 11638 ;; Registers used:
 11639 ;;		wreg, status,2, status,0
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11649 ;;Total ram usage:        0 bytes
 11650 ;; Hardware stack levels used: 1
 11651 ;; This function calls:
 11652 ;;		Nothing
 11653 ;; This function is called by:
 11654 ;;		_InterruptManager
 11655 ;; This function uses a non-reentrant model
 11656 ;;
 11657                           
 11658                           	psect	text70
 11659   0049D6                     __ptext70:
 11660                           	callstack 0
 11661   0049D6                     _EUSART_RX_ISR:
 11662                           	callstack 20
 11663   0049D6                     
 11664                           ;MCAL_Layer/usart/hal_usart.c: 273:   if (EUSART_FramingErrorHandler && RCSTAbits.FERR) 
      +                          {
 11665   0049D6  0100               	movlb	0	; () banked
 11666   0049D8  518A               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 11667   0049DA  118B               	iorwf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 11668   0049DC  B4D8               	btfsc	status,2,c
 11669   0049DE  EFF3  F024         	goto	i2u741_41
 11670   0049E2  EFF5  F024         	goto	i2u741_40
 11671   0049E6                     i2u741_41:
 11672   0049E6  EFF6  F024         	goto	i2l8098
 11673   0049EA                     i2u741_40:
 11674   0049EA                     
 11675                           ; BSR set to: 0
 11676                           ;MCAL_Layer/usart/hal_usart.c: 274:     EUSART_FramingErrorHandler();
 11677   0049EA  50AB               	movf	171,w,c	;volatile
 11678   0049EC                     i2l8098:
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;MCAL_Layer/usart/hal_usart.c: 277:   if (EUSART_OverrunErrorHandler && RCSTAbits.OERR) 
      +                          {
 11682   0049EC  5188               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 11683   0049EE  1189               	iorwf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 11684   0049F0  B4D8               	btfsc	status,2,c
 11685   0049F2  EFFD  F024         	goto	i2u742_41
 11686   0049F6  EFFF  F024         	goto	i2u742_40
 11687   0049FA                     i2u742_41:
 11688   0049FA  EF00  F025         	goto	i2l1738
 11689   0049FE                     i2u742_40:
 11690   0049FE                     
 11691                           ; BSR set to: 0
 11692                           ;MCAL_Layer/usart/hal_usart.c: 278:     EUSART_OverrunErrorHandler();
 11693   0049FE  50AB               	movf	171,w,c	;volatile
 11694   004A00                     i2l1738:
 11695                           
 11696                           ; BSR set to: 0
 11697   004A00  0012               	return		;funcret
 11698   004A02                     __end_of_EUSART_RX_ISR:
 11699                           	callstack 0
 11700                           
 11701 ;; *************** function _CCP2_ISR *****************
 11702 ;; Defined at:
 11703 ;;		line 254 in file "MCAL_Layer/CCP/hal_ccp.c"
 11704 ;; Parameters:    Size  Location     Type
 11705 ;;		None
 11706 ;; Auto vars:     Size  Location     Type
 11707 ;;		None
 11708 ;; Return value:  Size  Location     Type
 11709 ;;                  1    wreg      void 
 11710 ;; Registers used:
 11711 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11712 ;; Tracked objects:
 11713 ;;		On entry : 0/0
 11714 ;;		On exit  : 0/0
 11715 ;;		Unchanged: 0/0
 11716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11721 ;;Total ram usage:        0 bytes
 11722 ;; Hardware stack levels used: 1
 11723 ;; Hardware stack levels required when called: 1
 11724 ;; This function calls:
 11725 ;;		NULL
 11726 ;; This function is called by:
 11727 ;;		_InterruptManager
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	text71
 11732   004948                     __ptext71:
 11733                           	callstack 0
 11734   004948                     _CCP2_ISR:
 11735                           	callstack 19
 11736   004948                     
 11737                           ;MCAL_Layer/CCP/hal_ccp.c: 255:     (PIR2bits.CCP2IF = 0);
 11738   004948  90A1               	bcf	161,0,c	;volatile
 11739   00494A                     
 11740                           ;MCAL_Layer/CCP/hal_ccp.c: 256:     if(CCP2_InterruptHandler){
 11741   00494A  0100               	movlb	0	; () banked
 11742   00494C  51BA               	movf	_CCP2_InterruptHandler& (0+255),w,b
 11743   00494E  11BB               	iorwf	(_CCP2_InterruptHandler+1)& (0+255),w,b
 11744   004950  B4D8               	btfsc	status,2,c
 11745   004952  EFAD  F024         	goto	i2u732_41
 11746   004956  EFAF  F024         	goto	i2u732_40
 11747   00495A                     i2u732_41:
 11748   00495A  EFBB  F024         	goto	i2l578
 11749   00495E                     i2u732_40:
 11750   00495E                     
 11751                           ; BSR set to: 0
 11752                           ;MCAL_Layer/CCP/hal_ccp.c: 257:         CCP2_InterruptHandler();
 11753   00495E  D802               	call	i2u733_48
 11754   004960  EFBB  F024         	goto	i2u733_49
 11755   004964                     i2u733_48:
 11756   004964  0005               	push	
 11757   004966  6EFA               	movwf	pclath,c
 11758   004968  51BA               	movf	_CCP2_InterruptHandler& (0+255),w,b
 11759   00496A  6EFD               	movwf	tosl,c
 11760   00496C  51BB               	movf	(_CCP2_InterruptHandler+1)& (0+255),w,b
 11761   00496E  6EFE               	movwf	tosh,c
 11762   004970  6AFF               	clrf	tosu,c
 11763   004972  50FA               	movf	pclath,w,c
 11764   004974  0012               	return		;indir
 11765   004976                     i2u733_49:
 11766   004976                     i2l578:
 11767   004976  0012               	return		;funcret
 11768   004978                     __end_of_CCP2_ISR:
 11769                           	callstack 0
 11770                           
 11771 ;; *************** function _CCP1_ISR *****************
 11772 ;; Defined at:
 11773 ;;		line 246 in file "MCAL_Layer/CCP/hal_ccp.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;		None
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;		None
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  1    wreg      void 
 11780 ;; Registers used:
 11781 ;;		None
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11791 ;;Total ram usage:        0 bytes
 11792 ;; Hardware stack levels used: 1
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_InterruptManager
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           	psect	text72
 11801   004B2C                     __ptext72:
 11802                           	callstack 0
 11803   004B2C                     _CCP1_ISR:
 11804                           	callstack 20
 11805   004B2C                     
 11806                           ;MCAL_Layer/CCP/hal_ccp.c: 247:     (PIR1bits.CCP1IF = 0);
 11807   004B2C  949E               	bcf	158,2,c	;volatile
 11808   004B2E  0012               	return		;funcret
 11809   004B30                     __end_of_CCP1_ISR:
 11810                           	callstack 0
 11811                           
 11812 ;; *************** function _ADC_ISR *****************
 11813 ;; Defined at:
 11814 ;;		line 296 in file "MCAL_Layer/ADC/hal_adc.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;		None
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;		None
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  1    wreg      void 
 11821 ;; Registers used:
 11822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11832 ;;Total ram usage:        0 bytes
 11833 ;; Hardware stack levels used: 1
 11834 ;; Hardware stack levels required when called: 2
 11835 ;; This function calls:
 11836 ;;		NULL
 11837 ;;		_ADC_DefaultinterruptHandler
 11838 ;; This function is called by:
 11839 ;;		_InterruptManager
 11840 ;; This function uses a non-reentrant model
 11841 ;;
 11842                           
 11843                           	psect	text73
 11844   004978                     __ptext73:
 11845                           	callstack 0
 11846   004978                     _ADC_ISR:
 11847                           	callstack 18
 11848   004978                     
 11849                           ;MCAL_Layer/ADC/hal_adc.c: 297:     (PIR1bits.ADIF = 0);
 11850   004978  9C9E               	bcf	158,6,c	;volatile
 11851   00497A                     
 11852                           ;MCAL_Layer/ADC/hal_adc.c: 298:     if(ADC_InterruptHandler){
 11853   00497A  0100               	movlb	0	; () banked
 11854   00497C  51BE               	movf	_ADC_InterruptHandler& (0+255),w,b
 11855   00497E  11BF               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
 11856   004980  B4D8               	btfsc	status,2,c
 11857   004982  EFC5  F024         	goto	i2u724_41
 11858   004986  EFC7  F024         	goto	i2u724_40
 11859   00498A                     i2u724_41:
 11860   00498A  EFD3  F024         	goto	i2l481
 11861   00498E                     i2u724_40:
 11862   00498E                     
 11863                           ; BSR set to: 0
 11864                           ;MCAL_Layer/ADC/hal_adc.c: 299:         ADC_InterruptHandler();
 11865   00498E  D802               	call	i2u725_48
 11866   004990  EFD3  F024         	goto	i2u725_49
 11867   004994                     i2u725_48:
 11868   004994  0005               	push	
 11869   004996  6EFA               	movwf	pclath,c
 11870   004998  51BE               	movf	_ADC_InterruptHandler& (0+255),w,b
 11871   00499A  6EFD               	movwf	tosl,c
 11872   00499C  51BF               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
 11873   00499E  6EFE               	movwf	tosh,c
 11874   0049A0  6AFF               	clrf	tosu,c
 11875   0049A2  50FA               	movf	pclath,w,c
 11876   0049A4  0012               	return		;indir
 11877   0049A6                     i2u725_49:
 11878   0049A6                     i2l481:
 11879   0049A6  0012               	return		;funcret
 11880   0049A8                     __end_of_ADC_ISR:
 11881                           	callstack 0
 11882                           
 11883 ;; *************** function _ADC_DefaultinterruptHandler *****************
 11884 ;; Defined at:
 11885 ;;		line 100 in file "application.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;		None
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;  ret             1    0        unsigned char 
 11890 ;; Return value:  Size  Location     Type
 11891 ;;                  1    wreg      void 
 11892 ;; Registers used:
 11893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11894 ;; Tracked objects:
 11895 ;;		On entry : 0/0
 11896 ;;		On exit  : 0/0
 11897 ;;		Unchanged: 0/0
 11898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11903 ;;Total ram usage:        0 bytes
 11904 ;; Hardware stack levels used: 1
 11905 ;; Hardware stack levels required when called: 1
 11906 ;; This function calls:
 11907 ;;		_ADC_GetConversionResult
 11908 ;; This function is called by:
 11909 ;;		_ADC_ISR
 11910 ;; This function uses a non-reentrant model
 11911 ;;
 11912                           
 11913                           	psect	text74
 11914   004A26                     __ptext74:
 11915                           	callstack 0
 11916   004A26                     _ADC_DefaultinterruptHandler:
 11917                           	callstack 18
 11918   004A26                     
 11919                           ;application.c: 102:     adc_a0.adc_channel = ADC_CHANNEL_AN0;
 11920   004A26  0E00               	movlw	0
 11921   004A28  0101               	movlb	1	; () banked
 11922   004A2A  6F41               	movwf	(_adc_a0+5)& (0+255),b
 11923   004A2C                     
 11924                           ; BSR set to: 1
 11925   004A2C  0E3C               	movlw	low _adc_a0
 11926   004A2E  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
 11927   004A30  0E01               	movlw	high _adc_a0
 11928   004A32  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
 11929   004A34  0EC2               	movlw	low _lm35_res1
 11930   004A36  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
 11931   004A38  0E00               	movlw	high _lm35_res1
 11932   004A3A  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
 11933   004A3C  EC5C  F01E         	call	_ADC_GetConversionResult	;wreg free
 11934   004A40  0012               	return		;funcret
 11935   004A42                     __end_of_ADC_DefaultinterruptHandler:
 11936                           	callstack 0
 11937                           
 11938 ;; *************** function _ADC_GetConversionResult *****************
 11939 ;; Defined at:
 11940 ;;		line 181 in file "MCAL_Layer/ADC/hal_adc.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  _adc            2    0[COMRAM] PTR const struct .
 11943 ;;		 -> adc_a0(7), 
 11944 ;;  conversion_r    2    2[COMRAM] PTR unsigned short 
 11945 ;;		 -> lm35_res1(2), 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;  ret             1    7[COMRAM] unsigned char 
 11948 ;; Return value:  Size  Location     Type
 11949 ;;                  1    wreg      unsigned char 
 11950 ;; Registers used:
 11951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11952 ;; Tracked objects:
 11953 ;;		On entry : 0/0
 11954 ;;		On exit  : 0/0
 11955 ;;		Unchanged: 0/0
 11956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11959 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11960 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11961 ;;Total ram usage:        8 bytes
 11962 ;; Hardware stack levels used: 1
 11963 ;; This function calls:
 11964 ;;		Nothing
 11965 ;; This function is called by:
 11966 ;;		_ADC_DefaultinterruptHandler
 11967 ;;		_ADC_GetConversion_Blocking
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           	psect	text75
 11972   003CB8                     __ptext75:
 11973                           	callstack 0
 11974   003CB8                     _ADC_GetConversionResult:
 11975                           	callstack 18
 11976   003CB8                     
 11977                           ;MCAL_Layer/ADC/hal_adc.c: 183:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _result)){
 11978   003CB8  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
 11979   003CBA  1002               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
 11980   003CBC  B4D8               	btfsc	status,2,c
 11981   003CBE  EF63  F01E         	goto	i2u668_41
 11982   003CC2  EF65  F01E         	goto	i2u668_40
 11983   003CC6                     i2u668_41:
 11984   003CC6  EF6E  F01E         	goto	i2l7286
 11985   003CCA                     i2u668_40:
 11986   003CCA  5003               	movf	ADC_GetConversionResult@conversion_result^0,w,c
 11987   003CCC  1004               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
 11988   003CCE  A4D8               	btfss	status,2,c
 11989   003CD0  EF6C  F01E         	goto	i2u669_41
 11990   003CD4  EF6E  F01E         	goto	i2u669_40
 11991   003CD8                     i2u669_41:
 11992   003CD8  EF72  F01E         	goto	i2l7288
 11993   003CDC                     i2u669_40:
 11994   003CDC                     i2l7286:
 11995                           
 11996                           ;MCAL_Layer/ADC/hal_adc.c: 184:         ret = (Std_ReturnType)0x00;
 11997   003CDC  0E00               	movlw	0
 11998   003CDE  6E08               	movwf	ADC_GetConversionResult@ret^0,c
 11999                           
 12000                           ;MCAL_Layer/ADC/hal_adc.c: 185:     }
 12001   003CE0  EFBC  F01E         	goto	i2l7300
 12002   003CE4                     i2l7288:
 12003                           
 12004                           ;MCAL_Layer/ADC/hal_adc.c: 187:         if(0x01U == _adc->result_format){
 12005   003CE4  EE20 F006          	lfsr	2,6
 12006   003CE8  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
 12007   003CEA  26D9               	addwf	fsr2l,f,c
 12008   003CEC  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
 12009   003CEE  22DA               	addwfc	fsr2h,f,c
 12010   003CF0  A2DF               	btfss	indf2,1,c
 12011   003CF2  EF7D  F01E         	goto	i2u670_41
 12012   003CF6  EF7F  F01E         	goto	i2u670_40
 12013   003CFA                     i2u670_41:
 12014   003CFA  EF93  F01E         	goto	i2l7292
 12015   003CFE                     i2u670_40:
 12016   003CFE                     i2l7290:
 12017                           
 12018                           ;MCAL_Layer/ADC/hal_adc.c: 188:             *conversion_result = (adc_result_t)((ADRESH 
      +                          << 8) + ADRESL);
 12019   003CFE  50C3               	movf	195,w,c	;volatile
 12020   003D00  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
 12021   003D04  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
 12022   003D06  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
 12023   003D0A  6A05               	clrf	??_ADC_GetConversionResult^0,c
 12024   003D0C  2605               	addwf	??_ADC_GetConversionResult^0,f,c
 12025   003D0E  0E00               	movlw	0
 12026   003D10  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
 12027   003D12  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
 12028   003D16  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
 12029   003D1A  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
 12030   003D1E  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
 12031                           
 12032                           ;MCAL_Layer/ADC/hal_adc.c: 189:         }
 12033   003D22  EFBA  F01E         	goto	i2l7298
 12034   003D26                     i2l7292:
 12035   003D26  EE20 F006          	lfsr	2,6
 12036   003D2A  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
 12037   003D2C  26D9               	addwf	fsr2l,f,c
 12038   003D2E  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
 12039   003D30  22DA               	addwfc	fsr2h,f,c
 12040   003D32  B2DF               	btfsc	indf2,1,c
 12041   003D34  EF9E  F01E         	goto	i2u671_41
 12042   003D38  EFA0  F01E         	goto	i2u671_40
 12043   003D3C                     i2u671_41:
 12044   003D3C  EF7F  F01E         	goto	i2l7290
 12045   003D40                     i2u671_40:
 12046   003D40                     
 12047                           ;MCAL_Layer/ADC/hal_adc.c: 191:             *conversion_result = (adc_result_t)(((ADRESH
      +                           << 8) + ADRESL) >> 6);
 12048   003D40  50C3               	movf	195,w,c	;volatile
 12049   003D42  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
 12050   003D46  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
 12051   003D48  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
 12052   003D4C  6A05               	clrf	??_ADC_GetConversionResult^0,c
 12053   003D4E  2605               	addwf	??_ADC_GetConversionResult^0,f,c
 12054   003D50  0E00               	movlw	0
 12055   003D52  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
 12056   003D54  0E06               	movlw	6
 12057   003D56  6E07               	movwf	(??_ADC_GetConversionResult+2)^0,c
 12058   003D58                     i2u672_45:
 12059   003D58  3406               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
 12060   003D5A  3206               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
 12061   003D5C  3205               	rrcf	??_ADC_GetConversionResult^0,f,c
 12062   003D5E  2E07               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
 12063   003D60  EFAC  F01E         	goto	i2u672_45
 12064   003D64  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
 12065   003D68  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
 12066   003D6C  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
 12067   003D70  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
 12068   003D74                     i2l7298:
 12069                           
 12070                           ;MCAL_Layer/ADC/hal_adc.c: 196:         ret = (Std_ReturnType)0x01;
 12071   003D74  0E01               	movlw	1
 12072   003D76  6E08               	movwf	ADC_GetConversionResult@ret^0,c
 12073   003D78                     i2l7300:
 12074                           
 12075                           ;MCAL_Layer/ADC/hal_adc.c: 198:     return ret;
 12076   003D78  5008               	movf	ADC_GetConversionResult@ret^0,w,c
 12077   003D7A  0012               	return		;funcret
 12078   003D7C                     __end_of_ADC_GetConversionResult:
 12079                           	callstack 0
 12080                           
 12081                           	psect	text76
 12082   000000                     __ptext76:
 12083                           	callstack 0
 12084   000000                     
 12085                           	psect	rparam
 12086   000000                     
 12087                           	psect	temp
 12088   000072                     btemp:
 12089                           	callstack 0
 12090   000072                     	ds	1
 12091   000000                     int$flags	set	btemp
 12092   000000                     wtemp8	set	btemp+1
 12093   000000                     ttemp5	set	btemp+1
 12094   000000                     ttemp6	set	btemp+4
 12095   000000                     ttemp7	set	btemp+8
 12096                           
 12097                           	psect	idloc
 12098                           
 12099                           ;Config register IDLOC0 @ 0x200000
 12100                           ;	unspecified, using default values
 12101   200000                     	org	2097152
 12102   200000  FF                 	db	255
 12103                           
 12104                           ;Config register IDLOC1 @ 0x200001
 12105                           ;	unspecified, using default values
 12106   200001                     	org	2097153
 12107   200001  FF                 	db	255
 12108                           
 12109                           ;Config register IDLOC2 @ 0x200002
 12110                           ;	unspecified, using default values
 12111   200002                     	org	2097154
 12112   200002  FF                 	db	255
 12113                           
 12114                           ;Config register IDLOC3 @ 0x200003
 12115                           ;	unspecified, using default values
 12116   200003                     	org	2097155
 12117   200003  FF                 	db	255
 12118                           
 12119                           ;Config register IDLOC4 @ 0x200004
 12120                           ;	unspecified, using default values
 12121   200004                     	org	2097156
 12122   200004  FF                 	db	255
 12123                           
 12124                           ;Config register IDLOC5 @ 0x200005
 12125                           ;	unspecified, using default values
 12126   200005                     	org	2097157
 12127   200005  FF                 	db	255
 12128                           
 12129                           ;Config register IDLOC6 @ 0x200006
 12130                           ;	unspecified, using default values
 12131   200006                     	org	2097158
 12132   200006  FF                 	db	255
 12133                           
 12134                           ;Config register IDLOC7 @ 0x200007
 12135                           ;	unspecified, using default values
 12136   200007                     	org	2097159
 12137   200007  FF                 	db	255
 12138                           
 12139                           	psect	config
 12140                           
 12141                           ; Padding undefined space
 12142   300000                     	org	3145728
 12143   300000  FF                 	db	255
 12144                           
 12145                           ;Config register CONFIG1H @ 0x300001
 12146                           ;	Oscillator Selection bits
 12147                           ;	OSC = HS, HS oscillator
 12148                           ;	Fail-Safe Clock Monitor Enable bit
 12149                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12150                           ;	Internal/External Oscillator Switchover bit
 12151                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12152   300001                     	org	3145729
 12153   300001  02                 	db	2
 12154                           
 12155                           ;Config register CONFIG2L @ 0x300002
 12156                           ;	Power-up Timer Enable bit
 12157                           ;	PWRT = OFF, PWRT disabled
 12158                           ;	Brown-out Reset Enable bits
 12159                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 12160                           ;	Brown Out Reset Voltage bits
 12161                           ;	BORV = 1, 
 12162   300002                     	org	3145730
 12163   300002  09                 	db	9
 12164                           
 12165                           ;Config register CONFIG2H @ 0x300003
 12166                           ;	Watchdog Timer Enable bit
 12167                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12168                           ;	Watchdog Timer Postscale Select bits
 12169                           ;	WDTPS = 512, 1:512
 12170   300003                     	org	3145731
 12171   300003  12                 	db	18
 12172                           
 12173                           ; Padding undefined space
 12174   300004                     	org	3145732
 12175   300004  FF                 	db	255
 12176                           
 12177                           ;Config register CONFIG3H @ 0x300005
 12178                           ;	CCP2 MUX bit
 12179                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 12180                           ;	PORTB A/D Enable bit
 12181                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12182                           ;	Low-Power Timer1 Oscillator Enable bit
 12183                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12184                           ;	MCLR Pin Enable bit
 12185                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12186   300005                     	org	3145733
 12187   300005  81                 	db	129
 12188                           
 12189                           ;Config register CONFIG4L @ 0x300006
 12190                           ;	Stack Full/Underflow Reset Enable bit
 12191                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12192                           ;	Single-Supply ICSP Enable bit
 12193                           ;	LVP = OFF, Single-Supply ICSP disabled
 12194                           ;	Extended Instruction Set Enable bit
 12195                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12196                           ;	Background Debugger Enable bit
 12197                           ;	DEBUG = 0x1, unprogrammed default
 12198   300006                     	org	3145734
 12199   300006  81                 	db	129
 12200                           
 12201                           ; Padding undefined space
 12202   300007                     	org	3145735
 12203   300007  FF                 	db	255
 12204                           
 12205                           ;Config register CONFIG5L @ 0x300008
 12206                           ;	Code Protection bit
 12207                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12208                           ;	Code Protection bit
 12209                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12210                           ;	Code Protection bit
 12211                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12212                           ;	Code Protection bit
 12213                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12214   300008                     	org	3145736
 12215   300008  0F                 	db	15
 12216                           
 12217                           ;Config register CONFIG5H @ 0x300009
 12218                           ;	Boot Block Code Protection bit
 12219                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12220                           ;	Data EEPROM Code Protection bit
 12221                           ;	CPD = OFF, Data EEPROM not code-protected
 12222   300009                     	org	3145737
 12223   300009  C0                 	db	192
 12224                           
 12225                           ;Config register CONFIG6L @ 0x30000A
 12226                           ;	Write Protection bit
 12227                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12228                           ;	Write Protection bit
 12229                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12230                           ;	Write Protection bit
 12231                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12232                           ;	Write Protection bit
 12233                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12234   30000A                     	org	3145738
 12235   30000A  0F                 	db	15
 12236                           
 12237                           ;Config register CONFIG6H @ 0x30000B
 12238                           ;	Configuration Register Write Protection bit
 12239                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12240                           ;	Boot Block Write Protection bit
 12241                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12242                           ;	Data EEPROM Write Protection bit
 12243                           ;	WRTD = OFF, Data EEPROM not write-protected
 12244   30000B                     	org	3145739
 12245   30000B  E0                 	db	224
 12246                           
 12247                           ;Config register CONFIG7L @ 0x30000C
 12248                           ;	Table Read Protection bit
 12249                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12250                           ;	Table Read Protection bit
 12251                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12252                           ;	Table Read Protection bit
 12253                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12254                           ;	Table Read Protection bit
 12255                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12256   30000C                     	org	3145740
 12257   30000C  0F                 	db	15
 12258                           
 12259                           ;Config register CONFIG7H @ 0x30000D
 12260                           ;	Boot Block Table Read Protection bit
 12261                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12262   30000D                     	org	3145741
 12263   30000D  40                 	db	64
 12264                           tosu	equ	0xFFF
 12265                           tosh	equ	0xFFE
 12266                           tosl	equ	0xFFD
 12267                           stkptr	equ	0xFFC
 12268                           pclatu	equ	0xFFB
 12269                           pclath	equ	0xFFA
 12270                           pcl	equ	0xFF9
 12271                           tblptru	equ	0xFF8
 12272                           tblptrh	equ	0xFF7
 12273                           tblptrl	equ	0xFF6
 12274                           tablat	equ	0xFF5
 12275                           prodh	equ	0xFF4
 12276                           prodl	equ	0xFF3
 12277                           indf0	equ	0xFEF
 12278                           postinc0	equ	0xFEE
 12279                           postdec0	equ	0xFED
 12280                           preinc0	equ	0xFEC
 12281                           plusw0	equ	0xFEB
 12282                           fsr0h	equ	0xFEA
 12283                           fsr0l	equ	0xFE9
 12284                           wreg	equ	0xFE8
 12285                           indf1	equ	0xFE7
 12286                           postinc1	equ	0xFE6
 12287                           postdec1	equ	0xFE5
 12288                           preinc1	equ	0xFE4
 12289                           plusw1	equ	0xFE3
 12290                           fsr1h	equ	0xFE2
 12291                           fsr1l	equ	0xFE1
 12292                           bsr	equ	0xFE0
 12293                           indf2	equ	0xFDF
 12294                           postinc2	equ	0xFDE
 12295                           postdec2	equ	0xFDD
 12296                           preinc2	equ	0xFDC
 12297                           plusw2	equ	0xFDB
 12298                           fsr2h	equ	0xFDA
 12299                           fsr2l	equ	0xFD9
 12300                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    20
    Data        98
    BSS         120
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    100     113
    BANK0           128     44     128
    BANK1           256     13     136
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S5137$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S5084$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S5084$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 6
		 -> lm35_res1_str(BANK1[6]), 

    memset@s	PTR unsigned char  size(2) Largest target is 6
		 -> lm35_res1_str(BANK1[6]), 

    timer2_obj.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp1_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ccp1_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_a0.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultinterruptHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4017$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S4017$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S4017$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4017$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3823$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3694$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2_Init@_timer.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2_Init@_timer	PTR const struct . size(2) Largest target is 6
		 -> timer2_obj(BANK1[6]), 

    Timer1_Mode_Select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()volatile void  size(2) Largest target is 1
		 -> NULL(), 

    S3504$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3339$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@Config.MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_SPI_Interrupt_Init@Config.MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3002$MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Init@Config.MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2379$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2495$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2495$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1858$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S1858$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1858$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), lcd_1.lcd_data(BANK1[4]), 
		 -> lcd_1(BANK1[6]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), lcd_1.lcd_data(BANK1[4]), 
		 -> lcd_1(BANK1[6]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(COMRAM[1]), 
		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(COMRAM[1]), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK(COMRAM[1]), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI(COMRAM[1]), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO(COMRAM[1]), 
		 -> dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), lcd_1.lcd_data(BANK1[4]), lcd_1(BANK1[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    CCP_Compare_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Compare_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), 

    CCP_Capture_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Capture_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), 

    CCP_Mode_Timer_Select@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Mode_Timer_Select@_ccp_obj	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), 

    CCP_Interrupt_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Interrupt_Config@_ccp_obj	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), 

    CCP_PWM_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Mode_Config@_ccp_obj	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), 

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ccp1_obj.CCP2_InterruptHandler(BANK1[2]), NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Stop@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Start@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Start@_ccp_obj	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), 

    CCP_PWM_Set_Duty@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Set_Duty@_ccp_obj	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), 

    CCP_DeInit@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1147$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1147$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Init@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Init@_ccp_obj	PTR const struct . size(2) Largest target is 17
		 -> ccp1_obj(BANK1[17]), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultinterruptHandler(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_a0(BANK1[7]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultinterruptHandler(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_a0(BANK1[7]), 

    ADC_StartConversion_Interrupt@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_a0(BANK1[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultinterruptHandler(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> lm35_res1(BANK0[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_a0(BANK1[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_a0(BANK1[7]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_a0(BANK1[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultinterruptHandler(), NULL(), 

    S729$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultinterruptHandler(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultinterruptHandler(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_a0(BANK1[7]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_1(BANK0[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_1(BANK0[2]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_1(BANK0[2]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> lm35_res1_str(BANK1[6]), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> lm35_res1_str(BANK1[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 21
		 -> lm35_res1_str(BANK1[6]), STR_6(CODE[21]), STR_5(CODE[14]), STR_4(CODE[21]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 


Critical Paths under _main in COMRAM

    _roundf->___fladd
    ___flsub->___fladd
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ecu_layer_init->_lcd_4bit_intialize
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_intialize
    _CCP_Init->_CCP_PWM_Mode_Config
    _gpio_pin_intialize->_gpio_pin_write_logic
    _CCP_PWM_Mode_Config->___fltol
    _CCP_Compare_Mode_Config->_CCP_Mode_Timer_Select
    _CCP_Capture_Mode_Config->_CCP_Mode_Timer_Select
    _ADC_Init->_adc_input_channel_port_configure
    _CCP_PWM_Set_Duty->___fltol
    ___fltol->_roundf
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _ADC_StartConversion_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _ADC_DefaultinterruptHandler->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _roundf->___flsub
    _application_initialize->_CCP_Init
    _CCP_Init->_CCP_PWM_Mode_Config
    _CCP_PWM_Mode_Config->___fltol
    _CCP_PWM_Set_Duty->___fltol
    ___fltol->_roundf

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _CCP_Init->_CCP_PWM_Mode_Config

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  190992
                                              8 BANK1      5     5      0
      _ADC_StartConversion_Interrupt
                   _CCP_PWM_Set_Duty
                      _CCP_PWM_Start
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _application_initialize
           _convert_uint16_to_string
                _dc_motor_move_right
                      _dc_motor_stop
           _lcd_4bit_send_string_pos
                             _roundf
 ---------------------------------------------------------------------------------
 (1) _roundf                                              26    22      4   17737
                                             93 COMRAM     4     0      4
                                              8 BANK0     22    22      0
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    6467
                                              0 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     245
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     626
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   47085
                                             38 COMRAM     7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   24295
                                             31 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   21087
                                             27 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    6417
                                             23 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    6687
                                             23 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10054
                                              0 BANK0     12     8      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             75 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             67 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             53 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             40 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             19 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             13 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             13 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   72445
                           _ADC_Init
                           _CCP_Init
                        _Timer2_Init
                     _ecu_layer_init
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_init                                       1     1      0   43028
                _dc_motor_initialize
                 _lcd_4bit_intialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_intialize                                   6     4      2   33447
                                             31 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   23427
                                             27 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    7211
                                             23 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    6659
                                             23 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    9572
                                             27 COMRAM     3     1      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _Timer2_Init                                          4     2      2     316
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _CCP_Init                                             4     2      2   28376
                                             40 BANK0      4     2      2
            _CCP_Capture_Mode_Config
            _CCP_Compare_Mode_Config
               _CCP_Interrupt_Config
                _CCP_PWM_Mode_Config
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    9352
                                             23 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    6197
                                             13 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2    1337
                                             13 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _CCP_PWM_Mode_Config                                 11     9      2   17276
                                             99 COMRAM     1     1      0
                                             38 BANK0      2     0      2
                                              0 BANK1      8     8      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _CCP_Interrupt_Config                                 2     0      2     152
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP_Compare_Mode_Config                              5     3      2     558
                                             16 COMRAM     5     3      2
              _CCP_Mode_Timer_Select
 ---------------------------------------------------------------------------------
 (3) _CCP_Capture_Mode_Config                              5     3      2     558
                                             16 COMRAM     5     3      2
              _CCP_Mode_Timer_Select
 ---------------------------------------------------------------------------------
 (4) _CCP_Mode_Timer_Select                                3     1      2     273
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     713
                                             16 COMRAM     4     2      2
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     0      2     152
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          2     0      2     152
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_Start                                        4     2      2     223
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_Set_Duty                                    12     9      3   18309
                                             38 BANK0      5     2      3
                                              0 BANK1      7     7      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1646
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     937
                                             97 COMRAM     2     2      0
                                             30 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3413
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    4823
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    6082
                                             77 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_Interrupt                        4     1      3    1125
                                             21 COMRAM     4     1      3
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     251
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     524
                                             16 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      31
                                             13 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManager                                    5     5      0     661
                                              8 COMRAM     5     5      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                       _MSSP_SPI_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _MSSP_SPI_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_BC_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_TX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_RX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP2_ISR                                            0     0      0       0
                                NULL *
 ---------------------------------------------------------------------------------
 (11) _CCP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     485
                                NULL *
        _ADC_DefaultinterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultinterruptHandler                         1     1      0     485
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (13) _ADC_GetConversionResult                             8     4      4     483
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   _CCP_PWM_Set_Duty
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _roundf (ARG)
         ___fladd
         ___fldiv (ARG)
         ___flge (ARG)
         ___flmul (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
     ___xxtofl
   _CCP_PWM_Start
   ___fldiv
   ___flmul
   ___fltol
   ___xxtofl
   _application_initialize
     _ADC_Init
       _adc_input_channel_port_configure
       _configure_voltage_reference
       _select_result_format
     _CCP_Init
       _CCP_Capture_Mode_Config
         _CCP_Mode_Timer_Select
       _CCP_Compare_Mode_Config
         _CCP_Mode_Timer_Select
       _CCP_Interrupt_Config
       _CCP_PWM_Mode_Config
         ___fladd
         ___fldiv
         ___flmul
         ___fltol
         ___xxtofl
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _Timer2_Init
     _ecu_layer_init
       _dc_motor_initialize
         _gpio_pin_intialize
       _lcd_4bit_intialize
         _gpio_pin_intialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _roundf

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultinterruptHandler *
       _ADC_GetConversionResult
   _CCP1_ISR
   _CCP2_ISR
     NULL(Fake) *
     _ccp1_obj.CCP2_InterruptHandler *
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _MSSP_SPI_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      88       7       53.1%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2C      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     64      71       1       89.7%
BITBIGSFRhlhhlh     18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlllhh       6      0       0      46        0.0%
BITBIGSFRhlhhll      5      0       0      39        0.0%
BITBIGSFRllhllh      4      0       0      43        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRllhllh      4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      42        0.0%
BITBIGSFRllhlh       1      0       0      41        0.0%
BITBIGSFRllhh        1      0       0      40        0.0%
BITBIGSFRllhlll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     179      12        0.0%
DATA                 0      0     179       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Nov 27 13:23:09 2023

                               ??_InterruptManager 0009                                       ___fldiv@aexp 004D  
                                     ___fldiv@bexp 004C                                       ___fldiv@sign 0045  
                                  ?_lcd_send_4bits 0018                                        _SSPSTATbits 0FC7  
                                               l74 436C                                                 l69 373E  
                                               l79 42FA                                       ___awdiv@sign 0013  
                                              l100 40EE                                                l222 471A  
                                              l400 48D8                                                l232 46D4  
                                              l208 404E                                                l217 4864  
                                              l403 4A1C                                                l404 4A22  
                                              l405 4A24                                                l182 44B0  
                                              l174 3EF6                                                l601 43DC  
                                              l185 4946                                                l355 4A5A  
                                              l436 47BE                                                l532 394C  
                                              l438 47E6                                                l550 2CC6  
                                              l462 47A0                                                l390 3E3A  
                                              l622 33BE                                                l472 45F0  
                                              l464 47A2                                                l457 3B28  
                                              l545 2CC4                                                l529 3926  
                                              l554 4514                                                l475 45F8  
                                              l468 45CE                                                l388 3D96  
                                              l477 45FC                                                l645 313A  
                                              l718 327E                                                l559 4516  
                                              l592 489E                                                l737 3616  
                                              l589 2972                                                l598 43DC  
                                              l758 4448                __end_of_configure_voltage_reference 45FE  
                      _configure_voltage_reference 45B4                                                _PR2 0FCB  
                                              _abs 47E8                                                _pad 4210  
                        _RB5_InterruptHandler_HIGH 00A8                                    __end_of_ADC_ISR 49A8  
              __end_of_lcd_4bit_send_enable_signal 4948                        _lcd_4bit_send_enable_signal 4912  
                                     ___awmod@sign 0013                                                prod 0FF3  
                                              tosl 0FFD                                                wreg 0FE8  
                                    _lm35_res1_str 0175                                       ___flmul@aexp 0029  
                                     ___flmul@bexp 002E                        lcd_send_4bits@_data_command 001A  
                   ?_ADC_StartConversion_Interrupt 0016                                       ___flmul@sign 0028  
                                     ___flmul@temp 0033                                       ___flmul@prod 002F  
                        ?_convert_uint16_to_string 00C4                                    __end_of_RB4_ISR 4AC4  
                                  __end_of_RB5_ISR 4AAA                                    __end_of_RB6_ISR 4A90  
                                  __end_of_RB7_ISR 4A76                                       ___fltol@exp1 0063  
                                             ?_abs 0014                                               l2042 3CB6  
                                             l2108 3846                                               l2055 3FA6  
                                             l2081 3A50                                               l1523 410A  
                                             l2340 1218                                               l2404 2380  
                                             l2076 3A0A                                               l2341 11DE  
                                             l1525 4188                                               l2085 4910  
                                             l2406 23F8                                               l2407 23E6  
                                             l2432 1C1E                                               l2425 1A28  
                                             l2521 4232                                               l2442 1D4E  
                                             l2434 1C96                                               l2530 2D10  
                                             l2339 122A                                               l2435 1C84  
                                             l2356 1344                                               l2348 14FA  
                                             l2532 2D18                                               l2365 1414  
                                             l2429 1D8C                                               l1805 49D4  
                                             l2525 4288                                               l2533 2D5E  
                                             l2381 468E                                               l2366 1402  
                                             l2551 34EA                                               l2480 2ABE  
                                             l2544 2E5C                                               l2393 24DA  
                                             l2473 2A62                                               l2561 481E  
                                             l2466 29CA                                               l2395 233A  
                                             l2564 4826                                               l2469 2B26  
                                             l2557 4566                                               l2398 22FE  
                                             l2486 2FD2                                               l2576 3BF2  
                                             l2584 475E                                               l2587 4B30  
                                             l2499 45B2                                               l2595 2140  
                                             ?_pad 001E                                               l9600 3C88  
                                             l9610 3CAE                                               l9602 3C8A  
                                             l9530 3B58                                               l9700 4492  
                                             l9604 3C90                                               l9620 3F12  
                                             l9532 3B76                                               l9524 3B2A  
                                             l9540 4728                                               l9550 3502  
                                             l9710 492E                                               l9606 3C96  
                                             l9630 3F46                                               l9622 3F16  
                                             l9614 3EF8                                               l9534 3BAC  
                                             l9526 3B3C                                               l9542 473A  
                                             l9800 43B6                                               l9560 35EA  
                                             l9552 3524                                               l9712 4944  
                                             l9704 4912                                               l9608 3CA6  
                                             l9640 3F80                                               l9632 3F4E  
                                             l9624 3F24                                               l9616 3EFC  
                                             l9528 3B4E                                               l9544 473E  
                                             l9720 2CEC                                               l9810 1058  
                                             l9802 43D4                                               l9554 352C  
                                             l9562 3614                                               l9546 34EC  
                                             l9706 4912                                               l9570 3BF4  
                                             l9634 3F5C                                               l9642 3F86  
                                             l9626 3F2C                                               l9618 3F0A  
                                             l9538 471C                                               l9650 4210  
                                             l9730 2D36                                               l9722 2CF4  
                                             l9900 120C                                               l9812 1068  
                                             l9820 1092                                               l9804 103C  
                                             l9556 358E                                               l9548 34F0  
                                             l9708 4926                                               l9580 3C20  
                                             l9572 3BF8                                               l9644 3F96  
                                             l9636 3F72                                               l9628 3F3E  
                                             l9660 4256                                               l9652 421E  
                                             l9740 2D70                                               l9732 2D46  
                                             l9724 2D04                                               l9716 2CC8  
                                             l9910 125C                                               l9902 1216  
                                             l9830 10C2                                               l9822 10A2  
                                             l9814 1078                                               l9806 1048  
                                             l9670 3140                                               l9590 3C4E  
                                             l9582 3C28                                               l9574 3C06  
                                             l9646 3F9E                                               l9638 3F7A  
                                             l9662 4274                                               l9654 422A  
                                             l9742 2D76                                               l9750 2DD0  
                                             l9734 2D52                                               l9726 2D20  
                                             l9718 2CDC                                               l9920 1298  
                                             l9912 126C                                               l9904 1238  
                                             l9840 1102                                               l9832 10D0  
                                             l9824 10A8                                               l9816 1088  
                                             l9808 1056                                               l9672 3152  
                                             l9592 3C56                                               l9584 3C2C  
                                             l9576 3C0E                                               l9664 47E8  
                                             l9656 423E                                               l9760 2E2C  
                                             l9752 2DEA                                               l9744 2DA8  
                                             l9736 2D5A                                               l9728 2D30  
                                             l9930 12DE                                               l9922 12A6  
                                             l9914 127A                                               l9906 1248  
                                             l9850 113C                                               l9842 1104  
                                             l9834 10D2                                               l9826 10BA  
                                             l9818 108A                                               l9682 323A  
                                             l9674 3174                                               l9770 43F0  
                                             l9594 3C64                                               l9586 3C34  
                                             l9578 3C12                                               l9666 4802  
                                             l9658 4252                                               l9762 2E3C  
                                             l9754 2DFC                                               l9746 2DAE  
                                             l9738 2D66                                               l9940 135A  
                                             l9932 1312                                               l9924 12A8  
                                             l9916 1288                                               l9860 1150  
                                             l9852 1140                                               l9836 10E2  
                                             l9844 110C                                               l9828 10BC  
                                             l9676 317C                                               l9684 327C  
                                             l9668 313C                                               l9772 4412  
                                             l9692 444A                                               l9780 42FC  
                                             l9596 3C6A                                               l9588 3C46  
                                             l9756 2E16                                               l9748 2DB4  
                                             l9950 1396                                               l9942 136A  
                                             l9934 1314                                               l9926 12B2  
                                             l9918 1294                                               l9870 1164  
                                             l9862 1154                                               l9854 1144  
                                             l9846 111C                                               l9838 10F2  
                                             l9678 31DE                                               l9774 441A  
                                             l9766 43DE                                               l9694 444A  
                                             l9782 42FC                                               l9598 3C80  
                                             l9758 2E26                                               STR_1 1038  
                                             l9960 13C2                                               l9952 1398  
                                             l9936 1324                                               l9928 12B8  
                                             l9880 1178                                               l9872 1168  
                                             l9864 1158                                               l9856 1148  
                                             l9848 112E                                               l9792 436E  
                                             l9776 4446                                               l9768 43DE  
                                             l9696 4460                                               l9784 430E  
                                             STR_2 1038                                               l9970 13FA  
                                             l9954 13A6                                               l9946 137E  
                                             l9962 13C4                                               l9938 1334  
                                             l9890 11D6                                               l9874 116C  
                                             l9866 115C                                               l9858 114C  
                                             l9882 117C                                               l9794 438A  
                                             l9698 4478                                               l9786 4316  
                                             STR_4 1015                                               STR_5 102A  
                                             l9980 1478                                               l9956 13AE  
                                             l9948 1388                                               l9964 13D2  
                                             l9892 11EC                                               l9884 1180  
                                             l9876 1170                                               l9868 1160  
                                             l9796 4392                                               l9788 436A  
                                             STR_6 1015                                               l9990 14BE  
                                             l9974 1424                                               l9982 147A  
                                             l9966 13D6                                               l9958 13B2  
                                             l9894 11F8                                               l9886 11AA  
                                             l9878 1174                                               l9798 43AE  
                                             l9992 14CC                                               l9984 148A  
                                             l9976 1430                                               l9968 13E4  
                                             l9896 11FC                                               l9888 11C6  
                                             l9994 14D2                                               l9986 149A  
                                             l9978 143E                                               l9898 120A  
                                             l9996 14D4                                               l9988 14BA  
                                             l9998 14DA                                               _LATA 0F89  
                                             _LATB 0F8A                                               _LATC 0F8B  
                                             _LATD 0F8C                                               _LATE 0F8D  
                                             u9400 3B76                                               u9401 3B72  
                                             u9410 3BAC                                               u9411 3BA8  
                                             u9500 3C64                                               u9420 475E  
                                             u9501 3C60                                               u9421 475A  
                                             u9430 3502                                               u9510 3C80  
                                             u9431 34FE                                               u9511 3C7C  
                                             u9440 3524                                               u9520 3CA6  
                                             u9600 4274                                               u9441 3520  
                                             u9521 3CA2                                               u9601 4270  
                                             u9530 3F0A                                               u9610 4802  
                                             u9531 3F06                                               u9611 47FE  
                                             u9620 3152                                               u9540 3F24  
                                             u9380 3B3C                                               u9700 2CEC  
                                             u9621 314E                                               u9541 3F20  
                                             u9381 3B38                                               u9701 2CE8  
                                             u9630 3174                                               u9454 354C  
                                             u9470 3C06                                               u9550 3F3E  
                                             u9390 3B4E                                               u9710 2D04  
                                             u9631 3170                                               u9455 3548  
                                             u9471 3C02                                               u9551 3F3A  
                                             u9391 3B4A                                               u9711 2D00  
                                             u9464 35AE                                               u9800 430E  
                                             u9480 3C20                                               u9560 3F5C  
                                             u9720 2D30                                               u9465 35AA  
                                             u9801 430A                                               u9481 3C1C  
                                             u9561 3F58                                               u9721 2D2C  
                                             u9810 438A                                               u9490 3C46  
                                             u9570 3F72                                               u9730 2D46  
                                             u9811 4386                                               u9491 3C42  
                                             u9571 3F6E                                               u9731 2D42  
                                             u9900 10F2                                               u9820 43AE  
                                             u9660 3252                                               u9644 319C  
                                             u9580 3F96                                               u9740 2DEA  
                                             u9901 10EE                                               u9821 43AA  
                                             u9661 324C                                               u9645 3198  
                                             u9581 3F92                                               u9741 2DE6  
                                             u9910 112E                                               u9830 43D4  
                                             u9670 3254                                               u9654 31FE  
                                             u9590 421E                                               u9750 2DFC  
                                             u9911 112A                                               u9831 43D0  
                                             u9655 31FA                                               u9591 421A  
                                             u9751 2DF8                                               u9920 113C  
                                             u9840 1056                                               u9760 2E16  
                                             u9680 2CD8                                               u9921 1138  
                                             u9841 1052                                               u9761 2E12  
                                             u9681 2CD2                                               u9930 11AA  
                                             u9850 1068                                               u9770 2E26  
                                             u9690 2CDA                                               u9931 11A6  
                                             u9851 1064                                               u9771 2E22  
                                             u9940 11C2                                               u9860 1078  
                                             u9780 43F0                                               u9941 11BC  
                                             u9861 1074                                               u9781 43EC  
                                             u9950 11C4                                               u9870 10BA  
                                             u9790 4412                                               u9871 10B6  
                                             u9791 440E                                               u9960 11EC  
                                             u9880 10D0                                               u9961 11E8  
                                             u9881 10CC                                               u9970 120A  
                                             u9890 10E2                                               _TMR2 0FCC  
                                             u9971 1206                                               u9891 10DE  
                                             u9980 122A                                               u9981 1226  
                                             u9990 1238                                               u9991 1234  
                            ??_CCP_PWM_Mode_Config 0064                      ??_lcd_4bit_send_enable_signal 001A  
                         _RB4_InterruptHandler_LOW 00AA                          ??_CCP_Capture_Mode_Config 0013  
                                             abs@a 0014                                               _dbuf 014F  
                                             _seg1 0126                                               _main 24DC  
                                             _dtoa 2CC8                                   __end_of_CCP1_ISR 4B30  
                                 __end_of_CCP2_ISR 4978                                               _prec 0086  
                         _RB7_InterruptHandler_LOW 009E                                               pad@i 0025  
                                             pad@p 0022                                               fsr0h 0FEA  
                                             fsr1h 0FE2                                               indf0 0FEF  
                                             fsr2h 0FDA                                               fsr0l 0FE9  
                                             indf1 0FE7                                               indf2 0FDF  
                                             fsr1l 0FE1                                               pad@w 0027  
                                             fsr2l 0FD9                                               btemp 0072  
                                 __end_of_ADC_Init 3E3C                                               prodh 0FF4  
                                             prodl 0FF3                                               start 000E  
                  __end_of_CCP_Compare_Mode_Config 313C                                    ___fldiv@new_exp 0046  
                            __end_of_CCP_PWM_Start 4518                              _CCP_PWM_Set_Duty$5736 017B  
                                 __end_of_CCP_Init 394E                                       ___param_bank 0000  
                            _lcd_4bit_send_command 42FC                     fp__ADC_DefaultinterruptHandler 0000  
                           dc_motor_initialize@ret 001E                                              ??_abs 0016  
                             _gpio_pin_write_logic 34EC                     lcd_4bit_send_string_pos@column 002A  
                                            ??_pad 0024                              lcd_4bit_intialize@lcd 0020  
                            lcd_4bit_intialize@ret 0025                                   __end_of_INT0_ISR 4B28  
                                 __end_of_INT1_ISR 4B24                                   __end_of_INT2_ISR 4B20  
                                            l10000 14E8                                              l10002 14EA  
                                            l10010 215C                                              l10100 2390  
                                            l10020 2190                                              l10012 215E  
                                            l10102 239E                                              l10030 21C2  
                                            l10014 216E                                              l10022 2198  
                                            l10006 2142                                              l10112 2408  
                                            l10120 2450                                              l10104 23A2  
                                            l10040 21F6                                              l10032 21C4  
                                            l10024 21A8                                              l10016 217E  
                                            l10008 214E                                              l10200 1AD2  
                                            l11000 3E3C                                              l10130 24BA  
                                            l10122 246A                                              l10114 2414  
                                            l10106 23B0                                              l10050 223C  
                                            l10034 21D4                                              l10042 21FE  
                                            l10026 21AE                                              l10018 218E  
                                            l10210 1B24                                              l10202 1ADE  
                                            l11010 3E6C                                              l11002 3E42  
                                            l10132 24C8                                              l10124 2480  
                                            l10116 2422                                              l10108 23DE  
                                            l10060 2264                                              l10052 2240  
                                            l10044 220E                                              l10036 21E4  
                                            l10028 21B4                                              l10220 1BA2  
                                            l10212 1B34                                              l10204 1AEE  
                                            l10300 37E6                                              l11020 3ED6  
                                            l11012 3E88                                              l11004 3E4E  
                                            l10134 24CE                                              l10126 249A  
                                            l10118 244C                                              l10070 22B2  
                                            l10046 2224                                              l10038 21F4  
                                            l10230 1C1C                                              l10222 1BD8  
                                            l10214 1B50                                              l10206 1AFA  
                                            l10150 1980                                              l10310 3816  
                                            l11110 49C6                                              l11102 49A8  
                                            l11014 3E98                                              l11022 3EF4  
                                            l11006 3E52                                              l11030 46EC  
                                            l10136 24D0                                              l10128 24B6  
                                            l10080 22FC                                              l10072 22C2  
                                            l10064 2278                                              l10048 2234  
                                            l10056 2254                                              l10240 1C7C  
                                            l10232 1C2E                                              l10224 1BE6  
                                            l10216 1B5C                                              l10208 1B0A  
                                            l10160 19C6                                              l10152 1990  
                                            l10144 1964                                              l10312 3826  
                                            l10320 2986                                              l12000 3058  
                                            l10400 3636                                              l11112 49D2  
                                            l11104 49A8                                              l11016 3EB8  
                                            l11008 3E64                                              l11032 46F4  
                                            l11040 4694                                              l11120 1E0C  
                                            l11050 47A4                                              l10090 234A  
                                            l10082 2308                                              l10074 22CA  
                                            l10066 2292                                              l10058 2264  
                                            l10250 1CEA                                              l10234 1C3C  
                                            l10226 1C04                                              l10218 1B78  
                                            l10170 19F2                                              l10162 19CC  
                                            l10154 19A0                                              l10146 1970  
                                            l10314 3836                                              l10306 37FA  
                                            l10330 2A04                                              l10322 2994  
                                            l12002 30FE                                              l10410 3676  
                                            l10402 3656                                              l11106 49AC  
                                            l11018 3ED4                                              l11034 4718  
                                            l11026 46D6                                              l11042 46A6  
                                            l11130 1EC2                                              l11122 1E48  
                                            l11114 1D8E                                              l11060 47E4  
                                            l11052 47A4                                              l10092 2360  
                                            l10084 2326                                              l10076 22DA  
                                            l10068 22A2                                              l10260 1D52  
                                            l10244 1CA6                                              l10252 1CEE  
                                            l10236 1C40                                              l10228 1C0E  
                                            l10180 1A48                                              l10172 1A02  
                                            l10164 19D2                                              l10156 19B0  
                                            l10148 197E                                              l10308 3806  
                                            l10340 2A58                                              l10332 2A0C  
                                            l10324 29DA                                              l12004 32F8  
                                            l10500 3284                                              l10420 36C4  
                                            l10412 3678                                              l11108 49B8  
                                            l11028 46DA                                              l11044 46AE  
                                            l11140 20CE                                              l11132 1F90  
                                            l11124 1E6C                                              l11116 1DAE  
                                            l11054 47B6                                              l10094 2366  
                                            l10086 2328                                              l10078 22EE  
                                            l10270 1D7C                                              l10262 1D62  
                                            l10254 1D08                                              l10246 1CB2  
                                            l10238 1C4E                                              l10190 1A88  
                                            l10174 1A12                                              l10166 19E0  
                                            l10158 19B6                                              l10350 2ACE  
                                            l10342 2A94                                              l10334 2A18  
                                            l10326 29F0                                              l10318 2976  
                                            l11070 2B50                                              l12006 338A  
                                            l10510 32C4                                              l10430 370A  
                                            l10422 36CA                                              l10414 3688  
                                            l11046 46D2                                              l11038 4690  
                                            l11142 210C                                              l11134 1FFC  
                                            l11126 1E8A                                              l11118 1DF8  
                                            l12008 3ABA                                              l11056 47C0  
                                            l10096 2370                                              l10088 2338  
                                            l10264 1D70                                              l10256 1D1C  
                                            l10248 1CC0                                              l10192 1A94  
                                            l10184 1A5C                                              l10176 1A18  
                                            l10168 19E2                                              l10280 376C  
                                            l10360 2B16                                              l10352 2AD2  
                                            l10344 2AA0                                              l10336 2A4A  
                                            l11080 2CBE                                              l11072 2C2E  
                                            l11064 2B28                                              l10520 333A  
                                            l10512 32D0                                              l10504 32A0  
                                            l10600 28F2                                              l10440 4828  
                                            l10432 371A                                              l10424 36DA  
                                            l10416 3696                                              l10408 365A  
                                            l11144 2130                                              l11136 202E  
                                            l11058 47E0                                              l10098 237E  
                                            l10266 1D72                                              l10258 1D36  
                                            l10194 1AAC                                              l10186 1A68  
                                            l10178 1A38                                              l10290 37BA  
                                            l10282 3796                                              l10274 3740  
                                            l10354 2AF6                                              l10346 2AAE  
                                            l10338 2A4C                                              l11074 2C46  
                                            l11066 2B32                                              l11090 44CC  
                                            l10522 3346                                              l10530 336A  
                                            l10506 32AC                                              l10514 32D8  
                                            l10610 296A                                              l10602 290A  
                                            l10442 482C                                              l10434 372A  
                                            l10426 36EA                                              l10418 36A6  
                                            l10370 3402                                              l11138 209A  
                                            l10460 3A6A                                              l10452 3A54  
                                            l10268 1D78                                              l10196 1AB8  
                                            l10188 1A72                                              l10284 3798  
                                            l10276 3758                                              l10356 2B06  
                                            l10348 2ACC                                              l11076 2C78  
                                            l11068 2B46                                              l11092 44E4  
                                            l11084 44B2                                              l10524 3352  
                                            l10508 32B8                                              l10532 33B0  
                                            l10516 331E                                              l10620 4882  
                                            l10612 4866                                              l10604 2928  
                                            l10444 483E                                              l10428 36FA  
                                            l10436 373C                                              l10380 3496  
                                            l10372 3406                                              l10364 33C0  
                                            l10470 3A88                                              l10462 3A70  
                                            l10454 3A58                                              l10198 1AC4  
                                            l10286 37A8                                              l10358 2B14  
                                            l11078 2C90                                              l11094 44F0  
                                            l11086 44B2                                              l10534 33BC  
                                            l10526 335E                                              l10622 4884  
                                            l10614 486A                                              l10606 2934  
                                            l10446 4846                                              l10710 2E5E  
                                            l10374 3416                                              l10366 33E6  
                                            l10630 4524                                              l10472 3A8E  
                                            l10464 3A76                                              l10456 3A5E  
                                            l10480 3AA6                                              l10800 48CC  
                                            l10296 37D2                                              l10288 37AC  
                                            l11096 4508                                              l11088 44C4  
                                            l10560 3024                                              l10552 2FF4  
                                            l10624 489A                                              l10616 487E  
                                            l10608 294C                                              l10448 4862  
                                            l10720 2EBE                                              l10384 34AE  
                                            l10376 3434                                              l10368 33F4  
                                            l10632 4540                                              l10640 428A  
                                            l10474 3A94                                              l10466 3A7C  
                                            l10458 3A64                                              l10802 48D2  
                                            l10810 4A02                                              l10298 37DC  
                                            l11098 4510                                              l10490 4780  
                                            l10570 30A2                                              l10562 3030  
                                            l10554 3000                                              l10546 2FD4  
                                            l10626 489C                                              l10618 4880  
                                            l10394 3618                                              l10722 2F16  
                                            l10714 2E7C                                              l10378 3452  
                                            l10634 455E                                              l10642 429C  
                                            l10650 3FA8                                              l10476 3A9A  
                                            l10468 3A82                                              l10804 48D6  
                                            l10812 4A14                                              l10492 479A  
                                            l10572 30AE                                              l10556 300C  
                                            l10564 3038                                              l10548 2FD8  
                                            l10820 3848                                              l10396 361C  
                                            l10740 2FC0                                              l10732 2F76  
                                            l10716 2E88                                              l10388 34C0  
                                            l10628 4518                                              l10644 42A4  
                                            l10660 3FFA                                              l10652 3FAC  
                                            l10900 39F8                                              l10478 3AA0  
                                            l10814 4A1E                                              l10494 45B4  
                                            l10486 4760                                              l10574 30BA  
                                            l10582 30DE                                              l10558 3018  
                                            l10566 3086                                              l10830 389C  
                                            l10822 385C                                              l10398 362E  
                                            l10734 2FAA                                              l10726 2F30  
                                            l10750 45A4                                              l10742 4568  
                                            l10646 42F8                                              l10638 428A  
                                            l10654 3FB2                                              l10662 4012  
                                            l10902 3A48                                              l10910 48F0  
                                            l10808 4A02                                              l10496 45D6  
                                            l10488 477A                                              l10760 3D7C  
                                            l10576 30C6                                              l10584 312C  
                                            l10840 38F8                                              l10832 38A0  
                                            l10824 3864                                              l10736 2FB6  
                                            l10728 2F5C                                              l10744 4578  
                                            l10656 3FCA                                              l10664 404C  
                                            l10904 3A4E                                              l10912 4900  
                                            l11800 2562                                              l10770 3E02  
                                            l10762 3D7C                                              l10498 3280  
                                            l10586 3138                                              l10578 30D2  
                                            l10842 3916                                              l10834 38BC  
                                            l10826 387C                                              l10850 394A  
                                            l10818 3848                                              l10754 4A42  
                                            l10738 2FBC                                              l10746 4580  
                                            l10658 3FE2                                              l10930 4050  
                                            l11810 2634                                              l11802 25CC  
                                            l10780 3E1A                                              l10772 3E04  
                                            l10764 3D8E                                              l10844 3926  
                                            l10836 38CC                                              l10828 3884  
                                            l10860 410C                                              l10756 4A42  
                                            l10748 4588                                              l10940 40BA  
                                            l10932 4062                                              l10908 48DA  
                                            l11820 26B6                                              l11812 264C  
                                            l11804 25FC                                              l10782 3E26  
                                            l10774 3E06                                              l10766 3D98  
                                            l10598 279C                                              l10846 3938  
                                            l10838 38E8                                              l10870 417E  
                                            l10862 4168                                              l10854 40F0  
                                            l10758 4A4E                                              l10942 40EC  
                                            l10934 406A                                              l11830 2748  
                                            l11822 26DE                                              l11814 2662  
                                            l11806 2612                                              l10792 48A0  
                                            l10784 3E32                                              l10776 3E08  
                                            l10768 3DF0                                              l10848 3944  
                                            l10872 4180                                              l10864 416A  
                                            l10856 40F0                                              l10936 4084  
                                            l10928 4050                                              l10880 4648  
                                            l11832 2770                                              l11824 26F4  
                                            l11816 268A                                              l11808 2618  
                                            l10794 48A0                                              l10786 3E34  
                                            l10778 3E0A                                              l10874 4182  
                                            l10866 416C                                              l10858 4102  
                                            l10938 40B6                                              l10890 398C  
                                            l10882 465A                                              l11826 270A  
                                            l11818 26A0                                              l10796 48B2  
                                            l10788 3E38                                              l10868 417C  
                                            l10876 4186                                              l10892 39BA  
                                            l11828 2732                                              l10798 48BA  
                                            l10894 39CA                                              l10886 394E  
                                            l11790 24FC                                              l10896 39D8  
                                            l10888 397C                                              l11792 2518  
                                            l11784 24DC                                              l10898 39EA  
                                            l11794 2534                                              l11786 24DC  
                                            l11796 2546                                              l11788 24E0  
                                            l11798 2552                                              l11994 4026  
                                            l11996 35FE                                              l11998 3266  
                                    _EUSART_RX_ISR 49D6                                      ___fltol@sign1 0062  
                                    _EUSART_TX_ISR 4B28                                    __end_of___fladd 14FC  
                                            ?_main 0001                                              ?_dtoa 0029  
                         ??_application_initialize 0065                                    __end_of___fldiv 24DC  
                                  __end_of___awdiv 3CB8                                    __end_of___flneg 4912  
                                            _EEADR 0FA9                                    __end_of___awmod 3FA8  
                                  __end_of___flmul 1D8E                                    __end_of___flsub 4690  
                                  __end_of___fltol 3848                                              u10000 1248  
                                            u10001 1244                                              u10010 127A  
                                            u10011 1276                                              u10100 13C2  
                                            u10020 1288                                              u10101 13BE  
                                            u10021 1284                                              u10110 13D2  
                                            u10030 12A6                                              u10111 13CE  
                                            u10031 12A2                                              u10200 14BA  
                                            u10120 13E4                                              u10040 12DE  
                                            u11000 455E                                              u10201 14B6  
                                            u10121 13E0                                              u10041 12DA  
                                            u11001 455A                                              u10210 14CC  
                                            u10130 13FA                                              u10050 1324  
                                            u11010 429C                                              u10211 14C8  
                                            u10131 13F6                                              u10051 1320  
                                            u11011 4298                                              u10220 14E8  
                                            u10140 1410                                              u10060 135A  
                                            u10300 2264                                              u11100 3D8E  
                                            u10221 14E4                                              u10141 140C  
                                            u10061 1356                                              u10301 2260  
                                            u11101 3D8A                                              u11110 48B2  
                                            u10150 1424                                              u10070 136A  
                                            u10310 22DA                                              u10230 215C  
                                            u11111 48AE                                              u10151 1420  
                                            u10071 1366                                              u10311 22D6  
                                            u10231 2158                                              u11120 4A14  
                                            u10160 143E                                              u10080 1396  
                                            u10400 23F4                                              u10320 22FC  
                                            u10240 216E                                              u11200 397C  
                                            u11121 4A10                                              u10161 143A  
                                            u10081 1392                                              u10401 23F0  
                                            u10321 22F8                                              u10241 216A  
                                            u11201 3978                                              u10170 1478  
                                            u10090 13A6                                              u10410 2408  
                                            u10330 2326                                              u10250 217E  
                                            u11130 385C                                              u11050 2E78  
                                            u11210 39BA                                              u10171 1474  
                                            u10091 13A2                                              u10411 2404  
                                            u10331 2322                                              u10251 217A  
                                            u11131 3858                                              u11051 2E74  
                                            u11211 39B6                                              u10180 148A  
                                            u10420 2422                                              u10340 234A  
                                            u10260 21C2                                              u10500 19F2  
                                            u11140 387C                                              u11060 2EBA  
                                            u11300 40EC                                              u11220 39D8  
                                            u10181 1486                                              u10421 241E  
                                            u10341 2346                                              u10261 21BE  
                                            u10501 19EE                                              u11141 3878  
                                            u11061 2EB6                                              u11301 40E8  
                                            u11221 39D4                                              u10190 149A  
                                            u10430 246A                                              u10350 2360  
                                            u10270 21D4                                              u10510 1A02  
                                            u11150 389C                                              u11070 2F2C  
                                            u11230 39F8                                              u10191 1496  
                                            u10431 2466                                              u10351 235C  
                                            u10271 21D0                                              u10511 19FE  
                                            u11151 3898                                              u11071 2F28  
                                            u11231 39F4                                              u10440 249A  
                                            u10360 237E                                              u10280 21E4  
                                            u10600 1CA6                                              u10520 1A38  
                                            u11160 38BC                                              u11080 2F72  
                                            u11400 46EC                                              u11240 3A48  
                                            u12200 26B6                                              u10441 2496  
                                            u10361 237A                                              u10281 21E0  
                                            u10601 1CA2                                              u10521 1A34  
                                            u11161 38B8                                              u11081 2F6E  
                                            u11401 46E8                                              u11241 3A44  
                                            u12201 26B2                                              u10450 24C8  
                                            u10370 239E                                              u10290 2224  
                                            u10610 1CC0                                              u10530 1A48  
                                            u11170 38E8                                              u11090 2FD2  
                                            u11410 46A6                                              u11250 48F0  
                                            u12210 26F4                                              u10451 24C4  
                                            u10371 239A                                              u10291 2220  
                                            u10611 1CBC                                              u10531 1A44  
                                            u11171 38E4                                              u11091 2FCE  
                                            u11411 46A2                                              u11251 48EC  
                                            u12211 26F0                                              u11420 47B6  
                                            u10380 23B0                                              u10620 1D08  
                                            u10540 1BC2                                              u10460 197E  
                                            u10700 3816                                              u11180 3916  
                                            u11500 1DF8                                              u12220 270A  
                                  ___awdiv@divisor 0010                                              u11421 47B2  
                                            u10381 23AC                                              u10621 1D04  
                                            u10461 197A                                              u10701 3812  
                                            u11181 3912                                              u11501 1DF4  
                                            u12221 2706                                              u10390 23DE  
                                            u10630 1D36                                              u10550 1C1C  
                                            u10470 1990                                              u10710 3826  
                                            u11430 2B46                                              u11190 4102  
                                            u11270 4062                                              u11510 1E2C  
                                            u12230 2748                                              u10391 23DA  
                                            u10631 1D32                                              u10551 1C18  
                                            u10471 198C                                              u10711 3822  
                                            u11431 2B42                                              u11191 40FE  
                                            u11271 405E                                              u12231 2744  
                                            u10640 1D70                                              u10560 1C3C  
                                            u10480 19A0                                              u10800 2B06  
                                            u10720 2986                                              u11440 2C46  
                                            u11280 40AE                                              u11520 1E48  
                                            u10641 1D6C                                              u10561 1C38  
                                            u10545 1BB8                                              u10481 199C  
                                            u10801 2B02                                              u10721 2982  
                                            u11441 2C42                                              u11521 1E44  
                                            u10570 1C4E                                              u10490 19E0  
                                            u10650 3758                                              u10810 2B14  
                                            u10730 2994                                              u11450 2C90  
                                            u11290 40DC                                              u11530 1E8A  
                                            u12170 264C                                              u10571 1C4A  
                                            u10491 19DC                                              u10651 3754  
                                            u10811 2B10                                              u10731 2990  
                                            u11451 2C8C                                              u11371 3E48  
                                            u11531 1E86                                              u11515 1E22  
                                            u12171 2648                                              u10580 1C7C  
                                            u10660 378C                                              u10740 29F0  
                                            u11460 44C4                                              u10900 45CE  
                                            u10820 33E6                                              u11380 3E64  
                                            u11540 1F90                                              u12180 2662  
                                            u10581 1C78                                              u10741 29EC  
                                            u11461 44C0                                              u10901 45CA  
                                            u10821 33E2                                              u11381 3E60  
                                            u11541 1F8C                                              u12181 265E  
                                            u10590 1C92                                              u10670 37BA  
                                            u10750 2A46                                              u11470 44E4  
                                            u10910 45F0                                              u10830 3434  
                                            u11390 3EF4                                              u11550 202E  
                                            u12190 26A0                                              u10591 1C8E  
                                            u10671 37B6                                              u10751 2A42  
                                            u11471 44E0                                              u10911 45EC  
                                            u12247 368E                                              u10831 3430  
                                            u11391 3EF0                                              u11287 40A4  
                                            u11551 202A                                              u12191 269C  
                                            u10680 37CE                                              u10760 2A90  
                                            u11480 4508                                              u10920 329C  
                                            u10840 3452                                              u11560 20F0  
                                            u10681 37CA                                              u10665 3782  
                                            u10761 2A8C                                              u11481 4504  
                                            u10921 3298                                              u12257 36AC  
                                            u10841 344E                                              u11297 40D2  
                                            u10690 37F6                                              u10770 2AAE  
                                            u10930 3336                                              u10850 362E  
                                            u11570 210C                                              u11490 1DD0  
                                            u10691 37F2                                              u10771 2AAA  
                                            u10931 3332                                              u12267 36C6  
                                            u10851 362A                                              u11571 2108  
                                            u10780 2ABE                                              u10940 2FF0  
                                            u10860 3688                                              u10781 2ABA  
                                            u10941 2FEC                                              u12277 4928  
                                            u10861 3684                                              u11565 20E4  
                                            u10790 2ACC                                              u10950 309E  
                                            u10870 483E                                              u10791 2AC8  
                                            u10951 309A                                              u10871 483A  
                                            u11495 1DC4                                              u10880 477A  
                                            u10960 290A                                              u10881 4776  
                                            u10961 2906                                              u10890 479A  
                                            u10970 2928                                              u10891 4796  
                                            u10971 2924                                              u10980 294C  
                                            u10981 2948                                              u10990 296A  
                                            u10991 2966                                              i2l423 3D7A  
                                            i2l481 49A6                                              i2l573 4B2E  
                                            i2l578 4976                                              i2l943 4B1A  
                                            i2l939 4B16                                    ___awdiv@counter 0012  
                                            _RCREG 0FAE                                       vfpfcnvrt@fmt 0038  
                                            _TMR0H 0FD7                                              _TMR1H 0FCF  
                                            _TMR0L 0FD6                                              _TMR1L 0FCE  
                                            _TMR3H 0FB3                                              _TMR3L 0FB2  
                                            _SPBRG 0FAF                                              _PORTA 0F80  
                                            _PORTB 0F81                                              _PORTC 0F82  
                                            _PORTD 0F83                                              _PORTE 0F84  
                                            _TRISA 0F92                                              _TRISB 0F93  
                                            _TRISC 0F94                                              _TRISD 0F95  
                                            _TRISE 0F96                                              _TXREG 0FAD  
                        lcd_4bit_set_cursor@coulmn 0023                                   __end_of_TMR0_ISR 4AEE  
                                 __end_of_TMR1_ISR 4AFA                                   __end_of_TMR2_ISR 4B0E  
                                 __end_of_TMR3_ISR 4AE0                                              _lcd_1 0143  
                                            _lcd_2 0114                                              _flags 00C0  
                                            _fputc 3B2A                                              _fputs 471C  
                                            pad@fp 001E                                              _width 0084  
                                            _putch 4B30                                              _toint 1011  
                                            dtoa@d 002B                                              dtoa@i 0034  
                                            dtoa@p 002F                                              dtoa@s 0033  
                                            dtoa@w 0031                                              pclath 0FFA  
                                            pclatu 0FFB                                              tablat 0FF5  
                  CCP_Capture_Mode_Config@_ccp_obj 0011                                              ttemp5 0073  
                                            ttemp6 0076                                              ttemp7 007A  
                                            status 0FD8                                              wtemp8 0073  
                                  __end_of_sprintf 45B4                                    __initialization 418A  
                                     __end_of_main 279C                                       __end_of_dtoa 2E5E  
                            ?_gpio_pin_write_logic 000E                              CCP_PWM_Start@_ccp_obj 000E  
                                        ??_ADC_ISR 0009                                     ?_EUSART_RX_ISR 0001  
                            _CCP_Mode_Timer_Select 436E                                     ?_EUSART_TX_ISR 0001  
                                    _lat_registers 00F0                        __end_of_dc_motor_initialize 4866  
                                           ??_main 0065                                             ??_dtoa 002D  
                                    __activetblptr 0003                              _TMR3_InterruptHandler 0092  
                                        ??_RB4_ISR 0001                                          ??_RB5_ISR 0001  
                                        ??_RB6_ISR 0001                                          ??_RB7_ISR 0001  
                       _EUSART_OverrunErrorHandler 0088                                             ?_fputc 000E  
                                           ?_fputs 0017                                             _ADRESH 0FC4  
                                           _EEADRH 0FAA                                             _ADRESL 0FC3  
                                           _EEDATA 0FA8                                             _CCPR1L 0FBE  
                                           _CCPR2L 0FBB                                             _EECON2 0FA7  
                                 ___awdiv@dividend 000E                                             ?_putch 0001  
                                           i2l1012 4B22                                             i2l1007 4B26  
                                           i2l1017 4B1E                                             i2l1050 4A8E  
                                           i2l1028 4AC2                                             i2l1061 4A74  
                                           i2l1039 4AA8                                             i2l1240 154E  
                                           i2l1250 167E                                             i2l1242 156E  
                                           i2l1260 17AE                                             i2l1252 16C2  
                                           i2l1244 15B2                                             i2l1270 184E  
                                           i2l1262 17CE                                             i2l1254 1706  
                                           i2l1246 15F6                                             i2l1238 152E  
                                           i2l1360 4B12                                             i2l1280 1930  
                                           i2l1272 186E                                             i2l1264 17EE  
                                           i2l1256 174A                                             i2l1248 163A  
                                           i2l1426 4AEC                                             i2l1274 18A4  
                                           i2l1266 180E                                             i2l1258 178E  
                                           i2l1283 1950                                             i2l1276 18DA  
                                           i2l1268 182E                                             i2l1278 1910  
                                           i2l1546 4B0C                                             i2l1590 4ADE  
                                           i2l1495 4AF8                                             i2l1808 4A40  
                                           i2l1729 4B2A                                             i2l1738 4A00  
                                           i2l8000 4A60                                             i2l7300 3D78  
                                           i2l8100 49FE                                             i2l8006 4A74  
                                           i2l8104 4B0E                                             i2l8054 4AE0  
                                           i2l8062 4AEE                                             i2l8070 4B06  
                                           i2l7280 3CB8                                             i2l8056 4AE2  
                                           i2l8064 4AF0                                             i2l7290 3CFE  
                                           i2l7282 3CB8                                             i2l8082 4B28  
                                           i2l8058 4AE8                                             i2l8066 4AF4  
                                           i2l8074 4AD2                                             i2l7292 3D26  
                                           i2l7284 3CCA                                             i2l8092 49D6  
                                           i2l8076 4AD4                                             i2l7294 3D40  
                                           i2l7286 3CDC                                             i2l8094 49EA  
                                           i2l8078 4ADA                                             i2l7288 3CE4  
                                           i2l8088 49D6                                             i2l7298 3D74  
                                           i2l8098 49EC                                             i2l7930 4B14  
                                           i2l7924 4948                                             i2l8900 169A  
                                           i2l7686 4A26                                             i2l7918 4B2C  
                                           i2l7926 494A                                             i2l7950 4B1C  
                                           i2l7934 4B18                                             i2l8910 16DE  
                                           i2l8902 16A8                                             i2l7688 4A2C  
                                           i2l7928 495E                                             i2l7944 4B20  
                                           i2l8920 1722                                             i2l8912 16EC  
                                           i2l8904 16B8                                             i2l7874 4978  
                                           i2l7938 4B24                                             i2l7970 4A92  
                                           i2l8930 1766                                             i2l8922 1730  
                                           i2l8914 16FC                                             i2l8906 16BC  
                                           i2l8850 153C                                             i2l7876 497A  
                                           i2l7964 4AC2                                             i2l7956 4AAC  
                                           i2l7972 4A94                                             i2l8940 17AA  
                                           i2l8932 1774                                             i2l8924 1740  
                                           i2l8916 1700                                             i2l8908 16D0  
                                           i2l8860 158A                                             i2l8852 154A  
                                           i2l8844 150E                                             i2l7878 498E  
                                           i2l7958 4AAE                                             i2l8950 17FC  
                                           i2l8942 17BC                                             i2l8934 1784  
                                           i2l8926 1744                                             i2l8918 1714  
                                           i2l8870 15CE                                             i2l8862 1598  
                                           i2l8854 155C                                             i2l8846 151C  
                                           i2l7992 4A8E                                             i2l7984 4A78  
                                           i2l8960 184A                                             i2l8952 180A  
                                           i2l8944 17CA                                             i2l8936 1788  
                                           i2l8928 1758                                             i2l8880 1612  
                                           i2l8872 15DC                                             i2l8864 15A8  
                                           i2l8856 156A                                             i2l8848 152A  
                                           i2l7978 4AA8                                             i2l7986 4A7A  
                                           i2l8970 18A0                                             i2l8962 185C  
                                           i2l8954 181C                                             i2l8946 17DC  
                                           i2l8938 179C                                             i2l8890 1656  
                                           i2l8882 1620                                             i2l8874 15EC  
                                           i2l8866 15AC                                             i2l8858 157C  
                                           i2l8980 18F6                                             i2l8972 18B2  
                                           i2l8964 186A                                             i2l8956 182A  
                                           i2l8948 17EA                                             i2l8892 1664  
                                           i2l8884 1630                                             i2l8876 15F0  
                                           i2l8868 15C0                                             i2l7998 4A5E  
                                           i2l8990 194C                                             i2l8982 190C  
                                           i2l8974 18C0                                             i2l8966 187C  
                                           i2l8958 183C                                             i2l8894 1674  
                                           i2l8886 1634                                             i2l8878 1604  
                                           i2l8984 191E                                             i2l8976 18D6  
                                           i2l8968 188A                                             i2l8896 1678  
                                           i2l8888 1648                                             i2l8986 192C  
                                           i2l8978 18E8                                             i2l8898 168C  
                                           i2l8988 193E                convert_uint16_to_string@Temp_String 00C8  
                                           _SPBRGH 0FB0                                             _SSPADD 0FC8  
                                           _SSPBUF 0FC9                                   __end_of___xxtofl 2B28  
                 __end_of_lcd_4bit_send_string_pos 40F0                                      ??_Timer2_Init 0010  
                      __end_of_dc_motor_move_right 471C                             ?_lcd_4bit_send_command 001C  
                                     vfprintf@cfmt 004A                                             ___flge 394E  
                                           _adc_a0 013C                                          ??___fladd 0056  
                                        ??___fldiv 003D                                          ??___awdiv 0012  
                                        ??___flneg 0012                                          ??___awmod 0012  
                                        ??___flmul 0024                                          ??___flsub 005E  
                                        ??___fltol 00E6                                             _memset 2E5E  
                                           clear_0 41F0                                             clear_1 41FC  
                                 ___awdiv@quotient 0014                                    ___awmod@divisor 0010  
                                           isa$std 0001                                    ___awmod@counter 0012  
                                           pad@buf 0020                                             _roundf 1D8E  
                                           dtoa@fp 0029            gpio_pin_direction_intialize@_pin_config 000E  
      _I2C_Report_Receive_Overflow_InterruptHandle 00B4                                             fputc@c 000E  
                                        ?_CCP1_ISR 0001                                             fputs@c 001B  
                                           fputs@i 001C                                       __pdataCOMRAM 0065  
                                        ?_CCP2_ISR 0001                                             fputs@s 0017  
                                        ?_ADC_Init 0011                                  Timer2_Init@_timer 000E  
                                     __mediumconst 0000                                             tblptrh 0FF7  
                                           tblptrl 0FF6                                             tblptru 0FF8  
                                           putch@c 0001                                   __end_of_vfprintf 4568  
                                        ?_CCP_Init 00EC                                          ??_sprintf 0054  
                      CCP_PWM_Mode_Config@_ccp_obj 00EA                       __end_of_select_result_format 47A4  
                                       ___flge@ff1 000E                                         ___flge@ff2 0012  
                                     ___xxtofl@arg 0018                                       ___xxtofl@exp 0017  
                                     ___xxtofl@val 000E                                         __accesstop 0080  
                          __end_of__initialization 4206                                          ?_INT0_ISR 0001  
                                        ?_INT1_ISR 0001                                         ___flneg@f1 000E  
                                 _CCP_PWM_Set_Duty 2B28                                          ?_INT2_ISR 0001  
                                    ___rparam_used 0001                                         ___fltol@f1 00E2  
                                 ??_lcd_send_4bits 001B                       CCP_Interrupt_Config@_ccp_obj 000E  
                          _lcd_4bit_send_char_data 428A                                  RB5_ISR@RB5_Source 0001  
                           ??_gpio_pin_write_logic 0011                                     __pcstackCOMRAM 0001  
                       _I2C_DefaultInterruptHandle 00B6                                       __pidataBANK0 4AC4  
                                     __pidataBANK1 45FE                                          ?_TMR0_ISR 0001  
                                  ??_EUSART_RX_ISR 0001                                          ?_TMR1_ISR 0001  
                                        ?_TMR2_ISR 0001                                          ?_TMR3_ISR 0001  
                                  ??_EUSART_TX_ISR 0001                             ?_CCP_Mode_Timer_Select 000E  
                                    __end_of_fputc 3BF4                                      __end_of_fputs 4760  
                                    __end_of_putch 4B32                                      __end_of_toint 1015  
                              __end_of_Timer2_Init 418A                           lcd_4bit_send_command@lcd 001C  
                         lcd_4bit_send_command@ret 001F                            _ADC_GetConversionResult 3CB8  
                                       ??_CCP1_ISR 0001                                         ??_CCP2_ISR 0001  
                                       ??_ADC_Init 0013                               ADC_SelectChannel@ret 0015  
                                       ??_CCP_Init 00EE                                            ??_fputc 0012  
                                       _dc_motor_1 00FC                                         _dc_motor_2 00FA  
                                          ??_fputs 001B                                            ??_putch 000E  
                            CCP_PWM_Set_Duty@_duty 00EC                             ADC_StartConversion@ret 0010  
                                       __pbssBANK0 0080                                         __pbssBANK1 0149  
                            _INT0_InterruptHandler 00B2                                         ??_INT0_ISR 0001  
                                       ??_INT1_ISR 0001                                         ??_INT2_ISR 0001  
                           _application_initialize 49A8                         ADC_GetConversionResult@ret 0008  
                              CCP_PWM_Set_Duty@ret 017F                                            ?___flge 000E  
                                       ??_TMR0_ISR 0001                                         ??_TMR1_ISR 0001  
                      CCP_PWM_Set_Duty@l_duty_temp 0180                                         ??_TMR2_ISR 0001  
                                       ??_TMR3_ISR 0001                        convert_uint16_to_string@ret 00CE  
                                          _ADC_ISR 4978                        convert_uint16_to_string@str 00C6  
                                          ?_memset 000E                                            ?_roundf 005E  
                                RB7_ISR@RB7_Source 0001                                            _RB4_ISR 4AAA  
                                          _RB5_ISR 4A90                                            _RB6_ISR 4A76  
                                          _RB7_ISR 4A5C                                          ?___xxtofl 000E  
                        ?_lcd_4bit_send_string_pos 0027                          _RB6_InterruptHandler_HIGH 00A4  
                                    ?_MSSP_I2C_ISR 0001                        __end_of_CCP_PWM_Mode_Config 2974  
                     ?_ADC_DefaultinterruptHandler 0001                                         _btn_values 1001  
                                   _tris_registers 010A                           _RB6_InterruptHandler_LOW 00A2  
                        ??_lcd_4bit_send_char_data 001F                                      ?_MSSP_SPI_ISR 0001  
                                ??_MSSP_I2C_BC_ISR 0001                               _ADC_InterruptHandler 00BE  
                                          __Hparam 0000                                        _Timer2_Init 40F0  
                                     ADC_Init@_adc 0011                                            __Lparam 0000  
                     __end_of_CCP_Interrupt_Config 48A0                               _SPI_InterruptHandler 009C  
                                          ___fladd 103C                                            ___fldiv 2142  
                                          ___awdiv 3BF4                                            ___flneg 48DA  
                                          ___awmod 3EF8                                            ___flmul 1964  
                                          ___flsub 4648                    CCP_Compare_Mode_Config@_ccp_obj 0011  
                                          ___fltol 3740                                          ?_vfprintf 0044  
                                     __psmallconst 1000                           _CCP_PWM_Mode_Config$5737 017B  
                         _CCP_PWM_Mode_Config$5738 017F                          ??_ADC_GetConversionResult 0005  
                       __end_of_gpio_pin_intialize 444A                                            __pcinit 418A  
                             _select_result_format 4760                                            __ramtop 1000  
                                          __ptext0 24DC                                            __ptext1 1D8E  
                                          __ptext2 4648                                            __ptext3 48DA  
                                          __ptext4 394E                                            __ptext5 4050  
                                          __ptext6 3FA8                                            __ptext7 428A  
                                          __ptext8 4690                                            __ptext9 46D6  
                                        _T0CONbits 0FD5                                          _T1CONbits 0FCD  
                         _convert_uint16_to_string 3E3C                                     ??_MSSP_I2C_ISR 0001  
                                        _T2CONbits 0FCA                                            _keypad1 011E  
                                       ??___xxtofl 0012                                          _T3CONbits 0FB1  
                                 ___awmod@dividend 000E                            _CCP_Compare_Mode_Config 2FD4  
                         ?_CCP_Capture_Mode_Config 0011                                            _sprintf 4568  
                                          main@ret 0187              lcd_4bit_intialize@l_data_pins_counter 0024  
                                _lm35_res1_Celsius 00FE                                     __pintcode_body 14FC  
                             end_of_initialization 4206                                  lcd_send_4bits@lcd 0018  
                                lcd_send_4bits@ret 001B                           select_result_format@_adc 000E  
                                          fputc@fp 0010                                            memset@c 0010  
                                          memset@k 0016                                            memset@n 0012  
                                          memset@s 0018                                            int_func 14FC  
                                          fputs@fp 0019                                     ??_MSSP_SPI_ISR 0001  
                       __end_of_lcd_4bit_intialize 3740                            ??_lcd_4bit_send_command 001F  
                            gpio_pin_intialize@ret 001B                                      _dc_motor_stop 4690  
                                __end_of_vfpfcnvrt 34EC                           CCP_PWM_Set_Duty@_ccp_obj 00EA  
                                        _RCSTAbits 0FAB                                            postdec1 0FE5  
                                          postdec2 0FDD                                         _timer2_obj 016F  
                                          postinc0 0FEE                                            postinc1 0FE6  
                                          postinc2 0FDE                                   vfpfcnvrt@convarg 003E  
                                          roundf@e 00D4                                            roundf@u 00DA  
                                          roundf@x 005E                                            roundf@y 00DE  
                                       ??_vfprintf 004A                              ?_select_result_format 000E  
                                   _ecu_layer_init 4A42                   ADC_StartConversion_Interrupt@ret 0019  
                  __end_of_lcd_4bit_send_char_data 42FC                              _INT1_InterruptHandler 00B0  
                                        _PORTBbits 0F81                           __end_of_CCP_PWM_Set_Duty 2CC8  
                                 _InterruptManager 0008                      gpio_pin_intialize@_pin_config 0018  
                                      ___fladd@grs 005D                         lcd_4bit_send_char_data@lcd 001C  
                       lcd_4bit_send_char_data@ret 001F               __end_of_gpio_pin_direction_intialize 3280  
                     _gpio_pin_direction_intialize 313C                                      ___xxtofl@sign 0016  
                                        _TRISCbits 0F94                                _ADC_StartConversion 4A02  
                                      ___fldiv@grs 0048                                        ___fldiv@rem 0041  
                                      ___flmul@grs 002A                                        _CCP1CONbits 0FBD  
                                 CCP_Init@_ccp_obj 00EC                                        _CCP2CONbits 0FBA  
                                        _TXSTAbits 0FAC                                     ?_dc_motor_stop 0018  
                          ??_CCP_Mode_Timer_Select 0010                         CCP_Capture_Mode_Config@ret 0015  
                              _lcd_4bit_set_cursor 3FA8                                      _CCP_PWM_Start 44B2  
                             ?_ADC_StartConversion 000E                        lcd_4bit_send_string_pos@lcd 0027  
                      lcd_4bit_send_string_pos@ret 002D                        lcd_4bit_send_string_pos@row 0029  
                      lcd_4bit_send_string_pos@str 002B                             __end_of_ecu_layer_init 4A5C  
                       CCP_Compare_Mode_Config@ret 0015                      convert_uint16_to_string@F3702 0149  
                                   __end_of___flge 3A52                                        vfpfcnvrt@ap 003A  
                                      vfpfcnvrt@cp 0042                                        vfpfcnvrt@fp 0036  
                                      _BAUDCONbits 0FB8                                      __pidataCOMRAM 4AFA  
          adc_input_channel_port_configure@channel 0010                  ADC_StartConversion_Interrupt@_adc 0016  
                                   _timer0_preload 0098                          ??_CCP_Compare_Mode_Config 0013  
                                   __end_of_memset 2FD4                                     _timer1_preload 0070  
                                   _timer2_preload 00C1                       ?_configure_voltage_reference 000E  
                  __end_of_CCP_Capture_Mode_Config 33C0                                     __end_of_roundf 2142  
                              start_initialization 418A                                     _timer3_preload 0090  
                     ?_lcd_4bit_send_enable_signal 0018                               ?_lcd_4bit_set_cursor 0020  
                    convert_uint16_to_string@value 00C4                                        __end_of_abs 4828  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3600 0069   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3611 0065  
 MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3605 0068   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3607 0067  
 MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3609 0066                                        __end_of_pad 428A  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3596 006B  MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3598 006A  
                    ?_gpio_pin_direction_intialize 000E                               _CCP_Interrupt_Config 4866  
                          ?_application_initialize 0001           ADC_GetConversionResult@conversion_result 0003  
                           dc_motor_stop@_dc_motor 0018                          _EUSART_RxInterruptHandler 008C  
                            ADC_SelectChannel@_adc 0011               ADC_StartConversion_Interrupt@channel 0018  
                             __end_of_MSSP_I2C_ISR 4B18                                     ?_CCP_PWM_Start 000E  
                            ??_ADC_StartConversion 0010                                        vfprintf@fmt 0046  
                       _EUSART_FramingErrorHandler 008A                                           ??___flge 0016  
                                  ?_ecu_layer_init 0001                             ??_select_result_format 0010  
                                      __pdataBANK0 00F0                                        __pdataBANK1 0100  
                                         ?_ADC_ISR 0001                                           ??_memset 0014  
                            __end_of_EUSART_RX_ISR 4A02                              __end_of_EUSART_TX_ISR 4B2C  
                                       memset@dest 000E                       lcd_4bit_send_command@command 001E  
                                         ??_roundf 00CC                                   dc_motor_stop@ret 001A  
                          ADC_StartConversion@_adc 000E                                          ___fladd@a 0052  
                                        ___fladd@b 004E                               __end_of_MSSP_SPI_ISR 4B14  
                                        ___fldiv@a 0039                                          ___fldiv@b 0035  
                                         ?_RB4_ISR 0001                                           ?_RB5_ISR 0001  
                                         ?_RB6_ISR 0001                                          _lm35_res1 00C2  
                                         ?_RB7_ISR 0001                                          ___flmul@a 0020  
                                        ___flmul@b 001C                                        __pbssCOMRAM 0070  
                            ??_lcd_4bit_set_cursor 0024                                          ___flsub@a 00C8  
                                        ___flsub@b 00C4        _I2C_Report_Write_Collision_InterruptHandler 00B8  
                                    __pcstackBANK0 00C4                                      __pcstackBANK1 017B  
                    ??_configure_voltage_reference 0010                     __end_of_application_initialize 49D6  
                            ?_CCP_Interrupt_Config 000E                                    _MSSP_I2C_BC_ISR 4B18  
                      ADC_GetConversionResult@_adc 0001                              _INT2_InterruptHandler 00AE  
                  gpio_pin_direction_intialize@ret 0016                                    ??_dc_motor_stop 001A  
                            _TMR0_InterruptHandler 009A                                          __pnvBANK0 00FE  
                                     ?_Timer2_Init 000E                                          _main$5740 0183  
                                        _dtoa$5164 002D                                          __pintcode 0008  
         __end_of_adc_input_channel_port_configure 3B2A                 ??_adc_input_channel_port_configure 000E  
                ?_adc_input_channel_port_configure 0001                   _adc_input_channel_port_configure 3A52  
                                _ADC_SelectChannel 48A0                         ??_convert_uint16_to_string 0062  
                                         ?___fladd 004E                    gpio_pin_write_logic@_pin_config 000E  
                                         ?___fldiv 0035                                           ?___awdiv 000E  
                                         ?___flneg 000E                                           ?___awmod 000E  
                                         ?___flmul 001C                                           ?___flsub 00C4  
                                         ?___fltol 00E2                                 ?_ADC_SelectChannel 0011  
                        gpio_pin_write_logic@logic 0010                                        __smallconst 1000  
                        _RB4_InterruptHandler_HIGH 00AC                                           _CCP1_ISR 4B2C  
                                 CCP_PWM_Start@ret 0011                                           _CCP2_ISR 4948  
                              ??_ADC_SelectChannel 0014                                           _ADC_Init 3D7C  
                        _RB7_InterruptHandler_HIGH 00A0                      CCP_Mode_Timer_Select@_ccp_obj 000E  
                                      ADC_Init@ret 0014                                           _CCP_Init 3848  
                                         ?_sprintf 004C                                 _gpio_pin_intialize 43DE  
                   ??_gpio_pin_direction_intialize 0010                           _RB5_InterruptHandler_LOW 00A6  
                                         _INT0_ISR 4B24                                           _INT1_ISR 4B20  
                                         _INT2_ISR 4B1C                                           _RB4_Flag 006F  
                                         _RB5_Flag 006E                                           _RB6_Flag 006D  
                                  ??_CCP_PWM_Start 0010                                           _RB7_Flag 006C  
                                RB4_ISR@RB4_Source 0001                                ?_gpio_pin_intialize 0018  
                         __end_of_InterruptManager 1964                                           _PIE1bits 0F9D  
                                         _PIE2bits 0FA0                          __end_of_ADC_SelectChannel 48DA  
                    __end_of_lcd_4bit_send_command 436E                                           _PIR1bits 0F9E  
                                         _PIR2bits 0FA1                                           i2u724_40 498E  
                                         i2u732_40 495E                                           i2u724_41 498A  
                                         i2u732_41 495A                                           i2u741_40 49EA  
                                         i2u741_41 49E6                                           i2u670_40 3CFE  
                                         i2u725_48 4994                                           i2u733_48 4964  
                                         i2u742_40 49FE                                           i2u734_40 4ABE  
                                         i2u830_40 153C                                           i2u670_41 3CFA  
                                         i2u725_49 49A6                                           i2u733_49 4976  
                                         i2u742_41 49FA                                           i2u734_41 4ABA  
                                         i2u830_41 1538                                           i2u671_40 3D40  
                                         i2u735_40 4AA4                                           i2u831_40 154A  
                                         i2u671_41 3D3C                                           i2u735_41 4AA0  
                                         i2u831_41 1546                                           i2u736_40 4A8A  
                                         i2u840_40 15DC                                           i2u832_40 155C  
                                         i2u736_41 4A86                                           i2u840_41 15D8  
                                         i2u832_41 1558                                           i2u672_45 3D58  
                                         i2u737_40 4A70                                           i2u841_40 15EC  
                                         i2u833_40 156A                                           i2u737_41 4A6C  
                                         i2u841_41 15E8                                           i2u833_41 1566  
                                         i2u850_40 168C                                           i2u842_40 1604  
                                         i2u834_40 157C                                           i2u850_41 1688  
                                         i2u842_41 1600                                           i2u834_41 1578  
                                         i2u851_40 169A                                           i2u843_40 1612  
                                         i2u835_40 158A                                           i2u851_41 1696  
                                         i2u843_41 160E                                           i2u835_41 1586  
                                         i2u668_40 3CCA                                           i2u860_40 1730  
                                         i2u852_40 16A8                                           i2u844_40 1620  
                                         i2u836_40 1598                                           i2u828_40 151C  
                                         i2u668_41 3CC6                                           i2u860_41 172C  
                                         i2u852_41 16A4                                           i2u844_41 161C  
                                         i2u836_41 1594                                           i2u828_41 1518  
                                         i2u669_40 3CDC                                           i2u861_40 1740  
                                         i2u853_40 16B8                                           i2u845_40 1630  
                                         i2u837_40 15A8                                           i2u829_40 152A  
                                         i2u669_41 3CD8                                           i2u861_41 173C  
                                         i2u853_41 16B4                                           i2u845_41 162C  
                                         i2u837_41 15A4                                           i2u829_41 1526  
                                         i2u870_40 17DC                                           i2u862_40 1758  
                                         i2u854_40 16D0                                           i2u846_40 1648  
                                         i2u838_40 15C0                                           i2u870_41 17D8  
                                         i2u862_41 1754                                           i2u854_41 16CC  
                                         i2u846_41 1644                                           i2u838_41 15BC  
                                         i2u871_40 17EA                                           i2u863_40 1766  
                                         i2u855_40 16DE                                           i2u847_40 1656  
                                         i2u839_40 15CE                                           i2u871_41 17E6  
                                         i2u863_41 1762                                           i2u855_41 16DA  
                                         i2u847_41 1652                                           i2u839_41 15CA  
                                         i2u880_40 187C                                           i2u872_40 17FC  
                                         i2u864_40 1774                                           i2u856_40 16EC  
                                         i2u848_40 1664                                           i2u880_41 1878  
                                         i2u872_41 17F8                                           i2u864_41 1770  
                                         i2u856_41 16E8                                           i2u848_41 1660  
                                         i2u881_40 188A                                           i2u873_40 180A  
                                         i2u865_40 1784                                           i2u857_40 16FC  
                                         i2u849_40 1674                                           i2u881_41 1886  
                                         i2u873_41 1806                                           i2u865_41 1780  
                                         i2u857_41 16F8                                           i2u849_41 1670  
                                         i2u890_40 192C                                           i2u882_40 18A0  
                                         i2u874_40 181C                                           i2u866_40 179C  
                                         i2u858_40 1714                                           i2u890_41 1928  
                                         i2u882_41 189C                                           i2u874_41 1818  
                                         i2u866_41 1798                                           i2u858_41 1710  
                                         i2u891_40 193E                                           i2u883_40 18B2  
                                         i2u875_40 182A                                           i2u867_40 17AA  
                                         i2u859_40 1722                                           i2u891_41 193A  
                                         i2u883_41 18AE                                           i2u875_41 1826  
                                         i2u867_41 17A6                                           i2u859_41 171E  
                                         i2u892_40 194C                                           i2u884_40 18C0  
                                         i2u876_40 183C                                           i2u868_40 17BC  
                                         i2u892_41 1948                                           i2u884_41 18BC  
                                         i2u876_41 1838                                           i2u868_41 17B8  
                                         i2u885_40 18D6                                           i2u877_40 184A  
                                         i2u869_40 17CA                                           i2u885_41 18D2  
                                         i2u877_41 1846                                           i2u869_41 17C6  
                                         i2u886_40 18E8                                           i2u878_40 185C  
                                         i2u886_41 18E4                                           i2u878_41 1858  
                                         i2u887_40 18F6                                           i2u879_40 186A  
                                         i2u887_41 18F2                                           i2u879_41 1866  
                                         i2u888_40 190C                                           i2u888_41 1908  
                                         i2u889_40 191E                                           i2u889_41 191A  
                              _dc_motor_initialize 4828                       dc_motor_initialize@_dc_motor 001C  
                  ??_ADC_StartConversion_Interrupt 0019                                           _TMR0_ISR 4AE0  
                                         _TMR1_ISR 4AEE                                           _TMR2_ISR 4B06  
                                         _TMR3_ISR 4AD2                                 _lcd_4bit_intialize 3618  
                                        _vfpfcnvrt 33C0                           _lcd_4bit_send_string_pos 4050  
                                       _ADCON0bits 0FC2                                         _ADCON1bits 0FC1  
                                       _ADCON2bits 0FC0                            __end_of_MSSP_I2C_BC_ISR 4B1C  
                             ??_gpio_pin_intialize 001A                           ADC_SelectChannel@channel 0013  
                                ?_CCP_PWM_Set_Duty 00EA                                ?_lcd_4bit_intialize 0020  
                               ??_CCP_PWM_Set_Duty 00ED                             ??_CCP_Interrupt_Config 0010  
                             ?_dc_motor_initialize 001C                            gpio_pin_write_logic@ret 0017  
                                      _INTCON2bits 0FF1                                        _INTCON3bits 0FF0  
                         ?_lcd_4bit_send_char_data 001C                                          copy_data0 419E  
                                        copy_data1 41BE                                          copy_data2 41DE  
                              _dc_motor_move_right 46D6                                         roundf@F527 0080  
                                       _EECON1bits 0FA6                               ??_lcd_4bit_intialize 0022  
                                         __Hrparam 0000                                         vfprintf@ap 0048  
                                         __Lrparam 0000                                         vfprintf@fp 0044  
                         ?_ADC_GetConversionResult 0001                      __end_of_CCP_Mode_Timer_Select 43DE  
                                RB6_ISR@RB6_Source 0001                              _CCP1_InterruptHandler 00BC  
                           lcd_4bit_set_cursor@lcd 0020                             lcd_4bit_set_cursor@ret 0026  
                                       ?_vfpfcnvrt 0036                             lcd_4bit_set_cursor@row 0022  
                                         _ccp1_obj 012B                               ?_dc_motor_move_right 0018  
                               __end_of_btn_values 1011                              _TMR1_InterruptHandler 0096  
                                       sprintf@fmt 004E                                           ___xxtofl 2974  
                                     _MSSP_I2C_ISR 4B14                __end_of_ADC_DefaultinterruptHandler 4A42  
                      _ADC_DefaultinterruptHandler 4A26                              ??_dc_motor_initialize 001E  
                                         __ptext10 3E3C                                           __ptext11 4568  
                                         __ptext20 3EF8                                           __ptext12 4518  
                                         __ptext21 3BF4                                           __ptext13 33C0  
                                         __ptext30 40F0                                           __ptext22 2E5E  
                                         __ptext14 2CC8                                           __ptext31 3848  
                                         __ptext23 49A8                                           __ptext15 4210  
                                         __ptext40 3D7C                                           __ptext32 43DE  
                                         __ptext24 4A42                                           __ptext16 471C  
                                         __ptext41 4760                                           __ptext33 34EC  
                                         __ptext25 3618                                           __ptext17 3B2A  
                                         __ptext50 47A4                                           __ptext42 45B4  
                                         __ptext34 313C                                           __ptext26 42FC  
                                         __ptext18 4B30                                           __ptext51 4A02  
                                         __ptext43 44B2                                           __ptext35 279C  
                                         __ptext27 444A                                           __ptext19 47E8  
                                         __ptext60 4A76                                           __ptext52 48A0  
                                         __ptext44 2B28                                           __ptext36 4866  
                                         __ptext28 4912                                           __ptext61 4A90  
                                         __ptext53 3A52                                           __ptext45 2974  
                                         __ptext37 2FD4                                           __ptext29 4828  
                                         __ptext70 49D6                                           __ptext62 4AAA  
                                         __ptext46 3740                                           __ptext38 3280  
                                         __ptext71 4948                                           __ptext63 4B0E  
                                         __ptext55 4AD2                                           __ptext47 1964  
                                         __ptext39 436E                                           __ptext72 4B2C  
                                         __ptext64 4B14                                           __ptext56 4B06  
                                         __ptext48 2142                                           __ptext73 4978  
                                         __ptext65 4B18                                           __ptext57 4AEE  
                                         __ptext49 103C                                           __ptext74 4A26  
                                         __ptext66 4B1C                                           __ptext58 4AE0  
                                         __ptext75 3CB8                                           __ptext67 4B20  
                                         __ptext59 4A5C                                           __ptext76 0000  
                                         __ptext68 4B24                                           __ptext69 4B28  
                  configure_voltage_reference@_adc 000E                             dc_motor_move_right@ret 001A  
                    ??_ADC_DefaultinterruptHandler 0009                                       _MSSP_SPI_ISR 4B0E  
                                 ??_ecu_layer_init 0026                                        CCP_Init@ret 00EF  
              convert_uint16_to_string@DataCounter 00CF                   __end_of_convert_uint16_to_string 3EF8  
                                         isa$xinst 0000                                           int$flags 0072  
                                         _vfprintf 4518                              ??_dc_motor_move_right 001A  
                                   _lcd_send_4bits 444A              __end_of_ADC_StartConversion_Interrupt 47E8  
                    _ADC_StartConversion_Interrupt 47A4                                   ?_MSSP_I2C_BC_ISR 0001  
                                       _INTCONbits 0FF2                                     Timer2_Init@ret 0011  
                     __end_of_gpio_pin_write_logic 3618                                           intlevel2 0000  
                                        sprintf@ap 0054                        __end_of_ADC_StartConversion 4A26  
                   lcd_4bit_send_enable_signal@lcd 0018                     lcd_4bit_send_enable_signal@ret 001A  
                        _EUSART_TxInterruptHandler 008E                    __end_of_ADC_GetConversionResult 3D7C  
                          _CCP_Capture_Mode_Config 3280                           ?_CCP_Compare_Mode_Config 0011  
                           __end_of_lcd_send_4bits 44B2                       dc_motor_move_right@_dc_motor 0018  
                                      ??_vfpfcnvrt 003C                        __end_of_lcd_4bit_set_cursor 4050  
                              _CCP_PWM_Mode_Config 279C                                           sprintf@f 0056  
                                         sprintf@s 004C                                     _port_registers 0100  
                                      _SSPCON1bits 0FC6                                        _SSPCON2bits 0FC5  
                                    ___fladd@signs 005A                              _CCP2_InterruptHandler 00BA  
                             ?_CCP_PWM_Mode_Config 00EA                                       ___fladd@aexp 005B  
                                     ___fladd@bexp 005C                        lcd_4bit_send_char_data@data 001E  
                            _TMR2_InterruptHandler 0094                                  ?_InterruptManager 0001  
                            __end_of_dc_motor_stop 46D6                         ??_lcd_4bit_send_string_pos 002D  
                                      _roundf$5741 00D6                                        _roundf$5742 00D0  
